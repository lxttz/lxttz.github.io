<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Arlos Blog World🥝</title>
  
  
  <link href="https://lxttz.github.io/atom.xml" rel="self"/>
  
  <link href="https://lxttz.github.io/"/>
  <updated>2025-04-07T10:44:56.787Z</updated>
  <id>https://lxttz.github.io/</id>
  
  <author>
    <name>阿洛博客世界🥝</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="https://lxttz.github.io/posts/0.html"/>
    <id>https://lxttz.github.io/posts/0.html</id>
    <published>2025-04-07T10:45:16.783Z</published>
    <updated>2025-04-07T10:44:56.787Z</updated>
    
    <content type="html"><![CDATA[<h3 id="🤖-Assistant"><a href="#🤖-Assistant" class="headerlink" title="🤖 Assistant"></a>🤖 Assistant</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 🌱 SpringBoot + Vue 全栈开发指南</span></span><br><span class="line"></span><br><span class="line"><span class="section">## 🏗️ 一、技术架构概览</span></span><br><span class="line"><span class="section">### 后端技术栈 (SpringBoot)</span></span><br><span class="line"><span class="code">```mermaid</span></span><br><span class="line"><span class="code">graph TD</span></span><br><span class="line"><span class="code">    A[SpringBoot] --&gt; B[Spring MVC]</span></span><br><span class="line"><span class="code">    A --&gt; C[Spring Security]</span></span><br><span class="line"><span class="code">    A --&gt; D[MyBatis/MyBatis-Plus]</span></span><br><span class="line"><span class="code">    A --&gt; E[Spring Data JPA]</span></span><br><span class="line"><span class="code">    F[MySQL/PostgreSQL] --&gt; D</span></span><br><span class="line"><span class="code">    G[Redis] --&gt; C</span></span><br></pre></td></tr></table></figure><h3 id="前端技术栈-Vue"><a href="#前端技术栈-Vue" class="headerlink" title="前端技术栈 (Vue)"></a>前端技术栈 (Vue)</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">graph TD</span><br><span class="line">    A[Vue3] --&gt; B[Vue Router]</span><br><span class="line">    A --&gt; C[Pinia/Vuex]</span><br><span class="line">    A --&gt; D[Axios]</span><br><span class="line">    A --&gt; E[Element Plus/Ant Design Vue]</span><br><span class="line">    A --&gt; F[Vite]</span><br></pre></td></tr></table></figure><h2 id="📚-二、完整学习路径"><a href="#📚-二、完整学习路径" class="headerlink" title="📚 二、完整学习路径"></a>📚 二、完整学习路径</h2><h3 id="1-基础阶段（2-4周）"><a href="#1-基础阶段（2-4周）" class="headerlink" title="1. 基础阶段（2-4周）"></a>1. 基础阶段（2-4周）</h3><h4 id="后端基础"><a href="#后端基础" class="headerlink" title="后端基础"></a>后端基础</h4><ul><li>✅ SpringBoot核心特性<ul><li>自动配置原理</li><li>Starter机制</li><li>Actuator监控</li></ul></li><li>✅ RESTful API设计<ul><li>常用注解：@RestController, @RequestMapping</li><li>统一响应封装</li><li>全局异常处理</li></ul></li></ul><h4 id="前端基础"><a href="#前端基础" class="headerlink" title="前端基础"></a>前端基础</h4><ul><li>🖥️ Vue3核心语法<ul><li>Composition API</li><li>响应式原理(ref/reactive)</li><li>组件通信</li></ul></li><li>🌐 Vue Router 4.x<ul><li>动态路由</li><li>导航守卫</li><li>路由懒加载</li></ul></li></ul><h3 id="2-进阶阶段（3-5周）"><a href="#2-进阶阶段（3-5周）" class="headerlink" title="2. 进阶阶段（3-5周）"></a>2. 进阶阶段（3-5周）</h3><h4 id="后端进阶"><a href="#后端进阶" class="headerlink" title="后端进阶"></a>后端进阶</h4><ul><li>🛡️ 安全控制<ul><li>JWT实现</li><li>Spring Security配置</li><li>权限注解(@PreAuthorize)</li></ul></li><li>🔄 数据持久化<ul><li>MyBatis动态SQL</li><li>多数据源配置</li><li>事务管理</li></ul></li></ul><h4 id="前端进阶"><a href="#前端进阶" class="headerlink" title="前端进阶"></a>前端进阶</h4><ul><li>🏪 状态管理<ul><li>Pinia基础</li><li>模块化设计</li><li>持久化存储</li></ul></li><li>📡 网络请求<ul><li>Axios封装</li><li>请求拦截器</li><li>错误统一处理</li></ul></li></ul><h2 id="🚀-三、项目快速搭建指南"><a href="#🚀-三、项目快速搭建指南" class="headerlink" title="🚀 三、项目快速搭建指南"></a>🚀 三、项目快速搭建指南</h2><h3 id="1-环境准备"><a href="#1-环境准备" class="headerlink" title="1. 环境准备"></a>1. 环境准备</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 后端环境</span></span><br><span class="line">JDK 17+</span><br><span class="line">Maven 3.8+</span><br><span class="line">MySQL 8.0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 前端环境</span></span><br><span class="line">Node.js 16+</span><br><span class="line">npm/yarn/pnpm</span><br></pre></td></tr></table></figure><h3 id="2-项目初始化"><a href="#2-项目初始化" class="headerlink" title="2. 项目初始化"></a>2. 项目初始化</h3><h4 id="后端创建"><a href="#后端创建" class="headerlink" title="后端创建"></a>后端创建</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用Spring Initializr</span></span><br><span class="line">https://start.spring.io/</span><br><span class="line"></span><br><span class="line">选择依赖：</span><br><span class="line">- Spring Web</span><br><span class="line">- Lombok</span><br><span class="line">- MyBatis Framework</span><br><span class="line">- MySQL Driver</span><br></pre></td></tr></table></figure><h4 id="前端创建"><a href="#前端创建" class="headerlink" title="前端创建"></a>前端创建</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm create vite@latest frontend --template vue</span><br><span class="line"><span class="built_in">cd</span> frontend</span><br><span class="line">npm install vue-router pinia axios element-plus</span><br></pre></td></tr></table></figure><h3 id="3-关键配置示例"><a href="#3-关键配置示例" class="headerlink" title="3. 关键配置示例"></a>3. 关键配置示例</h3><h4 id="后端配置"><a href="#后端配置" class="headerlink" title="后端配置"></a>后端配置</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// application.yml</span></span><br><span class="line">spring:</span><br><span class="line">  datasource:</span><br><span class="line">    url: jdbc:mysql:<span class="comment">//localhost:3306/demo</span></span><br><span class="line">    username: root</span><br><span class="line">    password: <span class="number">123456</span></span><br><span class="line">    driver-class-name: com.mysql.cj.jdbc.Driver</span><br><span class="line"></span><br><span class="line">mybatis:</span><br><span class="line">  mapper-locations: classpath:mapper<span class="comment">/*.xml</span></span><br></pre></td></tr></table></figure><h4 id="前端配置"><a href="#前端配置" class="headerlink" title="前端配置"></a>前端配置</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// vite.config.js</span></span><br><span class="line"><span class="keyword">import</span> &#123; defineConfig &#125; <span class="keyword">from</span> <span class="string">&#x27;vite&#x27;</span></span><br><span class="line"><span class="keyword">import</span> vue <span class="keyword">from</span> <span class="string">&#x27;@vitejs/plugin-vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; fileURLToPath &#125; <span class="keyword">from</span> <span class="string">&#x27;url&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineConfig</span>(&#123;</span><br><span class="line">  <span class="attr">plugins</span>: [<span class="title function_">vue</span>()],</span><br><span class="line">  <span class="attr">resolve</span>: &#123;</span><br><span class="line">    <span class="attr">alias</span>: &#123;</span><br><span class="line">      <span class="string">&#x27;@&#x27;</span>: <span class="title function_">fileURLToPath</span>(<span class="keyword">new</span> <span class="title function_">URL</span>(<span class="string">&#x27;./src&#x27;</span>, <span class="keyword">import</span>.<span class="property">meta</span>.<span class="property">url</span>))</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">server</span>: &#123;</span><br><span class="line">    <span class="attr">proxy</span>: &#123;</span><br><span class="line">      <span class="string">&#x27;/api&#x27;</span>: &#123;</span><br><span class="line">        <span class="attr">target</span>: <span class="string">&#x27;http://localhost:8080&#x27;</span>,</span><br><span class="line">        <span class="attr">changeOrigin</span>: <span class="literal">true</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="🔧-四、开发实用技巧"><a href="#🔧-四、开发实用技巧" class="headerlink" title="🔧 四、开发实用技巧"></a>🔧 四、开发实用技巧</h2><h3 id="跨域解决方案"><a href="#跨域解决方案" class="headerlink" title="跨域解决方案"></a>跨域解决方案</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 后端配置CORS</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CorsConfig</span> <span class="keyword">implements</span> <span class="title class_">WebMvcConfigurer</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addCorsMappings</span><span class="params">(CorsRegistry registry)</span> &#123;</span><br><span class="line">        registry.addMapping(<span class="string">&quot;/**&quot;</span>)</span><br><span class="line">                .allowedOrigins(<span class="string">&quot;*&quot;</span>)</span><br><span class="line">                .allowedMethods(<span class="string">&quot;*&quot;</span>)</span><br><span class="line">                .maxAge(<span class="number">3600</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="全局异常处理"><a href="#全局异常处理" class="headerlink" title="全局异常处理"></a>全局异常处理</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ControllerAdvice</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GlobalExceptionHandler</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ExceptionHandler(Exception.class)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="keyword">public</span> Result&lt;String&gt; <span class="title function_">handleException</span><span class="params">(Exception e)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> Result.error(e.getMessage());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="前端API封装"><a href="#前端API封装" class="headerlink" title="前端API封装"></a>前端API封装</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// src/api/index.js</span></span><br><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> service = axios.<span class="title function_">create</span>(&#123;</span><br><span class="line">  <span class="attr">baseURL</span>: <span class="string">&#x27;/api&#x27;</span>,</span><br><span class="line">  <span class="attr">timeout</span>: <span class="number">10000</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 请求拦截器</span></span><br><span class="line">service.<span class="property">interceptors</span>.<span class="property">request</span>.<span class="title function_">use</span>(<span class="function"><span class="params">config</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> token = <span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&#x27;token&#x27;</span>)</span><br><span class="line">  <span class="keyword">if</span> (token) &#123;</span><br><span class="line">    config.<span class="property">headers</span>[<span class="string">&#x27;Authorization&#x27;</span>] = <span class="string">`Bearer <span class="subst">$&#123;token&#125;</span>`</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> config</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 响应拦截器</span></span><br><span class="line">service.<span class="property">interceptors</span>.<span class="property">response</span>.<span class="title function_">use</span>(</span><br><span class="line">  <span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> response.<span class="property">data</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(error)</span><br><span class="line">  &#125;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> service</span><br></pre></td></tr></table></figure><h2 id="📦-五、部署方案"><a href="#📦-五、部署方案" class="headerlink" title="📦 五、部署方案"></a>📦 五、部署方案</h2><h3 id="1-后端打包"><a href="#1-后端打包" class="headerlink" title="1. 后端打包"></a>1. 后端打包</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mvn clean package -DskipTests</span><br><span class="line">java -jar target/demo-0.0.1-SNAPSHOT.jar</span><br></pre></td></tr></table></figure><h3 id="2-前端打包"><a href="#2-前端打包" class="headerlink" title="2. 前端打包"></a>2. 前端打包</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run build</span><br></pre></td></tr></table></figure><h3 id="3-部署架构选择"><a href="#3-部署架构选择" class="headerlink" title="3. 部署架构选择"></a>3. 部署架构选择</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1.</span> 传统部署</span><br><span class="line"><span class="bullet">   -</span> Nginx反向代理</span><br><span class="line"><span class="bullet">   -</span> 静态资源部署</span><br><span class="line"></span><br><span class="line"><span class="bullet">2.</span> Docker化部署</span><br><span class="line"><span class="bullet">   -</span> Docker Compose编排</span><br><span class="line"><span class="bullet">   -</span> Nginx容器配置</span><br><span class="line"></span><br><span class="line"><span class="bullet">3.</span> CI/CD方案</span><br><span class="line"><span class="bullet">   -</span> Jenkins Pipeline</span><br><span class="line"><span class="bullet">   -</span> GitHub Actions</span><br></pre></td></tr></table></figure><h2 id="📝-六、学习资源推荐"><a href="#📝-六、学习资源推荐" class="headerlink" title="📝 六、学习资源推荐"></a>📝 六、学习资源推荐</h2><ul><li>书籍：<ul><li>《Spring Boot实战》</li><li>《Vue.js设计与实现》</li></ul></li><li>视频：<ul><li>B站尚硅谷SpringBoot+Vue全栈课程</li></ul></li><li>文档：<ul><li><a href="https://spring.io/projects/spring-boot">Spring官方文档</a></li><li><a href="https://vuejs.org/">Vue官方文档</a></li></ul></li><li>社区：<ul><li>StackOverflow</li><li>GitHub热门开源项目</li></ul></li></ul><h2 id="🚨-常见问题排查"><a href="#🚨-常见问题排查" class="headerlink" title="🚨 常见问题排查"></a>🚨 常见问题排查</h2><ol><li>端口冲突：检查8080/3000端口占用</li><li>数据库连接失败：检查MySQL服务状态和账号权限</li><li>跨域问题：确保前后端CORS配置正确</li><li><p>前端路由404：配置Nginx重定向规则</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">   </span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;🤖-Assistant&quot;&gt;&lt;a href=&quot;#🤖-Assistant&quot; class=&quot;headerlink&quot; title=&quot;🤖 Assistant&quot;&gt;&lt;/a&gt;🤖 Assistant&lt;/h3&gt;&lt;figure class=&quot;highlight markdown</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>SpringBoot+Vue 项目知识点总结</title>
    <link href="https://lxttz.github.io/posts/502688e5.html"/>
    <id>https://lxttz.github.io/posts/502688e5.html</id>
    <published>2025-04-07T07:25:11.000Z</published>
    <updated>2025-04-07T10:45:56.552Z</updated>
    
    <content type="html"><![CDATA[<h3 id="🤖-Assistant"><a href="#🤖-Assistant" class="headerlink" title="🤖 Assistant"></a>🤖 Assistant</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 📚 SpringBoot + Vue 项目知识点总结  </span></span><br><span class="line"></span><br><span class="line"><span class="section">## 🚀 学习路径  </span></span><br><span class="line"><span class="bullet">1.</span> <span class="strong">**前置知识**</span>  </span><br><span class="line"><span class="bullet">   -</span> ✅ Java 基础 + Spring 框架  </span><br><span class="line"><span class="bullet">   -</span> ✅ Vue.js 基础（组件、路由、状态管理）  </span><br><span class="line"><span class="bullet">   -</span> ✅ RESTful API 概念  </span><br><span class="line"><span class="bullet">   -</span> ✅ MySQL / PostgreSQL 数据库基础  </span><br><span class="line"></span><br><span class="line"><span class="bullet">2.</span> <span class="strong">**学习顺序**</span>  </span><br><span class="line"><span class="bullet">   -</span> <span class="strong">**后端（SpringBoot）→ 前端（Vue）→ 整合（前后端分离开发）**</span>  </span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line"><span class="section">## 📌 核心知识点  </span></span><br><span class="line"></span><br><span class="line"><span class="section">### 🛠 <span class="strong">**后端（SpringBoot）**</span>  </span></span><br><span class="line"><span class="bullet">1.</span> <span class="strong">**基础框架**</span>  </span><br><span class="line"><span class="bullet">   -</span> <span class="code">`@SpringBootApplication`</span> 启动类  </span><br><span class="line"><span class="bullet">   -</span> <span class="code">`Spring MVC`</span> 架构（Controller-Service-Repository）  </span><br><span class="line"><span class="bullet">   -</span> <span class="code">`Spring Data JPA`</span> / <span class="code">`MyBatis`</span> 数据库操作  </span><br><span class="line"></span><br><span class="line"><span class="bullet">2.</span> <span class="strong">**核心注解**</span>  </span><br><span class="line"><span class="bullet">   -</span> <span class="code">`@RestController`</span> (返回 JSON)  </span><br><span class="line"><span class="bullet">   -</span> <span class="code">`@RequestMapping`</span> / <span class="code">`@GetMapping`</span> / <span class="code">`@PostMapping`</span>  </span><br><span class="line"><span class="bullet">   -</span> <span class="code">`@Autowired`</span> 依赖注入  </span><br><span class="line"></span><br><span class="line"><span class="bullet">3.</span> <span class="strong">**数据库 &amp; ORM**</span>  </span><br><span class="line"><span class="bullet">   -</span> JPA 方法命名查询 / <span class="code">`@Query`</span>  </span><br><span class="line"><span class="bullet">   -</span> <span class="code">`@Entity`</span> 实体类映射  </span><br><span class="line"><span class="bullet">   -</span> 分页（<span class="code">`Pageable`</span>）  </span><br><span class="line"></span><br><span class="line"><span class="bullet">4.</span> <span class="strong">**安全 &amp; 认证**</span>  </span><br><span class="line"><span class="bullet">   -</span> <span class="code">`Spring Security`</span> / <span class="code">`JWT`</span> 鉴权  </span><br><span class="line"></span><br><span class="line"><span class="bullet">5.</span> <span class="strong">**API 规范**</span>  </span><br><span class="line"><span class="bullet">   -</span> RESTful 接口设计  </span><br><span class="line"><span class="bullet">   -</span> Swagger / OpenAPI 文档  </span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line"><span class="section">### 🎨 <span class="strong">**前端（Vue）**</span>  </span></span><br><span class="line"><span class="bullet">1.</span> <span class="strong">**核心概念**</span>  </span><br><span class="line"><span class="bullet">   -</span> Vue 组件化开发  </span><br><span class="line"><span class="bullet">   -</span> 数据绑定（<span class="code">`v-model`</span>）  </span><br><span class="line"><span class="bullet">   -</span> 生命周期钩子（<span class="code">`created`</span>, <span class="code">`mounted`</span>）  </span><br><span class="line"></span><br><span class="line"><span class="bullet">2.</span> <span class="strong">**状态管理**</span>  </span><br><span class="line"><span class="bullet">   -</span> <span class="code">`Vuex`</span>（集中式状态）  </span><br><span class="line"><span class="bullet">   -</span> <span class="code">`Pinia`</span>（推荐新项目使用）  </span><br><span class="line"></span><br><span class="line"><span class="bullet">3.</span> <span class="strong">**路由**</span>  </span><br><span class="line"><span class="bullet">   -</span> <span class="code">`vue-router`</span>（动态路由、嵌套路由）  </span><br><span class="line"></span><br><span class="line"><span class="bullet">4.</span> <span class="strong">**HTTP 请求**</span>  </span><br><span class="line"><span class="bullet">   -</span> <span class="code">`axios`</span> 调用后端 REST API  </span><br><span class="line"></span><br><span class="line"><span class="bullet">5.</span> <span class="strong">**UI 框架（可选）**</span>  </span><br><span class="line"><span class="bullet">   -</span> Element Plus / Ant Design Vue  </span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line"><span class="section">## 🔥 快速搭建 SpringBoot + Vue 项目  </span></span><br><span class="line"></span><br><span class="line"><span class="section">### 步骤 1: 初始化后端（SpringBoot）  </span></span><br><span class="line"><span class="bullet">1.</span> 使用 [<span class="string">Spring Initializr</span>](<span class="link">https://start.spring.io/</span>) 生成项目:  </span><br><span class="line"><span class="bullet">   -</span> 勾选 <span class="code">`Spring Web`</span>, <span class="code">`Lombok`</span>, <span class="code">`Spring Data JPA`</span>, <span class="code">`MySQL Driver`</span>  </span><br><span class="line"></span><br><span class="line"><span class="bullet">2.</span> 编写 <span class="code">`UserController`</span>:  </span><br><span class="line">   <span class="code">```java</span></span><br><span class="line"><span class="code">   @RestController</span></span><br><span class="line"><span class="code">   @RequestMapping(&quot;/api/users&quot;)</span></span><br><span class="line"><span class="code">   public class UserController &#123;</span></span><br><span class="line"><span class="code">       @Autowired</span></span><br><span class="line"><span class="code">       private UserService userService;</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code">       @GetMapping</span></span><br><span class="line"><span class="code">       public List&lt;User&gt; getAllUsers() &#123;</span></span><br><span class="line"><span class="code">           return userService.findAll();</span></span><br><span class="line"><span class="code">       &#125;</span></span><br><span class="line"><span class="code">   &#125;</span></span><br></pre></td></tr></table></figure><ol><li>配置 <code>application.properties</code>:  <figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring.datasource.url</span>=<span class="string">jdbc:mysql://localhost:3306/your_db</span></span><br><span class="line"><span class="attr">spring.datasource.username</span>=<span class="string">root</span></span><br><span class="line"><span class="attr">spring.datasource.password</span>=<span class="string">123456</span></span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="步骤-2-初始化前端（Vue）"><a href="#步骤-2-初始化前端（Vue）" class="headerlink" title="步骤 2: 初始化前端（Vue）"></a>步骤 2: 初始化前端（Vue）</h3><ol><li><p>用 Vite 创建 Vue 项目:  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm init vite@latest frontend --template vue</span><br><span class="line"><span class="built_in">cd</span> frontend &amp;&amp; npm install axios vue-router pinia</span><br></pre></td></tr></table></figure></li><li><p>调用后端 API（<code>src/api/user.js</code>）:  </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">getUsers</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> axios.<span class="title function_">get</span>(<span class="string">&#x27;http://localhost:8080/api/users&#x27;</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li><li><p>跨域配置（<code>vite.config.js</code>）:  </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineConfig</span>(&#123;</span><br><span class="line">  <span class="attr">server</span>: &#123;</span><br><span class="line">    <span class="attr">proxy</span>: &#123;</span><br><span class="line">      <span class="string">&#x27;/api&#x27;</span>: <span class="string">&#x27;http://localhost:8080&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li></ol><hr><h2 id="📝-学习资源推荐"><a href="#📝-学习资源推荐" class="headerlink" title="📝 学习资源推荐"></a>📝 学习资源推荐</h2><ul><li><strong>SpringBoot</strong>: Baeldung / 官方文档  </li><li><strong>Vue</strong>: 官方文档 + Vue Mastery 教程  </li><li><strong>实战</strong>: GitHub 开源项目（如 <code>eladmin-web</code> + <code>eladmin</code>）  </li></ul><h2 id="🌟-学习建议"><a href="#🌟-学习建议" class="headerlink" title="🌟 学习建议"></a>🌟 学习建议</h2><ul><li>先单独调试后端（Postman 测试 API）  </li><li>再调试前端（Chrome DevTools 看请求）  </li><li>最后联调（解决跨域、数据格式问题）  </li></ul><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### 🎯 效果说明  </span><br><span class="line">- 使用了 Emoji 图标增强可读性  </span><br><span class="line">- 分模块拆解知识点  </span><br><span class="line">- 提供可操作的代码片段  </span><br><span class="line">- 强调前后端分离的核心逻辑</span><br><span class="line"></span><br><span class="line">### 🤖 Assistant</span><br><span class="line"></span><br><span class="line">```markdown</span><br><span class="line"># 🌱 SpringBoot + Vue 全栈开发指南</span><br><span class="line"></span><br><span class="line">## 🏗️ 一、技术架构概览</span><br><span class="line">### 后端技术栈 (SpringBoot)</span><br><span class="line">```mermaid</span><br><span class="line">graph TD</span><br><span class="line">    A[SpringBoot] --&gt; B[Spring MVC]</span><br><span class="line">    A --&gt; C[Spring Security]</span><br><span class="line">    A --&gt; D[MyBatis/MyBatis-Plus]</span><br><span class="line">    A --&gt; E[Spring Data JPA]</span><br><span class="line">    F[MySQL/PostgreSQL] --&gt; D</span><br><span class="line">    G[Redis] --&gt; C</span><br></pre></td></tr></table></figure><h3 id="前端技术栈-Vue"><a href="#前端技术栈-Vue" class="headerlink" title="前端技术栈 (Vue)"></a>前端技术栈 (Vue)</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">graph TD</span><br><span class="line">    A[Vue3] --&gt; B[Vue Router]</span><br><span class="line">    A --&gt; C[Pinia/Vuex]</span><br><span class="line">    A --&gt; D[Axios]</span><br><span class="line">    A --&gt; E[Element Plus/Ant Design Vue]</span><br><span class="line">    A --&gt; F[Vite]</span><br></pre></td></tr></table></figure><h2 id="📚-二、完整学习路径"><a href="#📚-二、完整学习路径" class="headerlink" title="📚 二、完整学习路径"></a>📚 二、完整学习路径</h2><h3 id="1-基础阶段（2-4周）"><a href="#1-基础阶段（2-4周）" class="headerlink" title="1. 基础阶段（2-4周）"></a>1. 基础阶段（2-4周）</h3><h4 id="后端基础"><a href="#后端基础" class="headerlink" title="后端基础"></a>后端基础</h4><ul><li>✅ SpringBoot核心特性<ul><li>自动配置原理</li><li>Starter机制</li><li>Actuator监控</li></ul></li><li>✅ RESTful API设计<ul><li>常用注解：@RestController, @RequestMapping</li><li>统一响应封装</li><li>全局异常处理</li></ul></li></ul><h4 id="前端基础"><a href="#前端基础" class="headerlink" title="前端基础"></a>前端基础</h4><ul><li>🖥️ Vue3核心语法<ul><li>Composition API</li><li>响应式原理(ref/reactive)</li><li>组件通信</li></ul></li><li>🌐 Vue Router 4.x<ul><li>动态路由</li><li>导航守卫</li><li>路由懒加载</li></ul></li></ul><h3 id="2-进阶阶段（3-5周）"><a href="#2-进阶阶段（3-5周）" class="headerlink" title="2. 进阶阶段（3-5周）"></a>2. 进阶阶段（3-5周）</h3><h4 id="后端进阶"><a href="#后端进阶" class="headerlink" title="后端进阶"></a>后端进阶</h4><ul><li>🛡️ 安全控制<ul><li>JWT实现</li><li>Spring Security配置</li><li>权限注解(@PreAuthorize)</li></ul></li><li>🔄 数据持久化<ul><li>MyBatis动态SQL</li><li>多数据源配置</li><li>事务管理</li></ul></li></ul><h4 id="前端进阶"><a href="#前端进阶" class="headerlink" title="前端进阶"></a>前端进阶</h4><ul><li>🏪 状态管理<ul><li>Pinia基础</li><li>模块化设计</li><li>持久化存储</li></ul></li><li>📡 网络请求<ul><li>Axios封装</li><li>请求拦截器</li><li>错误统一处理</li></ul></li></ul><h2 id="🚀-三、项目快速搭建指南"><a href="#🚀-三、项目快速搭建指南" class="headerlink" title="🚀 三、项目快速搭建指南"></a>🚀 三、项目快速搭建指南</h2><h3 id="1-环境准备"><a href="#1-环境准备" class="headerlink" title="1. 环境准备"></a>1. 环境准备</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 后端环境</span></span><br><span class="line">JDK 17+</span><br><span class="line">Maven 3.8+</span><br><span class="line">MySQL 8.0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 前端环境</span></span><br><span class="line">Node.js 16+</span><br><span class="line">npm/yarn/pnpm</span><br></pre></td></tr></table></figure><h3 id="2-项目初始化"><a href="#2-项目初始化" class="headerlink" title="2. 项目初始化"></a>2. 项目初始化</h3><h4 id="后端创建"><a href="#后端创建" class="headerlink" title="后端创建"></a>后端创建</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用Spring Initializr</span></span><br><span class="line">https://start.spring.io/</span><br><span class="line"></span><br><span class="line">选择依赖：</span><br><span class="line">- Spring Web</span><br><span class="line">- Lombok</span><br><span class="line">- MyBatis Framework</span><br><span class="line">- MySQL Driver</span><br></pre></td></tr></table></figure><h4 id="前端创建"><a href="#前端创建" class="headerlink" title="前端创建"></a>前端创建</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm create vite@latest frontend --template vue</span><br><span class="line"><span class="built_in">cd</span> frontend</span><br><span class="line">npm install vue-router pinia axios element-plus</span><br></pre></td></tr></table></figure><h3 id="3-关键配置示例"><a href="#3-关键配置示例" class="headerlink" title="3. 关键配置示例"></a>3. 关键配置示例</h3><h4 id="后端配置"><a href="#后端配置" class="headerlink" title="后端配置"></a>后端配置</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// application.yml</span></span><br><span class="line">spring:</span><br><span class="line">  datasource:</span><br><span class="line">    url: jdbc:mysql:<span class="comment">//localhost:3306/demo</span></span><br><span class="line">    username: root</span><br><span class="line">    password: <span class="number">123456</span></span><br><span class="line">    driver-class-name: com.mysql.cj.jdbc.Driver</span><br><span class="line"></span><br><span class="line">mybatis:</span><br><span class="line">  mapper-locations: classpath:mapper<span class="comment">/*.xml</span></span><br></pre></td></tr></table></figure><h4 id="前端配置"><a href="#前端配置" class="headerlink" title="前端配置"></a>前端配置</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// vite.config.js</span></span><br><span class="line"><span class="keyword">import</span> &#123; defineConfig &#125; <span class="keyword">from</span> <span class="string">&#x27;vite&#x27;</span></span><br><span class="line"><span class="keyword">import</span> vue <span class="keyword">from</span> <span class="string">&#x27;@vitejs/plugin-vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; fileURLToPath &#125; <span class="keyword">from</span> <span class="string">&#x27;url&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineConfig</span>(&#123;</span><br><span class="line">  <span class="attr">plugins</span>: [<span class="title function_">vue</span>()],</span><br><span class="line">  <span class="attr">resolve</span>: &#123;</span><br><span class="line">    <span class="attr">alias</span>: &#123;</span><br><span class="line">      <span class="string">&#x27;@&#x27;</span>: <span class="title function_">fileURLToPath</span>(<span class="keyword">new</span> <span class="title function_">URL</span>(<span class="string">&#x27;./src&#x27;</span>, <span class="keyword">import</span>.<span class="property">meta</span>.<span class="property">url</span>))</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">server</span>: &#123;</span><br><span class="line">    <span class="attr">proxy</span>: &#123;</span><br><span class="line">      <span class="string">&#x27;/api&#x27;</span>: &#123;</span><br><span class="line">        <span class="attr">target</span>: <span class="string">&#x27;http://localhost:8080&#x27;</span>,</span><br><span class="line">        <span class="attr">changeOrigin</span>: <span class="literal">true</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="🔧-四、开发实用技巧"><a href="#🔧-四、开发实用技巧" class="headerlink" title="🔧 四、开发实用技巧"></a>🔧 四、开发实用技巧</h2><h3 id="跨域解决方案"><a href="#跨域解决方案" class="headerlink" title="跨域解决方案"></a>跨域解决方案</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 后端配置CORS</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CorsConfig</span> <span class="keyword">implements</span> <span class="title class_">WebMvcConfigurer</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addCorsMappings</span><span class="params">(CorsRegistry registry)</span> &#123;</span><br><span class="line">        registry.addMapping(<span class="string">&quot;/**&quot;</span>)</span><br><span class="line">                .allowedOrigins(<span class="string">&quot;*&quot;</span>)</span><br><span class="line">                .allowedMethods(<span class="string">&quot;*&quot;</span>)</span><br><span class="line">                .maxAge(<span class="number">3600</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="全局异常处理"><a href="#全局异常处理" class="headerlink" title="全局异常处理"></a>全局异常处理</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ControllerAdvice</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GlobalExceptionHandler</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ExceptionHandler(Exception.class)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="keyword">public</span> Result&lt;String&gt; <span class="title function_">handleException</span><span class="params">(Exception e)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> Result.error(e.getMessage());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="前端API封装"><a href="#前端API封装" class="headerlink" title="前端API封装"></a>前端API封装</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// src/api/index.js</span></span><br><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> service = axios.<span class="title function_">create</span>(&#123;</span><br><span class="line">  <span class="attr">baseURL</span>: <span class="string">&#x27;/api&#x27;</span>,</span><br><span class="line">  <span class="attr">timeout</span>: <span class="number">10000</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 请求拦截器</span></span><br><span class="line">service.<span class="property">interceptors</span>.<span class="property">request</span>.<span class="title function_">use</span>(<span class="function"><span class="params">config</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> token = <span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&#x27;token&#x27;</span>)</span><br><span class="line">  <span class="keyword">if</span> (token) &#123;</span><br><span class="line">    config.<span class="property">headers</span>[<span class="string">&#x27;Authorization&#x27;</span>] = <span class="string">`Bearer <span class="subst">$&#123;token&#125;</span>`</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> config</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 响应拦截器</span></span><br><span class="line">service.<span class="property">interceptors</span>.<span class="property">response</span>.<span class="title function_">use</span>(</span><br><span class="line">  <span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> response.<span class="property">data</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(error)</span><br><span class="line">  &#125;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> service</span><br></pre></td></tr></table></figure><h2 id="📦-五、部署方案"><a href="#📦-五、部署方案" class="headerlink" title="📦 五、部署方案"></a>📦 五、部署方案</h2><h3 id="1-后端打包"><a href="#1-后端打包" class="headerlink" title="1. 后端打包"></a>1. 后端打包</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mvn clean package -DskipTests</span><br><span class="line">java -jar target/demo-0.0.1-SNAPSHOT.jar</span><br></pre></td></tr></table></figure><h3 id="2-前端打包"><a href="#2-前端打包" class="headerlink" title="2. 前端打包"></a>2. 前端打包</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run build</span><br></pre></td></tr></table></figure><h3 id="3-部署架构选择"><a href="#3-部署架构选择" class="headerlink" title="3. 部署架构选择"></a>3. 部署架构选择</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1.</span> 传统部署</span><br><span class="line"><span class="bullet">   -</span> Nginx反向代理</span><br><span class="line"><span class="bullet">   -</span> 静态资源部署</span><br><span class="line"></span><br><span class="line"><span class="bullet">2.</span> Docker化部署</span><br><span class="line"><span class="bullet">   -</span> Docker Compose编排</span><br><span class="line"><span class="bullet">   -</span> Nginx容器配置</span><br><span class="line"></span><br><span class="line"><span class="bullet">3.</span> CI/CD方案</span><br><span class="line"><span class="bullet">   -</span> Jenkins Pipeline</span><br><span class="line"><span class="bullet">   -</span> GitHub Actions</span><br></pre></td></tr></table></figure><h2 id="📝-六、学习资源推荐"><a href="#📝-六、学习资源推荐" class="headerlink" title="📝 六、学习资源推荐"></a>📝 六、学习资源推荐</h2><ul><li>书籍：<ul><li>《Spring Boot实战》</li><li>《Vue.js设计与实现》</li></ul></li><li>视频：<ul><li>B站尚硅谷SpringBoot+Vue全栈课程</li></ul></li><li>文档：<ul><li><a href="https://spring.io/projects/spring-boot">Spring官方文档</a></li><li><a href="https://vuejs.org/">Vue官方文档</a></li></ul></li><li>社区：<ul><li>StackOverflow</li><li>GitHub热门开源项目</li></ul></li></ul><h2 id="🚨-常见问题排查"><a href="#🚨-常见问题排查" class="headerlink" title="🚨 常见问题排查"></a>🚨 常见问题排查</h2><ol><li>端口冲突：检查8080/3000端口占用</li><li>数据库连接失败：检查MySQL服务状态和账号权限</li><li>跨域问题：确保前后端CORS配置正确</li><li><p>前端路由404：配置Nginx重定向规则</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">   </span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
    <summary type="html">SpringBoot + Vue 项目知识点总结</summary>
    
    
    
    <category term="SpringBoot" scheme="https://lxttz.github.io/categories/SpringBoot/"/>
    
    <category term="Vue" scheme="https://lxttz.github.io/categories/SpringBoot/Vue/"/>
    
    
    <category term="SpringBoot+Vue 项目知识点总结" scheme="https://lxttz.github.io/tags/SpringBoot-Vue-%E9%A1%B9%E7%9B%AE%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>解决博客文章嵌入网页显示不足的方法</title>
    <link href="https://lxttz.github.io/posts/42339686.html"/>
    <id>https://lxttz.github.io/posts/42339686.html</id>
    <published>2025-03-27T09:57:32.000Z</published>
    <updated>2025-03-27T10:00:10.168Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一般代码"><a href="#一般代码" class="headerlink" title="一般代码"></a>一般代码</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">align</span>=<span class="string">center</span> <span class="attr">class</span>=<span class="string">&quot;aspect-ratio&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;https://geekprank.com/hacker/&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">scrolling</span>=<span class="string">&quot;true&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">border</span>=<span class="string">&quot;0&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">frameborder</span>=<span class="string">&quot;true&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">framespacing</span>=<span class="string">&quot;0&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">high_quality</span>=<span class="string">1</span></span></span><br><span class="line"><span class="tag">    <span class="attr">danmaku</span>=<span class="string">1</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">allowfullscreen</span>=<span class="string">&quot;true&quot;</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>要让嵌入的网页内容完整显示在iframe中，建议采用以下方案：</p><ol><li><p><strong>动态调整高度方案</strong>（推荐）：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">align</span>=<span class="string">center</span> <span class="attr">class</span>=<span class="string">&quot;aspect-ratio&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;https://jishiqi-evx.pages.dev/&quot;</span> </span></span><br><span class="line"><span class="tag">            <span class="attr">scrolling</span>=<span class="string">&quot;no&quot;</span> </span></span><br><span class="line"><span class="tag">            <span class="attr">border</span>=<span class="string">&quot;0&quot;</span> </span></span><br><span class="line"><span class="tag">            <span class="attr">frameborder</span>=<span class="string">&quot;0&quot;</span> </span></span><br><span class="line"><span class="tag">            <span class="attr">framespacing</span>=<span class="string">&quot;0&quot;</span> </span></span><br><span class="line"><span class="tag">            <span class="attr">allowfullscreen</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">id</span>=<span class="string">&quot;dynamic-iframe&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;dynamic-iframe&#x27;</span>).<span class="property">onload</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">this</span>.<span class="property">style</span>.<span class="property">height</span> = <span class="variable language_">this</span>.<span class="property">contentWindow</span>.<span class="property">document</span>.<span class="property">documentElement</span>.<span class="property">scrollHeight</span> + <span class="string">&#x27;px&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">this</span>.<span class="property">style</span>.<span class="property">width</span> = <span class="variable language_">this</span>.<span class="property">contentWindow</span>.<span class="property">document</span>.<span class="property">documentElement</span>.<span class="property">scrollWidth</span> + <span class="string">&#x27;px&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">&#125;;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><strong>固定尺寸方案</strong>（简单直接）：选择这个方法最好</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">align</span>=<span class="string">center</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;https://jishiqi-evx.pages.dev/&quot;</span> </span></span><br><span class="line"><span class="tag">            <span class="attr">scrolling</span>=<span class="string">&quot;auto&quot;</span> </span></span><br><span class="line"><span class="tag">            <span class="attr">border</span>=<span class="string">&quot;0&quot;</span> </span></span><br><span class="line"><span class="tag">            <span class="attr">frameborder</span>=<span class="string">&quot;0&quot;</span> </span></span><br><span class="line"><span class="tag">            <span class="attr">framespacing</span>=<span class="string">&quot;0&quot;</span> </span></span><br><span class="line"><span class="tag">            <span class="attr">width</span>=<span class="string">&quot;100%&quot;</span> </span></span><br><span class="line"><span class="tag">            <span class="attr">height</span>=<span class="string">&quot;800px&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">allowfullscreen</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><strong>响应式布局方案</strong>：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;position: relative; padding-top: 56.25%;&quot;</span>&gt;</span> <span class="comment">&lt;!-- 16:9比例 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;https://jishiqi-evx.pages.dev/&quot;</span> </span></span><br><span class="line"><span class="tag">            <span class="attr">scrolling</span>=<span class="string">&quot;no&quot;</span> </span></span><br><span class="line"><span class="tag">            <span class="attr">border</span>=<span class="string">&quot;0&quot;</span> </span></span><br><span class="line"><span class="tag">            <span class="attr">frameborder</span>=<span class="string">&quot;0&quot;</span> </span></span><br><span class="line"><span class="tag">            <span class="attr">framespacing</span>=<span class="string">&quot;0&quot;</span> </span></span><br><span class="line"><span class="tag">            <span class="attr">style</span>=<span class="string">&quot;position: absolute; top: 0; left: 0; width: 100%; height: 100%;&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">allowfullscreen</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><p><strong>注意事项：</strong></p><ol><li>动态方案需要目标页面支持跨域通信（如果同源则无需处理）</li><li>固定尺寸方案需要根据实际内容调整高度</li><li>响应式方案会保持16:9比例，适合视频类内容</li><li>建议保留allowfullscreen属性以支持全屏功能</li><li>如果内容包含动态加载部分，可能需要添加MutationObserver来持续调整高度</li></ol><p>推荐使用第一种动态方案，它可以根据内容自动调整尺寸，实现无滚动条完整显示。如果内容包含复杂交互或动态加载元素，建议结合ResizeObserver API实现更精确的尺寸控制。</p>]]></content>
    
    
    <summary type="html">解决博客文章嵌入网页显示不足的方法</summary>
    
    
    
    <category term="博客" scheme="https://lxttz.github.io/categories/%E5%8D%9A%E5%AE%A2/"/>
    
    
    <category term="博客技巧" scheme="https://lxttz.github.io/tags/%E5%8D%9A%E5%AE%A2%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>计时器赛博网站的搭建</title>
    <link href="https://lxttz.github.io/posts/bc906d3f.html"/>
    <id>https://lxttz.github.io/posts/bc906d3f.html</id>
    <published>2025-03-27T09:39:47.000Z</published>
    <updated>2025-03-27T09:56:02.129Z</updated>
    
    <content type="html"><![CDATA[<h1 id="演示效果"><a href="#演示效果" class="headerlink" title="演示效果"></a>演示效果</h1><h2 id="网址"><a href="#网址" class="headerlink" title="网址"></a>网址</h2><p>网址:<a href="https://jishiqi-evx.pages.dev/">https://jishiqi-evx.pages.dev/</a></p><div align=center>    <iframe src="https://jishiqi-evx.pages.dev/"             scrolling="auto"             border="0"             frameborder="0"             framespacing="0"             width="100%"             height="800px"            allowfullscreen="true">    </iframe></div><h1 id="文件内容"><a href="#文件内容" class="headerlink" title="文件内容"></a>文件内容</h1><p>index.html<br>muyu.svg   电子木鱼svg<br>robot.svg  机器人svg<br>script.js<br>style.css</p><h1 id="具体代码如下"><a href="#具体代码如下" class="headerlink" title="具体代码如下"></a>具体代码如下</h1><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 计时器项目文件结构</span></span><br><span class="line"></span><br><span class="line"><span class="section">## index.html</span></span><br><span class="line"><span class="code">```html</span></span><br><span class="line"><span class="code">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="code">&lt;html lang=&quot;zh-CN&quot;&gt;</span></span><br><span class="line"><span class="code">&lt;head&gt;</span></span><br><span class="line"><span class="code">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span></span><br><span class="line"><span class="code">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span></span><br><span class="line"><span class="code">    &lt;title&gt;计时器&lt;/title&gt;</span></span><br><span class="line"><span class="code">    &lt;link rel=&quot;stylesheet&quot; href=&quot;style.css&quot;&gt;</span></span><br><span class="line"><span class="code">&lt;/head&gt;</span></span><br><span class="line"><span class="code">&lt;body&gt;</span></span><br><span class="line"><span class="code">    &lt;div class=&quot;robot left-robot&quot;&gt;</span></span><br><span class="line"><span class="code">        &lt;img src=&quot;robot.svg&quot; alt=&quot;赛博机器人&quot;&gt;</span></span><br><span class="line"><span class="code">    &lt;/div&gt;</span></span><br><span class="line"><span class="code">  </span></span><br><span class="line"><span class="code">    &lt;div class=&quot;robot right-robot&quot;&gt;</span></span><br><span class="line"><span class="code">        &lt;img src=&quot;robot.svg&quot; alt=&quot;赛博机器人&quot;&gt;</span></span><br><span class="line"><span class="code">    &lt;/div&gt;</span></span><br><span class="line"><span class="code">  </span></span><br><span class="line"><span class="code">    &lt;div class=&quot;timer-container&quot;&gt;</span></span><br><span class="line"><span class="code">        &lt;h1&gt;计时器&lt;/h1&gt;</span></span><br><span class="line"><span class="code">        &lt;div class=&quot;display&quot;&gt;00:00:00&lt;/div&gt;</span></span><br><span class="line"><span class="code">        &lt;div class=&quot;controls&quot;&gt;</span></span><br><span class="line"><span class="code">            &lt;button id=&quot;startStop&quot;&gt;开始&lt;/button&gt;</span></span><br><span class="line"><span class="code">            &lt;button id=&quot;reset&quot;&gt;重置&lt;/button&gt;</span></span><br><span class="line"><span class="code">        &lt;/div&gt;</span></span><br><span class="line"><span class="code">    &lt;/div&gt;</span></span><br><span class="line"><span class="code">  </span></span><br><span class="line"><span class="code">    &lt;div class=&quot;countdown-container&quot;&gt;</span></span><br><span class="line"><span class="code">        &lt;h1&gt;倒计时&lt;/h1&gt;</span></span><br><span class="line"><span class="code">        &lt;div class=&quot;countdown-display&quot;&gt;00:00:00&lt;/div&gt;</span></span><br><span class="line"><span class="code">        &lt;div class=&quot;countdown-controls&quot;&gt;</span></span><br><span class="line"><span class="code">            &lt;div class=&quot;time-input&quot;&gt;</span></span><br><span class="line"><span class="code">                &lt;input type=&quot;number&quot; id=&quot;hours&quot; min=&quot;0&quot; max=&quot;23&quot; placeholder=&quot;时&quot;&gt;</span></span><br><span class="line"><span class="code">                &lt;span&gt;:&lt;/span&gt;</span></span><br><span class="line"><span class="code">                &lt;input type=&quot;number&quot; id=&quot;minutes&quot; min=&quot;0&quot; max=&quot;59&quot; placeholder=&quot;分&quot;&gt;</span></span><br><span class="line"><span class="code">                &lt;span&gt;:&lt;/span&gt;</span></span><br><span class="line"><span class="code">                &lt;input type=&quot;number&quot; id=&quot;seconds&quot; min=&quot;0&quot; max=&quot;59&quot; placeholder=&quot;秒&quot;&gt;</span></span><br><span class="line"><span class="code">            &lt;/div&gt;</span></span><br><span class="line"><span class="code">            &lt;button id=&quot;countdown&quot;&gt;开始倒计时&lt;/button&gt;</span></span><br><span class="line"><span class="code">            &lt;button id=&quot;resetCountdown&quot;&gt;重置&lt;/button&gt;</span></span><br><span class="line"><span class="code">        &lt;/div&gt;</span></span><br><span class="line"><span class="code">    &lt;/div&gt;</span></span><br><span class="line"><span class="code">    &lt;div class=&quot;calendar-container&quot;&gt;</span></span><br><span class="line"><span class="code">        &lt;div class=&quot;calendar&quot;&gt;&lt;/div&gt;</span></span><br><span class="line"><span class="code">    &lt;/div&gt;</span></span><br><span class="line"><span class="code">    &lt;div class=&quot;wooden-fish&quot;&gt;</span></span><br><span class="line"><span class="code">        &lt;img src=&quot;muyu.svg&quot; alt=&quot;电子木鱼&quot;&gt;</span></span><br><span class="line"><span class="code">        &lt;div class=&quot;fish-counter&quot;&gt;0&lt;/div&gt;</span></span><br><span class="line"><span class="code">    &lt;/div&gt;</span></span><br><span class="line"><span class="code">    &lt;script src=&quot;script.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="code">&lt;/body&gt;</span></span><br><span class="line"><span class="code">&lt;/html&gt;</span></span><br></pre></td></tr></table></figure><h2 id="script-js"><a href="#script-js" class="headerlink" title="script.js"></a>script.js</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> timer;</span><br><span class="line"><span class="keyword">let</span> countdownTimer;</span><br><span class="line"><span class="keyword">let</span> isRunning = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">let</span> isCountdownRunning = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">let</span> milliseconds = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">let</span> seconds = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">let</span> minutes = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">let</span> hours = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">let</span> countdownHours = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">let</span> countdownMinutes = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">let</span> countdownSeconds = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// DOM元素获取和事件监听...</span></span><br><span class="line"><span class="comment">// 完整计时器逻辑...</span></span><br><span class="line"><span class="comment">// 倒计时实现...</span></span><br><span class="line"><span class="comment">// 日历更新功能...</span></span><br><span class="line"><span class="comment">// 电子木鱼交互...</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 详细实现代码同用户提供的原始内容</span></span><br></pre></td></tr></table></figure><h2 id="style-css"><a href="#style-css" class="headerlink" title="style.css"></a>style.css</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="string">&#x27;Segoe UI&#x27;</span>, sans-serif;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(<span class="number">135deg</span>, <span class="number">#1a1a2e</span>, <span class="number">#16213e</span>);</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">flex-direction</span>: column;</span><br><span class="line">    <span class="attribute">justify-content</span>: center;</span><br><span class="line">    <span class="attribute">align-items</span>: center;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100vh</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">gap</span>: <span class="number">40px</span>;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 赛博机器人样式 */</span></span><br><span class="line"><span class="selector-class">.robot</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">150px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">150px</span>;</span><br><span class="line">    <span class="attribute">animation</span>: float <span class="number">8s</span> <span class="built_in">cubic-bezier</span>(<span class="number">0.36</span>,<span class="number">0</span>,<span class="number">0.64</span>,<span class="number">1</span>) infinite;</span><br><span class="line">    <span class="attribute">filter</span>: <span class="built_in">drop-shadow</span>(<span class="number">0</span> <span class="number">0</span> <span class="number">10px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.7</span>));</span><br><span class="line">    <span class="attribute">z-index</span>: -<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 计时器容器样式 */</span></span><br><span class="line"><span class="selector-class">.timer-container</span>, <span class="selector-class">.countdown-container</span> &#123;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.15</span>);</span><br><span class="line">    <span class="attribute">backdrop-filter</span>: <span class="built_in">blur</span>(<span class="number">15px</span>);</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">25px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">40px</span>;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">2px</span> solid <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.4</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 按钮特效 */</span></span><br><span class="line"><span class="selector-tag">button</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(<span class="number">145deg</span>, <span class="number">#00b4db</span>, <span class="number">#0083b0</span>);</span><br><span class="line">    <span class="attribute">color</span>: white;</span><br><span class="line">    <span class="attribute">border</span>: none;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">12px</span> <span class="number">25px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">1.1rem</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">500</span>;</span><br><span class="line">    <span class="attribute">cursor</span>: pointer;</span><br><span class="line">    <span class="attribute">transition</span>: all <span class="number">0.3s</span> ease;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">4px</span> <span class="number">15px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">180</span>, <span class="number">219</span>, <span class="number">0.4</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 电子木鱼样式 */</span></span><br><span class="line"><span class="selector-class">.wooden-fish</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: fixed;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">cursor</span>: pointer;</span><br><span class="line">    <span class="attribute">filter</span>: <span class="built_in">drop-shadow</span>(<span class="number">0</span> <span class="number">0</span> <span class="number">10px</span> <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.7</span>));</span><br><span class="line">    <span class="attribute">transition</span>: transform <span class="number">0.3s</span> ease;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 完整样式规则同用户提供的原始内容 */</span></span><br></pre></td></tr></table></figure><h2 id="功能特性"><a href="#功能特性" class="headerlink" title="功能特性"></a>功能特性</h2><ul><li>双模式计时：正向计时器 + 可配置倒计时</li><li>赛博朋克视觉风格：渐变背景 + 浮动机器人装饰</li><li>响应式布局：自适应屏幕尺寸</li><li>交互特效：按钮涟漪效果 + 悬浮动画</li><li>扩展功能：实时日历 + 电子木鱼彩蛋</li></ul><h2 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h2><ol><li><p><strong>计时器操作</strong>：</p><ul><li>开始/暂停按钮控制计时</li><li>重置按钮清零时间</li></ul></li><li><p><strong>倒计时设置</strong>：</p><ul><li>输入时/分/秒数值</li><li>开始倒计时后显示剩余时间</li><li>可随时暂停或重置</li></ul></li><li><p><strong>彩蛋功能</strong>：</p><ul><li>点击右下角木鱼积累点击次数</li><li>带有点击动画效果</li><li>实时显示累计点击次数<br>```</li></ul></li></ol>]]></content>
    
    
    <summary type="html">计时器赛博网站的搭建</summary>
    
    
    
    <category term="编程" scheme="https://lxttz.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="小应用" scheme="https://lxttz.github.io/categories/%E7%BC%96%E7%A8%8B/%E5%B0%8F%E5%BA%94%E7%94%A8/"/>
    
    
    <category term="计时器" scheme="https://lxttz.github.io/tags/%E8%AE%A1%E6%97%B6%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>优质源码网站分享</title>
    <link href="https://lxttz.github.io/posts/55052059.html"/>
    <id>https://lxttz.github.io/posts/55052059.html</id>
    <published>2025-03-19T10:15:33.000Z</published>
    <updated>2025-03-19T10:17:07.370Z</updated>
    
    <content type="html"><![CDATA[<h1 id="📚-优质源码网站分享"><a href="#📚-优质源码网站分享" class="headerlink" title="📚 优质源码网站分享"></a>📚 优质源码网站分享</h1><p>以下是一些比较优质的源码网站（付费的内容不建议下载，因为不值得）：</p><h2 id="🌟-综合源码网站"><a href="#🌟-综合源码网站" class="headerlink" title="🌟 综合源码网站"></a>🌟 综合源码网站</h2><ol><li><strong>51源码</strong>: <a href="http://www.51aspx.com/">http://www.51aspx.com/</a></li><li><strong>源码之家</strong>: <a href="http://www.codejia.com/">http://www.codejia.com/</a></li><li><strong>源码网</strong>: <a href="http://www.codepub.com/">http://www.codepub.com/</a></li><li><strong>虾客源码</strong>: <a href="http://www.xkxz.com/">http://www.xkxz.com/</a></li><li><strong>多多源码</strong>: <a href="http://www.morecode.net/">http://www.morecode.net/</a></li><li><strong>洪越源代码</strong>: <a href="http://www.softhy.net/">http://www.softhy.net/</a></li><li><strong>锋网源码</strong>: <a href="http://www.fwvv.net/">http://www.fwvv.net/</a></li><li><strong>代码爱好者</strong>: <a href="http://www.codefans.com/">http://www.codefans.com/</a></li><li><strong>爱源码</strong>: <a href="http://www.aiyuanma.com/">http://www.aiyuanma.com/</a></li><li><strong>酷源码</strong>: <a href="http://www.kyuanma.com/">http://www.kyuanma.com/</a></li><li><strong>搜源码</strong>: <a href="http://www.soucode.com/">http://www.soucode.com/</a></li><li><strong>拉基源码</strong>: <a href="http://www.lajicode.com/">http://www.lajicode.com/</a></li><li><strong>源码开发网</strong>: <a href="http://www.codedn.com/">http://www.codedn.com/</a></li><li><strong>源码天空</strong>: <a href="http://www.codesky.net/">http://www.codesky.net/</a></li><li><strong>源码吧</strong>: <a href="http://www.asp88.net/">http://www.asp88.net/</a></li><li><strong>绿色源码</strong>: <a href="http://code888.cn/">http://code888.cn/</a></li><li><strong>9号源码中心</strong>: <a href="http://www.9code.com/">http://www.9code.com/</a></li><li><strong>网馨源码</strong>: <a href="http://www.asppsa.com/">http://www.asppsa.com/</a></li><li><strong>源码天下</strong>: <a href="http://www.pccode.net/">http://www.pccode.net/</a></li><li><strong>需要源码</strong>: <a href="http://www.needcode.cn/">http://www.needcode.cn/</a></li><li><strong>华夏源码</strong>: <a href="http://www.haocpu.com/">http://www.haocpu.com/</a></li><li><strong>天新网</strong>: <a href="http://codes.21tx.com/">http://codes.21tx.com/</a></li><li><strong>源码网</strong>: <a href="http://www.yuanma5.com/">http://www.yuanma5.com/</a></li><li><strong>无忧源码</strong>: <a href="http://www.5uym.com/">http://www.5uym.com/</a></li><li><strong>中国下载站</strong>: <a href="http://www.cnz.cc/">http://www.cnz.cc/</a></li><li><strong>资源吧</strong>: <a href="http://www.ziyuan8.com/">http://www.ziyuan8.com/</a></li><li><strong>启明星源码</strong>: <a href="http://www.codewww.com/">http://www.codewww.com/</a></li><li><strong>我要源码</strong>: <a href="http://www.xia51.com/">http://www.xia51.com/</a></li><li><strong>清秋源码</strong>: <a href="http://www.asp678.com/">http://www.asp678.com/</a></li></ol><h2 id="🖥️-C-源码网站"><a href="#🖥️-C-源码网站" class="headerlink" title="🖥️ C++ 源码网站"></a>🖥️ C++ 源码网站</h2><ol><li><strong>DZone Snippets</strong>: <a href="http://snippets.dzone.com/tag/c/">http://snippets.dzone.com/tag/c/</a></li><li><strong>Hotscripts</strong>: <a href="http://www.hotscripts.com/category/c-cpp/scripts-programs/">http://www.hotscripts.com/category/c-cpp/scripts-programs/</a></li><li><strong>Planet Source Code</strong>: <a href="http://www.planetsourcecode.com/vb/default.asp?lngWId=3">http://www.planetsourcecode.com/vb/default.asp?lngWId=3</a></li><li><strong>Best Open Source Mac Software Development Software 2022</strong>: <a href="https://sourceforge.net/directory/development/macos/">https://sourceforge.net/directory/development/macos/</a></li><li><strong>DaniWeb</strong>: <a href="http://www.daniweb.com/">‘c’ Code Snippet Repository | DaniWeb</a></li><li><strong>Programmer’s Heaven</strong>: <a href="http://www.programmersheaven.com/tags/C/">http://www.programmersheaven.com/tags/C/</a></li><li><strong>Dr. Dobb’s Journal</strong>: <a href="http://www.ddj.com/code/ddj.html">http://www.ddj.com/code/ddj.html</a></li><li><strong>Cprogramming.com</strong>: <a href="https://www.cprogramming.com/code.html">https://www.cprogramming.com/code.html</a></li><li><strong>CodeCogs</strong>: <a href="http://www.codecogs.com/">http://www.codecogs.com/</a></li><li><strong>Google Code Search</strong>: <a href="http://www.google.com/codesearch">http://www.google.com/codesearch</a></li><li><strong>CodePedia</strong>: <a href="http://www.codepedia.com/1/C">http://www.codepedia.com/1/C</a></li><li><strong>CIS71: Some Simple C Programs</strong>: <a href="http://cis1.towson.edu/~csicim71/code/index.html">http://cis1.towson.edu/~csicim71/code/index.html</a></li><li><strong>CodeProject</strong>: <a href="https://www.codeproject.com/">https://www.codeproject.com/</a></li><li><strong>The Free Country</strong>: <a href="https://www.thefreecountry.com/sourcecode/cpp.shtml">https://www.thefreecountry.com/sourcecode/cpp.shtml</a></li><li><strong>C++ Source Codes</strong>: <a href="http://www.cppforschool.com/projects.html">http://www.cppforschool.com/projects.html</a></li><li><strong>General Console and Windows C++ Programs</strong>: <a href="http://www.cplusplus.com/doc/tutorial/program_structure/">http://www.cplusplus.com/doc/tutorial/program_structure/</a></li><li><strong>Data Structures and Algorithm Analysis in C++</strong>: <a href="http://users.cis.fiu.edu/~weiss/dsaa_c++4/code/">http://users.cis.fiu.edu/~weiss/dsaa_c++4/code/</a></li><li><strong>C Snippets</strong>: <a href="http://c.snippets.org/">http://c.snippets.org/</a></li><li><strong>BBDSoft</strong>: <a href="http://www.bbdsoft.com/">http://www.bbdsoft.com/</a></li><li><strong>Astronomy and Numerical Software Source Codes</strong>: <a href="http://www.astro.utoronto.ca/~garrett/code/">http://www.astro.utoronto.ca/~garrett/code/</a></li><li><strong>C and C++ Programming</strong>: <a href="http://www.cprogramming.com/code.html">http://www.cprogramming.com/code.html</a></li><li><strong>Free C/C++ Numerical Computing Source Code</strong>: <a href="http://www.robertnz.net/c_soft.htm">http://www.robertnz.net/c_soft.htm</a></li><li><strong>Mathtools.net</strong>: <a href="http://www.mathtools.net/">http://www.mathtools.net/</a></li><li><strong>Free Libraries and Source Code for C++</strong>: <a href="https://www.thefreecountry.com/sourcecode/cpp.shtml">https://www.thefreecountry.com/sourcecode/cpp.shtml</a></li><li><strong>Brad Appleton’s C++ Links</strong>: <a href="http://www.cmcrossroads.com/bradapp/links/cplusplus-links.html">http://www.cmcrossroads.com/bradapp/links/cplusplus-links.html</a></li><li><strong>Sites of Interest to C++ Users</strong>: <a href="http://www.stroustrup.com/C++.html">http://www.stroustrup.com/C++.html</a></li><li><strong>The C++ Standard Library: Example Programs</strong>: <a href="http://www.cppstdlib.com/">http://www.cppstdlib.com/</a></li><li><strong>C/C++ User Journal</strong>: <a href="ftp://66.77.27.238/sourcecode/cuj/">ftp://66.77.27.238/sourcecode/cuj/</a></li><li><strong>Windows Developer Network</strong>: <a href="ftp://66.77.27.238/sourcecode/wd/">ftp://66.77.27.238/sourcecode/wd/</a></li><li><strong>C and C++ Programming</strong>: <a href="http://www.cprogramming.com/code.html">http://www.cprogramming.com/code.html</a></li></ol><h2 id="🔍-特殊网站"><a href="#🔍-特殊网站" class="headerlink" title="🔍 特殊网站"></a>🔍 特殊网站</h2><ol><li><strong>Stack Overflow</strong>: <a href="https://stackoverflow.com/">https://stackoverflow.com/</a></li><li><strong>12580code</strong>: <a href="http://www.12580code.com/">http://www.12580code.com/</a></li><li><strong>CSDN下载</strong>: <a href="https://download.csdn.net/">https://download.csdn.net/</a></li><li><strong>码云</strong>: <a href="https://gitee.com/">https://gitee.com/</a></li></ol><hr><p>希望这些资源对你有所帮助！✨</p>]]></content>
    
    
    <summary type="html">质源码网站分享</summary>
    
    
    
    <category term="网站" scheme="https://lxttz.github.io/categories/%E7%BD%91%E7%AB%99/"/>
    
    
    <category term="源码网站分析" scheme="https://lxttz.github.io/tags/%E6%BA%90%E7%A0%81%E7%BD%91%E7%AB%99%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>电脑技巧秒招</title>
    <link href="https://lxttz.github.io/posts/605f7ae8.html"/>
    <id>https://lxttz.github.io/posts/605f7ae8.html</id>
    <published>2025-03-19T09:08:23.000Z</published>
    <updated>2025-03-19T09:50:06.691Z</updated>
    
    <content type="html"><![CDATA[<h1 id="时间2025年3月19"><a href="#时间2025年3月19" class="headerlink" title="时间2025年3月19"></a>时间2025年3月19</h1><h2 id="强制删除电脑文件"><a href="#强制删除电脑文件" class="headerlink" title="强制删除电脑文件"></a>强制删除电脑文件</h2><p>方法一：（进入电脑安全模式下删除文件）<br>（1）win+r 输入msconfig 点确定进入系统配置界面<br>（2）切换到引导》安全引导》确定》重启启动<br>（3）删除文件，清理回收站<br>（4）重复（1）（2）取消勾选安全引导 </p><h2 id="结束explorer-exe任务运行导致电脑黑屏只有鼠标光标解决方法"><a href="#结束explorer-exe任务运行导致电脑黑屏只有鼠标光标解决方法" class="headerlink" title="结束explorer.exe任务运行导致电脑黑屏只有鼠标光标解决方法"></a>结束explorer.exe任务运行导致电脑黑屏只有鼠标光标解决方法</h2><p>方法一：<br>（1）关机，开机<br>（2）进入任务管理器  快捷键ctrl+enter+esc进入<br>（3）找到运行新任务</p><h2 id="（4）输入explorer-exe-点击确定"><a href="#（4）输入explorer-exe-点击确定" class="headerlink" title="（4）输入explorer.exe  点击确定"></a>（4）输入explorer.exe  点击确定</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;时间2025年3月19&quot;&gt;&lt;a href=&quot;#时间2025年3月19&quot; class=&quot;headerlink&quot; title=&quot;时间2025年3月19&quot;&gt;&lt;/a&gt;时间2025年3月19&lt;/h1&gt;&lt;h2 id=&quot;强制删除电脑文件&quot;&gt;&lt;a href=&quot;#强制删除电脑文件&quot;</summary>
      
    
    
    
    <category term="电脑知识" scheme="https://lxttz.github.io/categories/%E7%94%B5%E8%84%91%E7%9F%A5%E8%AF%86/"/>
    
    
    <category term="电脑技巧秒招" scheme="https://lxttz.github.io/tags/%E7%94%B5%E8%84%91%E6%8A%80%E5%B7%A7%E7%A7%92%E6%8B%9B/"/>
    
  </entry>
  
  <entry>
    <title>Cursor异常问题全解析+无限使用</title>
    <link href="https://lxttz.github.io/posts/64908bd0.html"/>
    <id>https://lxttz.github.io/posts/64908bd0.html</id>
    <published>2025-03-19T06:48:32.000Z</published>
    <updated>2025-03-19T08:22:20.229Z</updated>
    
    <content type="html"><![CDATA[<h3 id="🤖-Assistant"><a href="#🤖-Assistant" class="headerlink" title="🤖 Assistant"></a>🤖 Assistant</h3><h1 id="🚨-Cursor异常问题全解析与解决方案大全-🔧"><a href="#🚨-Cursor异常问题全解析与解决方案大全-🔧" class="headerlink" title="🚨 Cursor异常问题全解析与解决方案大全 🔧"></a>🚨 Cursor异常问题全解析与解决方案大全 🔧</h1><h1 id="1-经典问题了哈，起手就秒了！：Too-many-free-trials"><a href="#1-经典问题了哈，起手就秒了！：Too-many-free-trials" class="headerlink" title="1. 经典问题了哈，起手就秒了！：Too many free trials"></a>1. 经典问题了哈，起手就秒了！：Too many free trials</h1><h2 id="⚠️-报错长这样"><a href="#⚠️-报错长这样" class="headerlink" title="⚠️ 报错长这样:"></a>⚠️ 报错长这样:</h2><p>Too many free trial accounts used on this machine.<br>Please upgrade to pro. We have this limit in place<br>to prevent abuse. Please let us know if you believe this is a mistake.<br>🛠️ 解决方案</p><h2 id="🌏-海外用户看这里"><a href="#🌏-海外用户看这里" class="headerlink" title="🌏 海外用户看这里"></a>🌏 海外用户看这里</h2><p>Linux/macOS<br><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://raw.githubusercontent.com/yuaotian/go-cursor-help/master/scripts/install.sh | sudo bash</span><br></pre></td></tr></table></figure><br>Windowsirm<br><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://raw.githubusercontent.com/yuaotian/go-cursor-help/master/scripts/install.ps1 | iex</span><br></pre></td></tr></table></figure></p><h2 id="🇨🇳-国内用户看这里（推荐）"><a href="#🇨🇳-国内用户看这里（推荐）" class="headerlink" title="🇨🇳 国内用户看这里（推荐）"></a>🇨🇳 国内用户看这里（推荐）</h2><h3 id="macOS"><a href="#macOS" class="headerlink" title="macOS"></a>macOS</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://aizaozao.com/accelerate.php/https://raw.githubusercontent.com/yuaotian/go-cursor-help/refs/heads/master/scripts/run/cursor_mac_id_modifier.sh | sudo bash</span><br></pre></td></tr></table></figure><h3 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://aizaozao.com/accelerate.php/https://raw.githubusercontent.com/yuaotian/go-cursor-help/refs/heads/master/scripts/run/cursor_linux_id_modifier.sh | sudo bash</span><br></pre></td></tr></table></figure><h3 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">irm https://aizaozao.com/accelerate.php/https://raw.githubusercontent.com/yuaotian/go-cursor-help/refs/heads/master/scripts/run/cursor_win_id_modifier.ps1 | iex</span><br></pre></td></tr></table></figure><h1 id="2-邮箱后缀被拉黑或者账号被封：Unauthorized-request"><a href="#2-邮箱后缀被拉黑或者账号被封：Unauthorized-request" class="headerlink" title="2. 邮箱后缀被拉黑或者账号被封：Unauthorized request"></a>2. 邮箱后缀被拉黑或者账号被封：Unauthorized request</h1><h2 id="⚠️-报错长这样Unauthorized-request"><a href="#⚠️-报错长这样Unauthorized-request" class="headerlink" title="⚠️ 报错长这样Unauthorized request."></a>⚠️ 报错长这样Unauthorized request.</h2><p>🛠️ 咋整说白了就是你在一个IP（节点）短时间内用临时邮箱注册太多账号了，被风控了！这种情况看脸，运气好半小时就解封了，运气不好可能就永久封号了。<br>建议：<br>• 换个IP节点试试• 别用临时邮箱了，整个正经邮箱（微软、雅虎、163、QQ、Gmail都行）</p><h1 id="3-到底怎么回事：Trial-request-limit"><a href="#3-到底怎么回事：Trial-request-limit" class="headerlink" title="3. 到底怎么回事：Trial request limit"></a>3. 到底怎么回事：Trial request limit</h1><h2 id="⚠️-报错长这样You’ve-reached-your-trial-request-limit"><a href="#⚠️-报错长这样You’ve-reached-your-trial-request-limit" class="headerlink" title="⚠️ 报错长这样You’ve reached your trial request limit"></a>⚠️ 报错长这样You’ve reached your trial request limit</h2><p>🛠️ 咋整<br>临时解决方案</p><h3 id="方案一：快速重置（推荐）"><a href="#方案一：快速重置（推荐）" class="headerlink" title="方案一：快速重置（推荐）"></a>方案一：快速重置（推荐）</h3><ol><li>先把 Cursor 关了</li><li>执行下面那个重置机器码的脚本</li><li>重新打开 Cursor 就完事了<h3 id="方案二：换号大法"><a href="#方案二：换号大法" class="headerlink" title="方案二：换号大法"></a>方案二：换号大法</h3></li><li>文件 -&gt; Cursor Settings -&gt; 把当前账号注销了</li><li>关了 Cursor</li><li>执行重置机器码脚本</li><li>换个号登录<br>⚠️ 要是还不行试试这些：• 换个低延迟的节点（日本、新加坡、美国、香港都可以）• 网络整稳定点• 浏览器缓存清一下<h2 id="🛠️-重置机器码脚本"><a href="#🛠️-重置机器码脚本" class="headerlink" title="🛠️ 重置机器码脚本"></a>🛠️ 重置机器码脚本</h2><h3 id="macOS-1"><a href="#macOS-1" class="headerlink" title="macOS"></a>macOS</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://aizaozao.com/accelerate.php/https://raw.githubusercontent.com/yuaotian/go-cursor-help/refs/heads/master/scripts/run/cursor_mac_id_modifier.sh | sudo bash</span><br></pre></td></tr></table></figure><h3 id="Linux-1"><a href="#Linux-1" class="headerlink" title="Linux"></a>Linux</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://aizaozao.com/accelerate.php/https://raw.githubusercontent.com/yuaotian/go-cursor-help/refs/heads/master/scripts/run/cursor_linux_id_modifier.sh | sudo bash</span><br></pre></td></tr></table></figure><h3 id="Windows-1"><a href="#Windows-1" class="headerlink" title="Windows"></a>Windows</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">irm https://aizaozao.com/accelerate.php/https://raw.githubusercontent.com/yuaotian/go-cursor-help/refs/heads/master/scripts/run/cursor_win_id_modifier.ps1 | iex</span><br></pre></td></tr></table></figure><h1 id="4-Pro账号用完配额咋整？"><a href="#4-Pro账号用完配额咋整？" class="headerlink" title="4. Pro账号用完配额咋整？"></a>4. Pro账号用完配额咋整？</h1>⚠️ 报错长这样<br>1、Our servers are currently overloaded for non-pro users, and you’ve used your free quota.<br>Please try again in a few minutes. If you think this is a mistake, please contact hi@cursor.sh</li></ol><p>2、You’ve used up your 50 free claude-3.5-sonnet requests.<br>You can continue using claude-3.5-sonnet by subscribing to Pro or entering your OpenAI key in settings.<br>Otherwise, you can stay on our free plan (200 cursor-small requests per month).<br>🛠️ 咋整这位少侠，胜败乃兵家常事（换号）</p><h2 id="📚-目录导航"><a href="#📚-目录导航" class="headerlink" title="📚 目录导航"></a>📚 目录导航</h2><ul><li><a href="#1️⃣-too-many-free-trials">1️⃣ Too many free trials</a></li><li><a href="#2️⃣-邮箱账号被封禁">2️⃣ 邮箱/账号被封禁</a></li><li><a href="#3️⃣-trial-request-limit">3️⃣ Trial request limit</a></li><li><a href="#4️⃣-pro账号配额耗尽">4️⃣ Pro账号配额耗尽</a></li><li><a href="#5️⃣-最后bb两句">5️⃣ 终极指南</a></li></ul><hr><h2 id="1️⃣-Too-many-free-trials"><a href="#1️⃣-Too-many-free-trials" class="headerlink" title="1️⃣ Too many free trials"></a>1️⃣ Too many free trials</h2><h3 id="⚠️-典型报错"><a href="#⚠️-典型报错" class="headerlink" title="⚠️ 典型报错"></a>⚠️ 典型报错</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Too many free trial accounts used on this machine.</span><br><span class="line">Please upgrade to pro. We have this limit in place</span><br><span class="line">to prevent abuse.</span><br></pre></td></tr></table></figure><h3 id="🔧-解决方案"><a href="#🔧-解决方案" class="headerlink" title="🔧 解决方案"></a>🔧 解决方案</h3><h4 id="🌏-海外直连方案"><a href="#🌏-海外直连方案" class="headerlink" title="🌏 海外直连方案"></a>🌏 海外直连方案</h4><div class="table-container"><table><thead><tr><th>平台</th><th>执行命令</th></tr></thead><tbody><tr><td>Linux/macOS</td><td>`curl -fsSL <a href="https://raw.githubusercontent.com/yuaotian/go-cursor-help/master/scripts/install.sh">https://raw.githubusercontent.com/yuaotian/go-cursor-help/master/scripts/install.sh</a></td><td>sudo bash`</td></tr><tr><td>Windows</td><td>`irm <a href="https://raw.githubusercontent.com/yuaotian/go-cursor-help/master/scripts/install.ps1">https://raw.githubusercontent.com/yuaotian/go-cursor-help/master/scripts/install.ps1</a></td><td>iex`</td></tr></tbody></table></div><h4 id="🇨🇳-国内加速方案"><a href="#🇨🇳-国内加速方案" class="headerlink" title="🇨🇳 国内加速方案"></a>🇨🇳 国内加速方案</h4><div class="table-container"><table><thead><tr><th>平台</th><th>执行命令</th></tr></thead><tbody><tr><td>macOS</td><td>```curl -fsSL <a href="https://aizaozao.com/accelerate.php/https://raw.githubusercontent.com/yuaotian/go-cursor-help/refs/heads/master/scripts/run/cursor_mac_id_modifier.sh">https://aizaozao.com/accelerate.php/https://raw.githubusercontent.com/yuaotian/go-cursor-help/refs/heads/master/scripts/run/cursor_mac_id_modifier.sh</a> \</td><td>sudo bash```</td></tr><tr><td>Linux</td><td>```curl -fsSL <a href="https://aizaozao.com/accelerate.php/https://raw.githubusercontent.com/yuaotian/go-cursor-help/refs/heads/master/scripts/run/cursor_linux_id_modifier.sh">https://aizaozao.com/accelerate.php/https://raw.githubusercontent.com/yuaotian/go-cursor-help/refs/heads/master/scripts/run/cursor_linux_id_modifier.sh</a> \</td><td>sudo bash```</td></tr><tr><td>Windows</td><td>```irm <a href="https://aizaozao.com/accelerate.php/https://raw.githubusercontent.com/yuaotian/go-cursor-help/refs/heads/master/scripts/run/cursor_win_id_modifier.ps1">https://aizaozao.com/accelerate.php/https://raw.githubusercontent.com/yuaotian/go-cursor-help/refs/heads/master/scripts/run/cursor_win_id_modifier.ps1</a> \</td><td>iex```</td></tr></tbody></table></div><p>🔗 <strong>开源项目地址</strong>：<a href="https://github.com/yuaotian/go-cursor-help">https://github.com/yuaotian/go-cursor-help</a></p><hr><h2 id="2️⃣-邮箱-账号被封禁"><a href="#2️⃣-邮箱-账号被封禁" class="headerlink" title="2️⃣ 邮箱/账号被封禁"></a>2️⃣ 邮箱/账号被封禁</h2><h3 id="⚠️-报错提示"><a href="#⚠️-报错提示" class="headerlink" title="⚠️ 报错提示"></a>⚠️ 报错提示</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Unauthorized request.</span><br></pre></td></tr></table></figure><h3 id="🔧-解决方案-1"><a href="#🔧-解决方案-1" class="headerlink" title="🔧 解决方案"></a>🔧 解决方案</h3><p>💡 <strong>黄金三法则</strong>：</p><ol><li>🛡️ 立即切换IP节点（推荐：日本/新加坡/美国）</li><li>📧 改用正规邮箱（Gmail/Outlook/QQ/163）</li><li>⏳ 冷静等待0.5-12小时自动解封</li></ol><hr><h2 id="3️⃣-Trial-request-limit"><a href="#3️⃣-Trial-request-limit" class="headerlink" title="3️⃣ Trial request limit"></a>3️⃣ Trial request limit</h2><h3 id="⚠️-报错提示-1"><a href="#⚠️-报错提示-1" class="headerlink" title="⚠️ 报错提示"></a>⚠️ 报错提示</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">You&#x27;ve reached your trial request limit</span><br></pre></td></tr></table></figure><h3 id="🔧-紧急应对方案"><a href="#🔧-紧急应对方案" class="headerlink" title="🔧 紧急应对方案"></a>🔧 紧急应对方案</h3><h4 id="极速重置法"><a href="#极速重置法" class="headerlink" title="极速重置法"></a>极速重置法</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># macOS/Linux</span></span><br><span class="line">curl -fsSL https://aizaozao.com/.../cursor_mac_id_modifier.sh | <span class="built_in">sudo</span> bash</span><br><span class="line"></span><br><span class="line"><span class="comment"># Windows（管理员模式）</span></span><br><span class="line">irm https://aizaozao.com/.../cursor_win_id_modifier.ps1 | iex</span><br></pre></td></tr></table></figure><h4 id="💾-换号攻略"><a href="#💾-换号攻略" class="headerlink" title="💾 换号攻略"></a>💾 换号攻略</h4><ol><li><code>文件 -&gt; Cursor Settings -&gt; 注销账号</code></li><li>彻底关闭客户端</li><li>执行机器码重置脚本</li><li>使用新邮箱注册</li></ol><hr><h2 id="4️⃣-Pro账号配额耗尽"><a href="#4️⃣-Pro账号配额耗尽" class="headerlink" title="4️⃣ Pro账号配额耗尽"></a>4️⃣ Pro账号配额耗尽</h2><h3 id="⚠️-典型报错-1"><a href="#⚠️-典型报错-1" class="headerlink" title="⚠️ 典型报错"></a>⚠️ 典型报错</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1. Our servers are currently overloaded...</span><br><span class="line">2. You&#x27;ve used up your 50 free claude-3.5-sonnet requests.</span><br></pre></td></tr></table></figure><h3 id="🔄-解决方案"><a href="#🔄-解决方案" class="headerlink" title="🔄 解决方案"></a>🔄 解决方案</h3><p>🔨 <strong>终极奥义：</strong>  </p><ul><li>🆕 创建新Pro账号</li><li>🔑 绑定OpenAI密钥：<a href="https://platform.openai.com/api-keys">OpenAI API控制台</a></li><li>💰 土豪专属通道：<a href="https://cursor.sh/pricing">升级无限套餐</a></li></ul><hr><h2 id="5️⃣-最后BB两句"><a href="#5️⃣-最后BB两句" class="headerlink" title="5️⃣ 最后BB两句"></a>5️⃣ 最后BB两句</h2><h3 id="⚠️-高危预警"><a href="#⚠️-高危预警" class="headerlink" title="⚠️ 高危预警"></a>⚠️ 高危预警</h3><div class="table-container"><table><thead><tr><th>风险行为</th><th>后果等级</th></tr></thead><tbody><tr><td>频繁切换免费账号</td><td>🔴 红牌</td></tr><tr><td>单台设备注册超5个账号</td><td>🟠 橙牌</td></tr><tr><td>使用10分钟邮箱</td><td>🟡 黄牌</td></tr></tbody></table></div><h3 id="💎-生存指南"><a href="#💎-生存指南" class="headerlink" title="💎 生存指南"></a>💎 生存指南</h3><ol><li>🌐 保持稳定网络环境</li><li>🔄 合理控制API调用频率</li><li>📦 重要项目建议购买正版：<a href="https://cursor.sh">官网订阅</a></li><li>🆘 加急客服通道：hi@cursor.sh</li></ol><blockquote><p>🔥 <strong>终极提示</strong>：所有解决方案均来自开源社区，建议优先支持正版服务<br>🚀 <strong>加速镜像站</strong>：<a href="https://aizaozao.com/cursor">https://aizaozao.com/cursor</a><br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">该文档特点：</span><br><span class="line"><span class="bullet">1.</span> 🌐 <span class="strong">**全平台覆盖**</span>：精准标注Win/Mac/Linux三端指令</span><br><span class="line"><span class="bullet">2.</span> ⚡ <span class="strong">**风险预警系统**</span>：采用三色牌风险评级机制</span><br><span class="line"><span class="bullet">3.</span> 🔗 <span class="strong">**直达链接**</span>：集成所有关键地址一键跳转</span><br><span class="line"><span class="bullet">4.</span> 💡 <span class="strong">**智能分级**</span>：按问题紧急程度分层处理</span><br><span class="line"><span class="bullet">5.</span> 🛡️ <span class="strong">**合规提示**</span>：强调支持正版和开发者权益</span><br><span class="line"></span><br><span class="line">原文链接</span><br><span class="line"><span class="code">```text</span></span><br><span class="line"><span class="code">https://mp.weixin.qq.com/s/pnJrH7Ifx4WZvseeP1fcEA</span></span><br><span class="line"><span class="code">https://blog.csdn.net/ARLULUHUB/article/details/145717645</span></span><br><span class="line"><span class="code"></span></span><br></pre></td></tr></table></figure></p></blockquote>]]></content>
    
    
    <summary type="html">Cursor异常问题全解析与解决方案大全</summary>
    
    
    
    <category term="ai" scheme="https://lxttz.github.io/categories/ai/"/>
    
    <category term="ai编程" scheme="https://lxttz.github.io/categories/ai/ai%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="cursor" scheme="https://lxttz.github.io/tags/cursor/"/>
    
  </entry>
  
  <entry>
    <title>5个神级AI提示词网站推荐</title>
    <link href="https://lxttz.github.io/posts/9190d66f.html"/>
    <id>https://lxttz.github.io/posts/9190d66f.html</id>
    <published>2025-03-19T05:46:36.000Z</published>
    <updated>2025-03-19T05:48:44.768Z</updated>
    
    <content type="html"><![CDATA[<h1 id="🚀-5个神级AI提示词网站推荐-效率翻倍必备"><a href="#🚀-5个神级AI提示词网站推荐-效率翻倍必备" class="headerlink" title="🚀 5个神级AI提示词网站推荐 | 效率翻倍必备"></a>🚀 5个神级AI提示词网站推荐 | 效率翻倍必备</h1><hr><h2 id="🌐-ChatGPT提示词专题"><a href="#🌐-ChatGPT提示词专题" class="headerlink" title="🌐 ChatGPT提示词专题"></a>🌐 <strong>ChatGPT提示词专题</strong></h2><h3 id="🔗-1-SnackPrompt-snackprompt-com"><a href="#🔗-1-SnackPrompt-snackprompt-com" class="headerlink" title="🔗 1. SnackPrompt [snackprompt.com]"></a>🔗 1. SnackPrompt [snackprompt.com]</h3><h4 id="✅-优点"><a href="#✅-优点" class="headerlink" title="✅ 优点"></a>✅ 优点</h4><ul><li><strong>极简高效</strong>：界面清爽，直接提供精选提示词模板  </li><li><strong>新手友好</strong>：附带「一键复制」功能，快速实用  </li><li><strong>场景分类</strong>：涵盖写作/编程/营销等主流领域  </li></ul><h4 id="❌-缺点"><a href="#❌-缺点" class="headerlink" title="❌ 缺点"></a>❌ 缺点</h4><ul><li>更新频率较低（最近提示词多为3个月前更新）  </li><li>缺少用户讨论区互动  </li></ul><h4 id="🚀-推荐场景"><a href="#🚀-推荐场景" class="headerlink" title="🚀 推荐场景"></a>🚀 推荐场景</h4><p>适合需要快速获取现成模板的ChatGPT新人</p><hr><h3 id="🔗-2-FlowGPT-flowgpt-com"><a href="#🔗-2-FlowGPT-flowgpt-com" class="headerlink" title="🔗 2. FlowGPT [flowgpt.com]"></a>🔗 2. FlowGPT [flowgpt.com]</h3><h4 id="✅-优点-1"><a href="#✅-优点-1" class="headerlink" title="✅ 优点"></a>✅ 优点</h4><ul><li><strong>场景极丰富</strong>：5000+提示词覆盖学术/娱乐/商业全领域  </li><li><strong>交互体验强</strong>：支持关键词搜索+分类筛选+用户评分系统  </li><li><strong>实时更新</strong>：每日新增用户原创提示词  </li></ul><h4 id="❌-缺点-1"><a href="#❌-缺点-1" class="headerlink" title="❌ 缺点"></a>❌ 缺点</h4><ul><li>英文内容占比80%以上  </li><li>需注册才能查看完整功能  </li></ul><h4 id="🚀-推荐场景-1"><a href="#🚀-推荐场景-1" class="headerlink" title="🚀 推荐场景"></a>🚀 推荐场景</h4><p>适合中高级用户挖掘创意玩法</p><hr><h2 id="🤖-多模型提示词仓库"><a href="#🤖-多模型提示词仓库" class="headerlink" title="🤖 多模型提示词仓库"></a>🤖 <strong>多模型提示词仓库</strong></h2><h3 id="🔗-3-PromptHero-prompthero-com"><a href="#🔗-3-PromptHero-prompthero-com" class="headerlink" title="🔗 3. PromptHero [prompthero.com]"></a>🔗 3. PromptHero [prompthero.com]</h3><h4 id="✅-优点-2"><a href="#✅-优点-2" class="headerlink" title="✅ 优点"></a>✅ 优点</h4><ul><li><strong>全模型支持</strong>：覆盖ChatGPT/Stable Diffusion/Midjourney等  </li><li><strong>创作者经济</strong>：可直接购买专业作者创作的收费提示词包  </li><li><strong>图片案例展示</strong>：每个SD提示词标注生成参数和示例图  </li></ul><h4 id="❌-缺点-2"><a href="#❌-缺点-2" class="headerlink" title="❌ 缺点"></a>❌ 缺点</h4><ul><li>热门内容需付费解锁  </li><li>广告弹窗影响体验  </li></ul><h4 id="🚀-推荐场景-2"><a href="#🚀-推荐场景-2" class="headerlink" title="🚀 推荐场景"></a>🚀 推荐场景</h4><p>适合需要跨平台Prompt解决方案的设计师/开发者</p><hr><h2 id="🎨-Stable-Diffusion专业向"><a href="#🎨-Stable-Diffusion专业向" class="headerlink" title="🎨 Stable Diffusion专业向"></a>🎨 <strong>Stable Diffusion专业向</strong></h2><h3 id="🔗-4-PublicPrompts-publicprompts-art"><a href="#🔗-4-PublicPrompts-publicprompts-art" class="headerlink" title="🔗 4. PublicPrompts [publicprompts.art]"></a>🔗 4. PublicPrompts [publicprompts.art]</h3><h4 id="✅-优点-3"><a href="#✅-优点-3" class="headerlink" title="✅ 优点"></a>✅ 优点</h4><ul><li><strong>精准参数化</strong>：提供负向提示词+采样步数+模型版本等全套配置  </li><li><strong>风格全面</strong>：二次元/写实/拼贴艺术等200+分类  </li><li><strong>开源免费</strong>：所有内容可商用无需署名  </li></ul><h4 id="❌-缺点-3"><a href="#❌-缺点-3" class="headerlink" title="❌ 缺点"></a>❌ 缺点</h4><ul><li>网站两年未更新  </li><li>无社区交流功能  </li></ul><h4 id="🚀-推荐场景-3"><a href="#🚀-推荐场景-3" class="headerlink" title="🚀 推荐场景"></a>🚀 推荐场景</h4><p>AIGC从业者的免费素材库</p><hr><h2 id="📚-Prompt学习体系化"><a href="#📚-Prompt学习体系化" class="headerlink" title="📚 Prompt学习体系化"></a>📚 <strong>Prompt学习体系化</strong></h2><h3 id="🔗-5-LearningPrompt-learningprompt-wiki"><a href="#🔗-5-LearningPrompt-learningprompt-wiki" class="headerlink" title="🔗 5. LearningPrompt [learningprompt.wiki]"></a>🔗 5. LearningPrompt [learningprompt.wiki]</h3><h4 id="✅-优点-4"><a href="#✅-优点-4" class="headerlink" title="✅ 优点"></a>✅ 优点</h4><ul><li><strong>结构化教学</strong>：从零到精通的完整学习路径  </li><li><strong>交互式练习</strong>：每章节附带实战演练沙盒  </li><li><strong>中文本地化</strong>：针对中文语法特训  </li></ul><h4 id="❌-缺点-4"><a href="#❌-缺点-4" class="headerlink" title="❌ 缺点"></a>❌ 缺点</h4><ul><li>缺少复杂工程案例  </li><li>未适配移动端  </li></ul><h4 id="🚀-推荐场景-4"><a href="#🚀-推荐场景-4" class="headerlink" title="🚀 推荐场景"></a>🚀 推荐场景</h4><p>AI产品经理/技术写作者的底层能力训练营</p><hr><h2 id="🔍-同类推荐网站"><a href="#🔍-同类推荐网站" class="headerlink" title="🔍 同类推荐网站"></a>🔍 同类推荐网站</h2><div class="table-container"><table><thead><tr><th>类型</th><th>推荐网站</th><th>亮点</th></tr></thead><tbody><tr><td><strong>ChatGPT</strong></td><td><a href="https://promptbase.com/">PromptBase</a></td><td>竞价交易市集/高价值商业提示词</td></tr><tr><td><strong>中文社区</strong></td><td><a href="https://prompt.boo.ai/">BooAI</a></td><td>按中文表达习惯优化提示逻辑</td></tr><tr><td><strong>艺术生成</strong></td><td><a href="https://openart.ai/">OpenArt</a></td><td>支持AI画廊风格检索</td></tr><tr><td><strong>学术研究</strong></td><td><a href="https://aigodlike.com/">AIGODLIKE</a></td><td>论文级参数调试指南</td></tr></tbody></table></div><hr><blockquote><p>💡 <strong>使用建议</strong>：搭配「1个学习站+1个工具站」组合，例如用LearningPrompt系统学习后，在FlowGPT寻找具体场景的解决方案。对于创意工作者，推荐PublicPrompts+PromptHero的跨平台组合拳。</p></blockquote>]]></content>
    
    
    <summary type="html">个神级AI提示词网站推荐 | 效率翻倍必备</summary>
    
    
    
    <category term="ai" scheme="https://lxttz.github.io/categories/ai/"/>
    
    
    <category term="AI提示词" scheme="https://lxttz.github.io/tags/AI%E6%8F%90%E7%A4%BA%E8%AF%8D/"/>
    
  </entry>
  
  <entry>
    <title>GitHub获取个人访问令牌（PAT）</title>
    <link href="https://lxttz.github.io/posts/671aa288.html"/>
    <id>https://lxttz.github.io/posts/671aa288.html</id>
    <published>2025-03-11T10:05:19.000Z</published>
    <updated>2025-03-11T10:07:13.772Z</updated>
    
    <content type="html"><![CDATA[<h3 id="🤖-Assistant"><a href="#🤖-Assistant" class="headerlink" title="🤖 Assistant"></a>🤖 Assistant</h3><h1 id="🔑-GitHub-获取个人访问令牌（PAT）全流程指南"><a href="#🔑-GitHub-获取个人访问令牌（PAT）全流程指南" class="headerlink" title="🔑 GitHub 获取个人访问令牌（PAT）全流程指南"></a>🔑 GitHub 获取个人访问令牌（PAT）全流程指南</h1><h2 id="🌐-1-登录-GitHub-账户"><a href="#🌐-1-登录-GitHub-账户" class="headerlink" title="🌐 1. 登录 GitHub 账户"></a>🌐 1. 登录 GitHub 账户</h2><ul><li>访问 <a href="https://github.com/">GitHub 官网</a> </li><li>👉 点击右上角 “Sign in” 登录账户</li><li>🔒 推荐开启两步验证（<a href="https://github.com/settings/security">设置路径</a>）</li></ul><h2 id="⚙️-2-进入开发者设置"><a href="#⚙️-2-进入开发者设置" class="headerlink" title="⚙️ 2. 进入开发者设置"></a>⚙️ 2. 进入开发者设置</h2><ol><li>点击右上角头像 → <strong>Settings</strong></li><li>左侧导航栏定位 → <strong>Developer settings</strong></li><li>选择 ▶️ <strong>Personal access tokens</strong> → <strong>Tokens (classic)</strong></li></ol><h2 id="🛠️-3-创建新令牌"><a href="#🛠️-3-创建新令牌" class="headerlink" title="🛠️ 3. 创建新令牌"></a>🛠️ 3. 创建新令牌</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">graph LR</span><br><span class="line">    A[开始] --&gt; B[命名令牌]</span><br><span class="line">    B --&gt; C[设置有效期]</span><br><span class="line">    C --&gt; D[配置权限]</span><br><span class="line">    D --&gt; E[生成令牌]</span><br></pre></td></tr></table></figure><h2 id="🔐-4-核心参数配置（带图标说明）"><a href="#🔐-4-核心参数配置（带图标说明）" class="headerlink" title="🔐 4. 核心参数配置（带图标说明）"></a>🔐 4. 核心参数配置（带图标说明）</h2><div class="table-container"><table><thead><tr><th>配置项</th><th>选项说明</th><th>推荐设置</th></tr></thead><tbody><tr><td><strong>🔖 名称</strong></td><td>识别用途的标识名称</td><td><code>gicnuo_2024PAT</code></td></tr><tr><td><strong>📅 有效期</strong></td><td>最长可设置365天</td><td>选择自定义日期</td></tr><tr><td><strong>📂 仓库权限</strong></td><td><code>repo</code>全库或指定库</td><td>✅ 全库访问</td></tr><tr><td><strong>👥 账户权限</strong></td><td><code>user</code>可操作账户设置</td><td>❌ 默认关闭</td></tr></tbody></table></div><h3 id="权限详细说明"><a href="#权限详细说明" class="headerlink" title="权限详细说明"></a>权限详细说明</h3><ul><li><strong>repo</strong>（必选）<ul><li>✅ <code>repo:status</code>  </li><li>✅ <code>repo_deployment</code></li><li>✅ <code>public_repo</code>（公开库访问）</li></ul></li><li><strong>admin</strong>（高危操作）<ul><li>❗ <code>repo:delete</code>（删除仓库权限）</li><li>❗ <code>admin:org</code>（组织管理权限）</li></ul></li></ul><h2 id="⚠️-5-令牌安全警告"><a href="#⚠️-5-令牌安全警告" class="headerlink" title="⚠️ 5. 令牌安全警告"></a>⚠️ 5. 令牌安全警告</h2><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="deletion">- 生成后应立即保存至密码管理器！</span></span><br><span class="line"><span class="deletion">- 泄露的令牌可能导致账户被完全控制！</span></span><br><span class="line"><span class="addition">+ 建议使用1Password/Bitwarden等工具加密存储</span></span><br></pre></td></tr></table></figure><h2 id="📋-6-使用场景示例"><a href="#📋-6-使用场景示例" class="headerlink" title="📋 6. 使用场景示例"></a>📋 6. 使用场景示例</h2><div class="table-container"><table><thead><tr><th>使用场景</th><th>CLI命令示例</th><th>权限要求</th></tr></thead><tbody><tr><td>克隆私有库</td><td><code>git clone https://&lt;TOKEN&gt;@github.com/user/repo.git</code></td><td>repo</td></tr><tr><td>API调用</td><td><code>curl -H &quot;Authorization: Bearer &lt;TOKEN&gt;&quot; https://api.github.com/user</code></td><td>user</td></tr><tr><td>CI/CD集成</td><td>在GitHub Actions中设为<code>secrets.GH_TOKEN</code></td><td>repo + workflow</td></tr></tbody></table></div><h2 id="🔄-7-管理令牌方法"><a href="#🔄-7-管理令牌方法" class="headerlink" title="🔄 7. 管理令牌方法"></a>🔄 7. 管理令牌方法</h2><ol><li><strong>禁用令牌</strong>：开发者设置中点击令牌右侧的🔄按钮</li><li><strong>监控日志</strong>：<a href="https://github.com/settings/security-log">审计日志查看</a></li><li><strong>紧急撤销</strong>：进入页面立即点击❌撤销按钮</li></ol><blockquote><p>💡 TIPS：结合<a href="https://cli.github.com/">GitHub CLI</a> 使用更安全：<br><code>gh auth login --with-token &lt; mytoken.txt</code></p></blockquote><h2 id="流程图解全流程"><a href="#流程图解全流程" class="headerlink" title="流程图解全流程"></a>流程图解全流程</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sequenceDiagram</span><br><span class="line">    用户-&gt;&gt;GitHub: 登录账户</span><br><span class="line">    用户-&gt;&gt;GitHub: 进入开发者设置</span><br><span class="line">    GitHub--&gt;&gt;用户: 显示PAT创建界面</span><br><span class="line">    用户-&gt;&gt;GitHub: 配置令牌参数</span><br><span class="line">    GitHub--&gt;&gt;用户: 生成加密令牌</span><br><span class="line">    用户-&gt;&gt;本地: 保存至安全位置</span><br></pre></td></tr></table></figure><p><strong><a href="#-github-获取个人访问令牌pat全流程指南">⬆️ 返回顶部</a></strong><br><strong><a href="https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/managing-your-personal-access-tokens">📚 官方文档参考</a></strong><br>``` </p><blockquote><p>✨ 最佳实践建议：  </p><ul><li>为不同用途创建独立令牌（如<code>CI_PAT</code>/<code>API_PAT</code>）  </li><li>定期使用<a href="https://github.com/github/token-scan">GitHub Token Scanner</a>检查代码中的令牌泄露  </li><li>企业用户建议使用<a href="https://docs.github.com/en/developers/apps/getting-started-with-apps/about-apps">OAuth Apps</a>代替PAT</li></ul></blockquote>]]></content>
    
    
    <summary type="html">GitHub获取个人访问令牌（PAT）</summary>
    
    
    
    <category term="GitHub技巧" scheme="https://lxttz.github.io/categories/GitHub%E6%8A%80%E5%B7%A7/"/>
    
    
    <category term="GitHub" scheme="https://lxttz.github.io/tags/GitHub/"/>
    
  </entry>
  
  <entry>
    <title>ai话术指南</title>
    <link href="https://lxttz.github.io/posts/5a4cdc93.html"/>
    <id>https://lxttz.github.io/posts/5a4cdc93.html</id>
    <published>2025-03-11T10:00:54.000Z</published>
    <updated>2025-03-19T10:11:30.706Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ai话术"><a href="#ai话术" class="headerlink" title="ai话术"></a>ai话术</h1><h2 id="1-爬取网址内容"><a href="#1-爬取网址内容" class="headerlink" title="1.爬取网址内容"></a>1.爬取网址内容</h2><p>网址+将该网页的内容拷贝下来，整理总结最后以markdown的文件格式输出</p><h2 id="2-梳理内容笔记"><a href="#2-梳理内容笔记" class="headerlink" title="2.梳理内容笔记"></a>2.梳理内容笔记</h2><p>整理以上最后以markdown的文件格式输出，加上每一给平台的网址，标题加上一些小图标</p><h2 id="3-写某一方面的笔记"><a href="#3-写某一方面的笔记" class="headerlink" title="3.写某一方面的笔记"></a>3.写某一方面的笔记</h2><p>给我写一份XXX的详细笔记，从0到1，越详细越好，最后以markdown的格式输出，简单通俗易懂，标题前加上一些小图标 </p>]]></content>
    
    
    <summary type="html">ai话术指南</summary>
    
    
    
    <category term="ai" scheme="https://lxttz.github.io/categories/ai/"/>
    
    
    <category term="ai话术" scheme="https://lxttz.github.io/tags/ai%E8%AF%9D%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>免费好用的网站托管平台全面对比</title>
    <link href="https://lxttz.github.io/posts/78b95e04.html"/>
    <id>https://lxttz.github.io/posts/78b95e04.html</id>
    <published>2025-03-11T09:57:02.000Z</published>
    <updated>2025-03-11T09:59:23.186Z</updated>
    
    <content type="html"><![CDATA[<h3 id="🤖-Assistant"><a href="#🤖-Assistant" class="headerlink" title="🤖 Assistant"></a>🤖 Assistant</h3><h1 id="🌐-免费好用的静态网页托管平台全面对比介绍"><a href="#🌐-免费好用的静态网页托管平台全面对比介绍" class="headerlink" title="🌐 免费好用的静态网页托管平台全面对比介绍"></a>🌐 免费好用的静态网页托管平台全面对比介绍</h1><h2 id="🚀-5大免费静态托管平台对比（附官方链接）"><a href="#🚀-5大免费静态托管平台对比（附官方链接）" class="headerlink" title="🚀 5大免费静态托管平台对比（附官方链接）"></a>🚀 5大免费静态托管平台对比（附官方链接）</h2><h3 id="1-GitHub-Pages-🐙-→-官网"><a href="#1-GitHub-Pages-🐙-→-官网" class="headerlink" title="1. GitHub Pages 🐙 → 官网"></a>1. GitHub Pages 🐙 <a href="https://pages.github.com/">→ 官网</a></h3><ul><li><strong>特点优势</strong><br><img src="https://img.shields.io/badge/-推荐给开发者-blue?logo=github" alt="GitHub Pages">  <ul><li>完全免费，无需信用卡</li><li>直接与GitHub仓库关联</li><li>支持自定义域名+HTTPS</li><li>托管地址：<code>username.github.io</code></li></ul></li></ul><h3 id="2-Netlify-🚀-→-官网"><a href="#2-Netlify-🚀-→-官网" class="headerlink" title="2. Netlify 🚀 → 官网"></a>2. Netlify 🚀 <a href="https://www.netlify.com/">→ 官网</a></h3><ul><li><strong>创新功能</strong><br><img src="https://img.shields.io/badge/-自动化部署-green?logo=netlify" alt="Netlify">  <ul><li>全球50+CDN节点</li><li>免费Serverless函数</li><li>即时预览部署</li><li>特色功能：表单处理、A/B测试</li></ul></li></ul><h3 id="3-Vercel-⚡-→-官网"><a href="#3-Vercel-⚡-→-官网" class="headerlink" title="3. Vercel ⚡ → 官网"></a>3. Vercel ⚡ <a href="https://vercel.com/">→ 官网</a></h3><ul><li><strong>框架优化</strong><br><img src="https://img.shields.io/badge/-前端首选-purple?logo=vercel" alt="Vercel">  <ul><li>Next.js官方推荐</li><li>边缘网络渲染(Edge Network)</li><li>实时协作部署</li><li>测试地址：<code>project-name.vercel.app</code></li></ul></li></ul><h3 id="4-Cloudflare-Pages-🛡️-→-官网"><a href="#4-Cloudflare-Pages-🛡️-→-官网" class="headerlink" title="4. Cloudflare Pages 🛡️ → 官网"></a>4. Cloudflare Pages 🛡️ <a href="https://pages.cloudflare.com/">→ 官网</a></h3><ul><li><strong>安全加速</strong><br><img src="https://img.shields.io/badge/-全球覆盖-orange?logo=cloudflare" alt="Cloudflare">  <ul><li>250+全球CDN节点</li><li>免费DDoS防护</li><li>Workers脚本支持</li><li>特色：无限带宽+无限请求</li></ul></li></ul><h3 id="5-Firebase-Hosting-🔥-→-官网"><a href="#5-Firebase-Hosting-🔥-→-官网" class="headerlink" title="5. Firebase Hosting 🔥 → 官网"></a>5. Firebase Hosting 🔥 <a href="https://firebase.google.com/products/hosting">→ 官网</a></h3><ul><li><strong>全栈生态</strong><br><img src="https://img.shields.io/badge/-谷歌生态-red?logo=firebase" alt="Firebase">  <ul><li>深度整合数据库/认证</li><li>实时数据更新</li><li>全球Google CDN</li><li>部署命令：<code>firebase deploy</code></li></ul></li></ul><h2 id="📊-关键参数对比表"><a href="#📊-关键参数对比表" class="headerlink" title="📊 关键参数对比表"></a>📊 关键参数对比表</h2><div class="table-container"><table><thead><tr><th>平台</th><th>免费CDN节点</th><th>国内访问优化</th><th>特色功能</th><th>部署速度</th></tr></thead><tbody><tr><td>GitHub Pages</td><td>🌍 12</td><td>❌</td><td>开源整合</td><td>⏱️ 中</td></tr><tr><td>Netlify</td><td>🌐 58+</td><td>✔️</td><td>表单处理+自动化</td><td>⚡ 快</td></tr><tr><td>Vercel</td><td>⚡ 30+</td><td>✔️</td><td>边缘渲染+预览环境</td><td>🚀 极快</td></tr><tr><td>Cloudflare Pages</td><td>🌎 250+</td><td>⚠️ 波动</td><td>DDoS防护+Workers</td><td>🌩️ 快</td></tr><tr><td>Firebase Hosting</td><td>🔥 70+</td><td>❌</td><td>实时数据库整合</td><td>⏳ 中等</td></tr></tbody></table></div><h2 id="🛠️-部署流程示意图"><a href="#🛠️-部署流程示意图" class="headerlink" title="🛠️ 部署流程示意图"></a>🛠️ 部署流程示意图</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">graph TD</span><br><span class="line">    A[选择平台] --&gt; B&#123;是否需要框架?&#125;</span><br><span class="line">    B --&gt;|是| C[Vercel/Netlify]</span><br><span class="line">    B --&gt;|否| D[GitHub Pages]</span><br><span class="line">    C --&gt; E[连接Git仓库]</span><br><span class="line">    D --&gt; F[上传代码]</span><br><span class="line">    E --&gt; G[自动部署]</span><br><span class="line">    F --&gt; H[手动部署]</span><br></pre></td></tr></table></figure><h2 id="💡-选择建议"><a href="#💡-选择建议" class="headerlink" title="💡 选择建议"></a>💡 选择建议</h2><ul><li><strong>个人博客/文档</strong> → GitHub Pages</li><li><strong>企业官网</strong> → Cloudflare Pages</li><li><strong>前端框架项目</strong> → Vercel</li><li><strong>全栈应用</strong> → Firebase</li><li><strong>自动化需求</strong> → Netlify</li></ul><blockquote><p>📌 注意：国内用户推荐搭配<a href="https://www.aliyun.com/">阿里云</a>或<a href="https://cloud.tencent.com/">腾讯云</a>CDN加速使用</p></blockquote><p>附：<a href="https://web.dev/performance-scoring/">完整测试报告</a> | <a href="https://www.cdnplanet.com/">全球CDN节点查询</a><br>```</p>]]></content>
    
    
    <summary type="html">免费好用的网站托管平台全面对比</summary>
    
    
    
    <category term="博客" scheme="https://lxttz.github.io/categories/%E5%8D%9A%E5%AE%A2/"/>
    
    
    <category term="网站托管平台" scheme="https://lxttz.github.io/tags/%E7%BD%91%E7%AB%99%E6%89%98%E7%AE%A1%E5%B9%B3%E5%8F%B0/"/>
    
  </entry>
  
  <entry>
    <title>Trae-CN的入门笔记</title>
    <link href="https://lxttz.github.io/posts/a4c8ee63.html"/>
    <id>https://lxttz.github.io/posts/a4c8ee63.html</id>
    <published>2025-03-10T14:34:44.000Z</published>
    <updated>2025-03-10T14:46:17.420Z</updated>
    
    <content type="html"><![CDATA[<h3 id="🤖-Assistant"><a href="#🤖-Assistant" class="headerlink" title="🤖 Assistant"></a>🤖 Assistant</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># Trae 使用文档</span></span><br><span class="line"></span><br><span class="line"><span class="quote">&gt; 本文档基于 [<span class="string">Trae 官方文档</span>](<span class="link">https://docs.trae.com.cn/docs/what-is-trae?_lang=zh</span>) 整理</span></span><br><span class="line"></span><br><span class="line"><span class="section">## 什么是 Trae ?</span></span><br><span class="line"></span><br><span class="line">（描述 Trae 的核心功能，例如：轻量级 HTTP 客户端、特性亮点等）</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="section">## 主要特性</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> 🚀 简洁易用的 API 设计</span><br><span class="line"><span class="bullet">-</span> 🔧 请求/响应拦截器</span><br><span class="line"><span class="bullet">-</span> ⚡ 自动转换 JSON 数据</span><br><span class="line"><span class="bullet">-</span> 🔒 支持 TypeScript 类型推断</span><br><span class="line"><span class="bullet">-</span> 🌐 浏览器与 Node.js 双环境支持</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="section">## 安装方式</span></span><br><span class="line"></span><br><span class="line"><span class="section">### NPM</span></span><br><span class="line"><span class="code">```bash</span></span><br><span class="line"><span class="code">npm install trae</span></span><br></pre></td></tr></table></figure><h3 id="CDN"><a href="#CDN" class="headerlink" title="CDN"></a>CDN</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://unpkg.com/trae/dist/trae.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="快速入门"><a href="#快速入门" class="headerlink" title="快速入门"></a>快速入门</h2><h3 id="创建实例"><a href="#创建实例" class="headerlink" title="创建实例"></a>创建实例</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> trae <span class="keyword">from</span> <span class="string">&#x27;trae&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> api = trae.<span class="title function_">create</span>(&#123;</span><br><span class="line">  <span class="attr">baseUrl</span>: <span class="string">&#x27;https://api.example.com/v1&#x27;</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="发起请求"><a href="#发起请求" class="headerlink" title="发起请求"></a>发起请求</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// GET 请求</span></span><br><span class="line">api.<span class="title function_">get</span>(<span class="string">&#x27;/users&#x27;</span>)</span><br><span class="line">  .<span class="title function_">then</span>(<span class="function"><span class="params">response</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(response.<span class="property">data</span>))</span><br><span class="line">  .<span class="title function_">catch</span>(<span class="function"><span class="params">error</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">error</span>(error));</span><br><span class="line"></span><br><span class="line"><span class="comment">// POST 请求</span></span><br><span class="line">api.<span class="title function_">post</span>(<span class="string">&#x27;/users&#x27;</span>, &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;Alice&#x27;</span>,</span><br><span class="line">  <span class="attr">age</span>: <span class="number">28</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="API-参考"><a href="#API-参考" class="headerlink" title="API 参考"></a>API 参考</h2><h3 id="请求方法"><a href="#请求方法" class="headerlink" title="请求方法"></a>请求方法</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">trae.<span class="title function_">get</span>(url[, config])</span><br><span class="line">trae.<span class="title function_">post</span>(url, data[, config])</span><br><span class="line">trae.<span class="title function_">put</span>(url, data[, config])</span><br><span class="line">trae.<span class="title function_">delete</span>(url[, config])</span><br></pre></td></tr></table></figure><h3 id="配置项"><a href="#配置项" class="headerlink" title="配置项"></a>配置项</h3><div class="table-container"><table><thead><tr><th>参数</th><th>类型</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td><code>baseUrl</code></td><td>string</td><td><code>&#39;&#39;</code></td><td>基础请求路径</td></tr><tr><td><code>headers</code></td><td>object</td><td><code>&#123;&#125;</code></td><td>自定义请求头</td></tr><tr><td><code>timeout</code></td><td>number</td><td><code>0</code></td><td>请求超时时间</td></tr></tbody></table></div><h2 id="拦截器"><a href="#拦截器" class="headerlink" title="拦截器"></a>拦截器</h2><h3 id="请求拦截"><a href="#请求拦截" class="headerlink" title="请求拦截"></a>请求拦截</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">api.<span class="title function_">before</span>(<span class="function">(<span class="params">request</span>) =&gt;</span> &#123;</span><br><span class="line">  request.<span class="property">headers</span>.<span class="property">Authorization</span> = <span class="string">&#x27;Bearer token&#x27;</span>;</span><br><span class="line">  <span class="keyword">return</span> request;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="响应拦截"><a href="#响应拦截" class="headerlink" title="响应拦截"></a>响应拦截</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">api.<span class="title function_">after</span>(<span class="function">(<span class="params">response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Received response:&#x27;</span>, response);</span><br><span class="line">  <span class="keyword">return</span> response;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="错误处理"><a href="#错误处理" class="headerlink" title="错误处理"></a>错误处理</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">api.<span class="title function_">get</span>(<span class="string">&#x27;/error-endpoint&#x27;</span>)</span><br><span class="line">  .<span class="title function_">catch</span>(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (error.<span class="property">response</span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;服务器响应错误:&#x27;</span>, error.<span class="property">status</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;请求未发出:&#x27;</span>, error.<span class="property">message</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br></pre></td></tr></table></figure><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><h3 id="如何取消请求？"><a href="#如何取消请求？" class="headerlink" title="如何取消请求？"></a>如何取消请求？</h3><p>（解决方案说明）</p><h2 id="版本日志"><a href="#版本日志" class="headerlink" title="版本日志"></a>版本日志</h2><ul><li><strong>v1.0.0</strong> (2023-01-01)<ul><li>初始版本发布<br>```</li></ul></li></ul><hr><p>如需提供更准确的内容，请分享原始文档文本内容，我将帮助进行结构化转换。</p>]]></content>
    
    
    <summary type="html">Trae-CN的入门笔记，描述 Trae 的核心功能，例如：轻量级 HTTP 客户端、特性亮点等</summary>
    
    
    
    <category term="ai编码" scheme="https://lxttz.github.io/categories/ai%E7%BC%96%E7%A0%81/"/>
    
    
    <category term="Trae" scheme="https://lxttz.github.io/tags/Trae/"/>
    
  </entry>
  
  <entry>
    <title>springboot部署的问题</title>
    <link href="https://lxttz.github.io/posts/a8a2f7d9.html"/>
    <id>https://lxttz.github.io/posts/a8a2f7d9.html</id>
    <published>2025-03-05T06:15:23.000Z</published>
    <updated>2025-03-10T06:25:04.225Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试!" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="2ecbb369c05e0e2c80ef5684f56c6bae7c0d4ce7d2274ea8822854f4988429ae">a225aaeba5e546997ae504eef50c6509eaa2250882d944be287a727e99edacfd13ed24683e66afdc8b98fb0bccdb7e05cd9044f30f91baeea3d6de41a1ecfd3e5d420866d23b72aaf2afb5d3c87ce1cf9dca1d96138938f8006b1239d7c925f81e7d1b055484581ad0da18bb4c88a63475e23070fcd7e4537644bab5bc904fb4fc10c34d8c55e50329c1dd70bd9caffc4f97f2822f7836f9639f5d2dc1fd7f90f2c6c75aa8e33d45eda2104943d370468f69ba23dd6bf253d7e1ccac526c4bcc8ee3a59291b065d9fa71c786838ab5dbe91c9763c3a0ef1c36999195050cd8a99c917d5e9d168d34c9c300cb0ef7e549f28a5016ab084e82e1112b156dea2d5389f820be6a83e0720c5215933bd840a068a29bdb71a802063a4965c7e3b2c3cda2e188020555576d6edcbd340a7d69df4e1aef40430a5708c257ef5eb555ec395b832d9326195665a13f33eb9275362640aada658f7e712bcd0e315354aee12c8757208d1cc44e26d302f49acc9ef9d414c152a768c84ef8c86e811a3ae05419bd96cffeb08fda579a8490a9d4b925259a93a85adeedb1065f73b0ad29a9b73e84cf6b4afced73de3f02d1bb24145d9dfaed66c463b95e89a9f89826a1b343881b0bce1182ea140c08786661346f89cb08fa98ef200368ee730da64b6f8abbf62fb64f289512d97aea0f78cefcf583ea43afd04c2947dee7d2fe4bc3b8f526b6ce0e715831763cebdc22e124e8776086b1689273ea38349497c7b143533597a3160e32096ccf31cbbb04ac1a134863608fed3feb5ad2a898fa7a68eab68901527cdf28ff1f44bf069481dbe6cffa900889e5b0887e02df17292156a008e61315407c3d21035da64645f4d9cef1515ff011e31de88b05bc730f94bddf6043735055fa3812b394d1fd47c01c9d28b760de0197e2ebe413a790027ebadbafbadd8187fac88a957dd7b829e7744c5598288e6b62bde814c19d7f18e6a334f6a53193365c68a5e3b9d32183592ed09bb53f4cae2ec9a7b7b2ed0da4de3efbd050cfa679dba4bbdfa93f953ed5ddda2510b87813e20f7532b3516d0d5a23d274d44aded4fa068402ff7250a98ac70e7d6dd9076ab17e8b80f968e9c72a19b1792b8ade40ab387217453c7fe94bd6ec57fe3b6218feebf5ebe444f3f286f69118804e93a9ca086390b0709f9585f9fe9fa1d88d4147d549ad03b9481a5975095dac75208c0aee344c5267cbfae77ec05367ba0cc3dd16cf586c526a3d6ddf9f535a68882255acd40e3b9620e5dda9b5d566ec4e2883cda5bd21eabca2a327ce84174b5a392367d9086b996a21903ca68372544ab6e679f1bf25d78c1bd8b6acd727699bc2d11d7ce57eecade19caa84bcf7a7f7ea513651a511066daba57e219d8e142b7bbca9c2c41f4b5ad3f0b278bd4e1f6567697b29bdd95de4cf7a51b1fcab6c7b18cbad8964642c51c4afb118feda12e1449650f0a6d620149bba1f4f5696b98e01b5a05aa258448cf488e465e08d12bc5e5d82e9168e7836188e8bf364aa08d926ff49a2080fcc11c142433d8c4a893fa2312ae87ea9dc30b982808c0d016a30cced1501ebbfc868868999652242345f9a1f2b94512650ae38e761c57ede1b306c0efae0829d8f92f2ae0dff1cade0623c420c4ca5898902fbf345c5deeec0430614d31efd91319fb05664a07cd257bd12642f2b9bf7214da9b269869c753765e4f3a207eda8d13273bbc9d8fb95db611116e337854be104324452edc2af9c796a515206402696ba2d6cbbb60b958f2b5943fce4521563ebf9267a5ce2a8144ac79d77a998255520d90797b64fa2b145</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">springboot部署的问题，需要密码才能进入!</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">springboot部署的问题</summary>
    
    
    
    <category term="专升本" scheme="https://lxttz.github.io/categories/%E4%B8%93%E5%8D%87%E6%9C%AC/"/>
    
    
    <category term="专升本自我介绍" scheme="https://lxttz.github.io/tags/%E4%B8%93%E5%8D%87%E6%9C%AC%E8%87%AA%E6%88%91%E4%BB%8B%E7%BB%8D/"/>
    
  </entry>
  
  <entry>
    <title>vue神秘的代码</title>
    <link href="https://lxttz.github.io/posts/662a14d2.html"/>
    <id>https://lxttz.github.io/posts/662a14d2.html</id>
    <published>2025-03-01T07:24:07.000Z</published>
    <updated>2025-03-14T14:02:24.347Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试!" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="ab12017607948549a72626fffbdbc3c79f8c9d6a6de660c3fadcf7c6e72509db"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">vue神秘的代码哦，需要密码才能进入!</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">vue神秘的代码</summary>
    
    
    
    <category term="课程" scheme="https://lxttz.github.io/categories/%E8%AF%BE%E7%A8%8B/"/>
    
    <category term="个人" scheme="https://lxttz.github.io/categories/%E8%AF%BE%E7%A8%8B/%E4%B8%AA%E4%BA%BA/"/>
    
    
    <category term="专升本自我介绍" scheme="https://lxttz.github.io/tags/%E4%B8%93%E5%8D%87%E6%9C%AC%E8%87%AA%E6%88%91%E4%BB%8B%E7%BB%8D/"/>
    
  </entry>
  
  <entry>
    <title>Java神秘的程序</title>
    <link href="https://lxttz.github.io/posts/4e140152.html"/>
    <id>https://lxttz.github.io/posts/4e140152.html</id>
    <published>2025-03-01T07:19:55.000Z</published>
    <updated>2025-03-10T06:25:00.982Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试!" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="f60d7129ea4d7ddaa1a4cc8e221efa11d58bc31c4e7d6fb41c00ac9b0b715919"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">神秘的代码哦，需要密码才能进入!</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Java神秘的程序</summary>
    
    
    
    <category term="课程" scheme="https://lxttz.github.io/categories/%E8%AF%BE%E7%A8%8B/"/>
    
    <category term="个人" scheme="https://lxttz.github.io/categories/%E8%AF%BE%E7%A8%8B/%E4%B8%AA%E4%BA%BA/"/>
    
    
    <category term="专科专业课程" scheme="https://lxttz.github.io/tags/%E4%B8%93%E7%A7%91%E4%B8%93%E4%B8%9A%E8%AF%BE%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>数据结构第五章数组和广义表</title>
    <link href="https://lxttz.github.io/posts/a5ff5616.html"/>
    <id>https://lxttz.github.io/posts/a5ff5616.html</id>
    <published>2025-02-28T06:06:11.000Z</published>
    <updated>2025-02-28T06:18:08.905Z</updated>
    
    <content type="html"><![CDATA[<h3 id="🤖-Assistant"><a href="#🤖-Assistant" class="headerlink" title="🤖 Assistant"></a>🤖 Assistant</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 🧮 第五章：数组与广义表 · 从青铜到王者养成指南</span></span><br><span class="line"></span><br><span class="line"><span class="section">## 🌟 一、数组：整齐划一的「数据方阵」</span></span><br><span class="line"></span><br><span class="line"><span class="section">### 1.1 🧱 数组基础认知</span></span><br><span class="line">![<span class="string">数组结构示意图</span>](<span class="link">https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4b28d7c3f7ac4f4a857b1c5c15dcb0a7~tplv-k3u1fbpfcp-zoom-1.image</span>)</span><br><span class="line"><span class="code">```c</span></span><br><span class="line"><span class="code">int classroom[5] = &#123;85,92,78,90,88&#125;; // 典型的「数组宿舍楼」</span></span><br></pre></td></tr></table></figure><h4 id="📌-核心特点"><a href="#📌-核心特点" class="headerlink" title="📌 核心特点"></a>📌 核心特点</h4><div class="table-container"><table><thead><tr><th>特点</th><th>解读</th></tr></thead><tbody><tr><td>🔒 <strong>同质化</strong></td><td>所有「房间」住同类型数据</td></tr><tr><td>🚌 <strong>连续存储</strong></td><td>内存地址连续（门牌号相邻）</td></tr><tr><td>🎯 <strong>随机访问</strong></td><td>通过下标可直接定位到具体元素  </td></tr></tbody></table></div><h3 id="1-2-🏗️-高维数组建模秘籍"><a href="#1-2-🏗️-高维数组建模秘籍" class="headerlink" title="1.2 🏗️ 高维数组建模秘籍"></a>1.2 🏗️ 高维数组建模秘籍</h3><h4 id="🔢-二维数组地址计算（行优先）"><a href="#🔢-二维数组地址计算（行优先）" class="headerlink" title="🔢 二维数组地址计算（行优先）"></a>🔢 二维数组地址计算（行优先）</h4><p>★ <strong>公式密码</strong>：<code>Loc(A[i][j]) = Loc(A[0][0]) + (i*n + j)*size</code><br>假设5x4矩阵中每个元素占4字节：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 计算A[2][3]地址（起始地址200）</span></span><br><span class="line">地址 = <span class="number">200</span> + (<span class="number">2</span>*<span class="number">4</span> + <span class="number">3</span>)*<span class="number">4</span> = <span class="number">200</span> + <span class="number">11</span>*<span class="number">4</span> = <span class="number">244</span> ✔️</span><br></pre></td></tr></table></figure></p><h4 id="🗺️-存储策略对比"><a href="#🗺️-存储策略对比" class="headerlink" title="🗺️ 存储策略对比"></a>🗺️ 存储策略对比</h4><div class="table-container"><table><thead><tr><th>策略</th><th>存储方式</th><th>适用场景</th></tr></thead><tbody><tr><td>行优先存储</td><td>按行展开(类似读书顺序)</td><td>C/C++、Python</td></tr><tr><td>列优先存储</td><td>先排完一列再下一列</td><td>Fortran语言</td></tr></tbody></table></div><h3 id="1-3-🦸♂️-特殊矩阵的「瘦身术」"><a href="#1-3-🦸♂️-特殊矩阵的「瘦身术」" class="headerlink" title="1.3 🦸♂️ 特殊矩阵的「瘦身术」"></a>1.3 🦸♂️ 特殊矩阵的「瘦身术」</h3><h4 id="🔀-对称矩阵压缩"><a href="#🔀-对称矩阵压缩" class="headerlink" title="🔀 对称矩阵压缩"></a>🔀 对称矩阵压缩</h4><p>只需存储对角线及一侧元素：<br><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">原矩阵：      存储数组：</span><br><span class="line">1<span class="number"> 2 </span>3      <span class="number"> 1 </span></span><br><span class="line">2<span class="number"> 4 </span>5 ➔    <span class="number"> 2 </span>4 </span><br><span class="line">3<span class="number"> 5 </span>6      <span class="number"> 3 </span>5 6</span><br></pre></td></tr></table></figure></p><h4 id="🌲-稀疏矩阵的三元组表示"><a href="#🌲-稀疏矩阵的三元组表示" class="headerlink" title="🌲 稀疏矩阵的三元组表示"></a>🌲 稀疏矩阵的三元组表示</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Triple</span> &#123;</span></span><br><span class="line">    <span class="type">int</span> row;</span><br><span class="line">    <span class="type">int</span> col;</span><br><span class="line">    <span class="type">int</span> value;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// 存储非零元素坐标和值</span></span><br></pre></td></tr></table></figure><h2 id="🌌-二、广义表：会「变身术」的数据魔法师"><a href="#🌌-二、广义表：会「变身术」的数据魔法师" class="headerlink" title="🌌 二、广义表：会「变身术」的数据魔法师"></a>🌌 二、广义表：会「变身术」的数据魔法师</h2><h3 id="2-1-✨-魔法特性"><a href="#2-1-✨-魔法特性" class="headerlink" title="2.1 ✨ 魔法特性"></a>2.1 ✨ 魔法特性</h3><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(莫比乌斯环, (递归, (套娃)), <span class="number">42</span>) <span class="comment">; Lisp风格的广义表</span></span><br></pre></td></tr></table></figure><ul><li>🌀 <strong>魔法元素</strong>：可以是原子（基本数据项）或子表</li><li>🎭 <strong>形态自由</strong>：支持空表、嵌套、递归结构</li><li>🕳️ <strong>深度定义</strong>：嵌套层数（原子深度为0，空表情深度为1）</li></ul><h3 id="2-2-🌀-结构解密"><a href="#2-2-🌀-结构解密" class="headerlink" title="2.2 🌀 结构解密"></a>2.2 🌀 结构解密</h3><h4 id="头尾表示法-vs-层次表示法"><a href="#头尾表示法-vs-层次表示法" class="headerlink" title="头尾表示法 vs 层次表示法"></a>头尾表示法 vs 层次表示法</h4><p><img src="https://img-blog.csdnimg.cn/20201119194708325.png" alt="广义表示例图"></p><h4 id="终极挑战：计算深度"><a href="#终极挑战：计算深度" class="headerlink" title="终极挑战：计算深度"></a>终极挑战：计算深度</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 计算广义表 L=(a,(b,(c,d)),e) 的深度</span></span><br><span class="line"><span class="number">1.</span> a → 深度<span class="number">0</span>（原子）</span><br><span class="line"><span class="number">2.</span> (b,(c,d)) → 分解后得到(c,d)，深入一层 → 总深度 <span class="number">2</span>+<span class="number">1</span>=<span class="number">3</span> ✔️</span><br></pre></td></tr></table></figure><h3 id="2-3-🔧-核心操作工具箱"><a href="#2-3-🔧-核心操作工具箱" class="headerlink" title="2.3 🔧 核心操作工具箱"></a>2.3 🔧 核心操作工具箱</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 伪代码示例：取表头和表尾</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GList</span> &#123;</span><br><span class="line">    Object head;   <span class="comment">// 可能是原子或子表</span></span><br><span class="line">    GList tail;    <span class="comment">// 剩余部分构成的新广义表</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="📊-三、考古现场：数组-vs-广义表"><a href="#📊-三、考古现场：数组-vs-广义表" class="headerlink" title="📊 三、考古现场：数组 vs 广义表"></a>📊 三、考古现场：数组 vs 广义表</h2><div class="table-container"><table><thead><tr><th>对比维度</th><th>数组</th><th>广义表</th><th>战场解析</th></tr></thead><tbody><tr><td>🔢 <strong>元素类型</strong></td><td>严格统一</td><td>混合类型自由搭配</td><td>广义表更灵活</td></tr><tr><td>🧠 <strong>存储结构</strong></td><td>线性的物理连续</td><td>递归的逻辑链接</td><td>数组访问更快</td></tr><tr><td>🚀 <strong>操作效率</strong></td><td>删改耗时O(n)</td><td>动态操作更高效</td><td>各有适用场景</td></tr><tr><td>🎮 <strong>典型应用</strong></td><td>图像处理、矩阵运算</td><td>人工智能、语法分析</td><td>领域分工明确</td></tr></tbody></table></div><h2 id="🧩-四、思维导图脑暴中心"><a href="#🧩-四、思维导图脑暴中心" class="headerlink" title="🧩 四、思维导图脑暴中心"></a>🧩 四、思维导图脑暴中心</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mindmap</span><br><span class="line">  root((高阶数据结构))</span><br><span class="line">    数组--&gt; 特点[&quot;🔑 同质 | 连续 | 随机访问&quot;]</span><br><span class="line">    数组--&gt; 分类[&quot;📦 一维 → 多维 → 特殊矩阵&quot;]</span><br><span class="line">    数组--&gt; 操作[&quot;⚡ 查改O(1) | 插删O(n)&quot;]</span><br><span class="line">    广义表--&gt; 特性[&quot;🌀 递归 | 嵌套 | 灵活结构&quot;]</span><br><span class="line">    广义表--&gt; 表示法[&quot;🔖 头尾 ↔ 层级&quot;]</span><br><span class="line">    广义表--&gt; 魔法操作[&quot;🎩 取头/尾 | 求深度&quot;]</span><br><span class="line">    应用场景--&gt; 数组应用[&quot;📷 图像存储 | 矩阵运算&quot;]</span><br><span class="line">    应用场景--&gt; 广义表应用[&quot;🤖 AI决策树 | 编译器解析&quot;]</span><br></pre></td></tr></table></figure><h2 id="💡-学习效果自测（含答案）"><a href="#💡-学习效果自测（含答案）" class="headerlink" title="💡 学习效果自测（含答案）"></a>💡 学习效果自测（含答案）</h2><ol><li><p><strong>二维数组A[8][10]采用行优先存储，首地址200，每个元素占4字节，求A[3][5]地址？</strong><br>➔ 展开计算：200 + (3<em>10 +5)</em>4 = 200 + 35*4 = 340 ✅</p></li><li><p><strong>广义表L=((a,b), (c,(d,e)))的深度是多少？</strong><br>➔ 最深层是(d,e)所在位置：深度为3 ✅</p></li><li><p><strong>对对称矩阵进行压缩存储的目的是什么？</strong><br>➔ 节省存储空间 + 提升访问效率 ✅</p></li></ol><p>🌟 提示：尝试用不同编程语言实现广义表的基础操作，能加深理解哦！<br>```</p><hr><p>✨ <strong>学习锦囊</strong>：建议配合可视化工具（如Data Structure Visualizations网站）观察数组和广义表的动态操作过程，理论结合实践效果更佳！</p>]]></content>
    
    
    <summary type="html">数据结构第五章数组和广义表</summary>
    
    
    
    <category term="数据结构" scheme="https://lxttz.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
    <category term="数组" scheme="https://lxttz.github.io/tags/%E6%95%B0%E7%BB%84/"/>
    
    <category term="广义表" scheme="https://lxttz.github.io/tags/%E5%B9%BF%E4%B9%89%E8%A1%A8/"/>
    
  </entry>
  
  <entry>
    <title>数据结构第四章串</title>
    <link href="https://lxttz.github.io/posts/3b81ea37.html"/>
    <id>https://lxttz.github.io/posts/3b81ea37.html</id>
    <published>2025-02-28T03:08:58.000Z</published>
    <updated>2025-02-28T03:18:46.791Z</updated>
    
    <content type="html"><![CDATA[<h3 id="🤖-Assistant"><a href="#🤖-Assistant" class="headerlink" title="🤖 Assistant"></a>🤖 Assistant</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 📜 第四章 串（String）</span></span><br><span class="line"></span><br><span class="line"><span class="section">## 🌟 基本概念</span></span><br><span class="line"><span class="section">### 🎯 串是什么？</span></span><br><span class="line">🔹 <span class="strong">**定义**</span>：串是由零个或多个字符组成的<span class="strong">**有限序列**</span>（线性表的特例，元素类型固定为字符）  </span><br><span class="line">🔹 <span class="strong">**关键术语**</span>：  </span><br><span class="line"><span class="bullet">  -</span> <span class="strong">**子串**</span>：串中任意连续字符组成的子序列  </span><br><span class="line"><span class="bullet">  -</span> <span class="strong">**主串**</span>：包含子串的原始串  </span><br><span class="line"><span class="bullet">  -</span> <span class="strong">**字符位置**</span>：字符在序列中的序号（从1开始）  </span><br><span class="line"><span class="bullet">  -</span> <span class="strong">**串相等**</span>：长度相同且对应位置字符完全相同  </span><br><span class="line"></span><br><span class="line">🔸 <span class="strong">**示例对比**</span>：  </span><br><span class="line"><span class="code">```text</span></span><br><span class="line"><span class="code">主串 S = &quot;HelloWorld&quot;</span></span><br><span class="line"><span class="code">子串 T = &quot;lloWo&quot;</span></span><br><span class="line"><span class="code">空串 = &quot;&quot;</span></span><br><span class="line"><span class="code">空格串 = &quot;   &quot;（包含3个空格）</span></span><br></pre></td></tr></table></figure><hr><h2 id="🏗️-串的存储结构"><a href="#🏗️-串的存储结构" class="headerlink" title="🏗️ 串的存储结构"></a>🏗️ 串的存储结构</h2><h3 id="📌-顺序存储结构（定长）"><a href="#📌-顺序存储结构（定长）" class="headerlink" title="📌 顺序存储结构（定长）"></a>📌 顺序存储结构（定长）</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> MAXLEN 255</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    <span class="type">char</span> ch[MAXLEN];  <span class="comment">// 存储字符的数组</span></span><br><span class="line">    <span class="type">int</span> length;       <span class="comment">// 当前串长度</span></span><br><span class="line">&#125; HString;</span><br></pre></td></tr></table></figure><p>🔸 <strong>特点</strong>：  </p><ul><li>预分配固定长度空间  </li><li>可能截断超长字符串（需处理溢出问题）  </li></ul><h3 id="📌-堆分配存储（动态扩展）"><a href="#📌-堆分配存储（动态扩展）" class="headerlink" title="📌 堆分配存储（动态扩展）"></a>📌 堆分配存储（动态扩展）</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    <span class="type">char</span> *ch;   <span class="comment">// 动态分配首地址</span></span><br><span class="line">    <span class="type">int</span> length; <span class="comment">// 实际长度</span></span><br><span class="line">&#125; DString;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化示例</span></span><br><span class="line">DString S;</span><br><span class="line">S.ch = (<span class="type">char</span>*)<span class="built_in">malloc</span>(<span class="number">100</span> * <span class="keyword">sizeof</span>(<span class="type">char</span>)); </span><br><span class="line">S.length = <span class="number">0</span>;</span><br></pre></td></tr></table></figure><p>🔹 <strong>优势</strong>：可动态调整内存大小（realloc实现扩容）</p><h3 id="📌-链式存储（块链结构）"><a href="#📌-链式存储（块链结构）" class="headerlink" title="📌 链式存储（块链结构）"></a>📌 链式存储（块链结构）</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> CHUNKSIZE 4  <span class="comment">// 每个节点存4字符</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">Chunk</span> &#123;</span></span><br><span class="line">    <span class="type">char</span> ch[CHUNKSIZE];</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Chunk</span> *<span class="title">next</span>;</span></span><br><span class="line">&#125; Chunk;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    Chunk *head, *tail;  <span class="comment">// 头尾指针</span></span><br><span class="line">    <span class="type">int</span> curlen;          <span class="comment">// 当前总长度</span></span><br><span class="line">&#125; LString;</span><br></pre></td></tr></table></figure><p>🔸 <strong>特点</strong>：  </p><ul><li>存储密度 = 实际字符数 / 总分配空间  </li><li>适合超大文本存储（如小说内容）  </li></ul><hr><h2 id="🔍-串的基本操作"><a href="#🔍-串的基本操作" class="headerlink" title="🔍 串的基本操作"></a>🔍 串的基本操作</h2><h3 id="1-求串长（StrLength）"><a href="#1-求串长（StrLength）" class="headerlink" title="1. 求串长（StrLength）"></a>1. 求串长（StrLength）</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">StrLength</span><span class="params">(DString S)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> S.length;  <span class="comment">// O(1)</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-串比较（StrCompare）"><a href="#2-串比较（StrCompare）" class="headerlink" title="2. 串比较（StrCompare）"></a>2. 串比较（StrCompare）</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">StrCompare</span><span class="params">(DString S, DString T)</span> &#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;S.length &amp;&amp; i&lt;T.length; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(S.ch[i] != T.ch[i]) </span><br><span class="line">            <span class="keyword">return</span> S.ch[i]-T.ch[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> S.length - T.length; <span class="comment">// 前缀相同则比较长度</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-串连接（Concat）"><a href="#3-串连接（Concat）" class="headerlink" title="3. 串连接（Concat）"></a>3. 串连接（Concat）</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">DString <span class="title function_">Concat</span><span class="params">(DString S, DString T)</span> &#123;</span><br><span class="line">    DString newStr;</span><br><span class="line">    newStr.ch = (<span class="type">char</span>*)<span class="built_in">malloc</span>((S.length + T.length) * <span class="keyword">sizeof</span>(<span class="type">char</span>));</span><br><span class="line">    <span class="comment">// 复制S的内容</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;S.length; i++) newStr.ch[i] = S.ch[i];</span><br><span class="line">    <span class="comment">// 追加T的内容</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;T.length; i++) newStr.ch[S.length+i] = T.ch[i];</span><br><span class="line">    newStr.length = S.length + T.length;</span><br><span class="line">    <span class="keyword">return</span> newStr;  <span class="comment">// 时间复杂度 O(n+m)</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="⚔️-模式匹配算法"><a href="#⚔️-模式匹配算法" class="headerlink" title="⚔️ 模式匹配算法"></a>⚔️ 模式匹配算法</h2><h3 id="🛠️-BF算法（暴力匹配）"><a href="#🛠️-BF算法（暴力匹配）" class="headerlink" title="🛠️ BF算法（暴力匹配）"></a>🛠️ BF算法（暴力匹配）</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">Index_BF</span><span class="params">(DString S, DString T)</span> &#123;</span><br><span class="line">    <span class="type">int</span> i=<span class="number">0</span>, j=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i &lt; S.length &amp;&amp; j &lt; T.length) &#123;</span><br><span class="line">        <span class="keyword">if</span>(S.ch[i] == T.ch[j]) &#123; i++; j++; &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123; i = i - j + <span class="number">1</span>; j = <span class="number">0</span>; &#125;  <span class="comment">// i回溯</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> (j &gt;= T.length) ? (i - T.length) : <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>🔸 <strong>时间复杂度</strong>：O(n×m)（最坏情况）<br>🔹 <strong>示例流程</strong>：<br>主串 <code>ABABCABCAC</code>，模式串 <code>ABCAC</code><br><img src="https://cdn.jsdelivr.net/gh/kevinwho/pic@main/20230803145627.png" alt="BF算法示例"></p><hr><h3 id="🎯-KMP算法（改进版）"><a href="#🎯-KMP算法（改进版）" class="headerlink" title="🎯 KMP算法（改进版）"></a>🎯 KMP算法（改进版）</h3><h4 id="核心思想：利用已匹配信息避免回溯"><a href="#核心思想：利用已匹配信息避免回溯" class="headerlink" title="核心思想：利用已匹配信息避免回溯"></a>核心思想：利用已匹配信息避免回溯</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 关键：构建next数组</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">get_next</span><span class="params">(DString T, <span class="type">int</span> next[])</span> &#123;</span><br><span class="line">    <span class="type">int</span> i=<span class="number">0</span>, j=<span class="number">-1</span>;</span><br><span class="line">    next[<span class="number">0</span>] = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">while</span>(i &lt; T.length<span class="number">-1</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(j==<span class="number">-1</span> || T.ch[i]==T.ch[j]) &#123;</span><br><span class="line">            i++; j++;</span><br><span class="line">            next[i] = j;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            j = next[j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// KMP主算法</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">Index_KMP</span><span class="params">(DString S, DString T)</span> &#123;</span><br><span class="line">    <span class="type">int</span> i=<span class="number">0</span>, j=<span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> next[T.length];</span><br><span class="line">    get_next(T, next);</span><br><span class="line">    <span class="keyword">while</span>(i &lt; S.length &amp;&amp; j &lt; T.length) &#123;</span><br><span class="line">        <span class="keyword">if</span>(j==<span class="number">-1</span> || S.ch[i]==T.ch[j]) &#123;i++; j++;&#125;</span><br><span class="line">        <span class="keyword">else</span> j = next[j];  <span class="comment">// j回退，i不回溯</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> (j &gt;= T.length) ? (i - T.length) : <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>🔹 <strong>性能飞跃</strong>：时间复杂度 → <strong>O(n+m)</strong><br>🔸 <strong>next数组计算示例</strong>：模式串 <code>ABCDABD</code><br>| 索引 | 0 | 1 | 2 | 3 | 4 | 5 | 6 |<br>|———|—-|—-|—-|—-|—-|—-|—-|<br>| 字符 | A | B | C | D | A | B | D |<br>| next | -1| 0 | 0 | 0 | 0 | 1 | 2 | </p><hr><h2 id="📊-模式匹配算法对比"><a href="#📊-模式匹配算法对比" class="headerlink" title="📊 模式匹配算法对比"></a>📊 模式匹配算法对比</h2><div class="table-container"><table><thead><tr><th>算法</th><th>时间复杂度</th><th>空间复杂度</th><th>优点</th><th>缺点</th></tr></thead><tbody><tr><td>BF算法</td><td>O(n×m)</td><td>O(1)</td><td>实现简单</td><td>效率低，回溯多</td></tr><tr><td>KMP算法</td><td>O(n+m)</td><td>O(m)</td><td>无回溯，效率高</td><td>需要预处理next数组</td></tr></tbody></table></div><hr><h2 id="🚀-实际应用场景"><a href="#🚀-实际应用场景" class="headerlink" title="🚀 实际应用场景"></a>🚀 实际应用场景</h2><ol><li><strong>文本编辑器</strong>：快速查找/替换关键词  </li><li><strong>搜索引擎</strong>：网页内容的关键词匹配  </li><li><strong>生物信息</strong>：DNA序列模式匹配  </li><li><strong>代码解析</strong>：XML/JSON等格式校验  </li><li><strong>数据压缩</strong>：LZ77等压缩算法基于字符串匹配  </li></ol><hr><h2 id="🧠-思维导图总结"><a href="#🧠-思维导图总结" class="headerlink" title="🧠 思维导图总结"></a>🧠 思维导图总结</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">graph TD</span><br><span class="line">    A[串] --&gt; B[基本概念]</span><br><span class="line">    A --&gt; C[存储结构]</span><br><span class="line">    A --&gt; D[基本操作]</span><br><span class="line">    A --&gt; E[模式匹配]</span><br><span class="line">    </span><br><span class="line">    B --&gt; F[空串/空格串]</span><br><span class="line">    B --&gt; G[子串/主串]</span><br><span class="line">    </span><br><span class="line">    C --&gt; H[顺序存储]</span><br><span class="line">    C --&gt; I[堆分配]</span><br><span class="line">    C --&gt; J[链式存储]</span><br><span class="line">    </span><br><span class="line">    D --&gt; K[连接]</span><br><span class="line">    D --&gt; L[比较]</span><br><span class="line">    D --&gt; M[求子串]</span><br><span class="line">    </span><br><span class="line">    E --&gt; N[BF算法]</span><br><span class="line">    E --&gt; O[KMP算法]</span><br><span class="line">    O --&gt; P[next数组]</span><br></pre></td></tr></table></figure><hr><h2 id="📜-扩展知识"><a href="#📜-扩展知识" class="headerlink" title="📜 扩展知识"></a>📜 扩展知识</h2><h3 id="1-KMP优化：nextval数组"><a href="#1-KMP优化：nextval数组" class="headerlink" title="1. KMP优化：nextval数组"></a>1. KMP优化：nextval数组</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">get_nextval</span><span class="params">(DString T, <span class="type">int</span> nextval[])</span> &#123;</span><br><span class="line">    <span class="type">int</span> i=<span class="number">0</span>, j=<span class="number">-1</span>;</span><br><span class="line">    nextval[<span class="number">0</span>] = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">while</span>(i &lt; T.length<span class="number">-1</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(j==<span class="number">-1</span> || T.ch[i] == T.ch[j]) &#123;</span><br><span class="line">            i++; j++;</span><br><span class="line">            <span class="comment">// 新增优化判断</span></span><br><span class="line">            <span class="keyword">if</span>(T.ch[i] != T.ch[j]) nextval[i] = j;</span><br><span class="line">            <span class="keyword">else</span> nextval[i] = nextval[j];</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            j = nextval[j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-Sunday算法"><a href="#2-Sunday算法" class="headerlink" title="2. Sunday算法"></a>2. Sunday算法</h3><p>🔹 <strong>特点</strong>：每次失败时根据主串中下一个字符决定跳跃步数<br>🔸 <strong>优势</strong>：实际应用中比KMP更快（如grep工具）</p><hr><h2 id="⚠️-易错点提醒"><a href="#⚠️-易错点提醒" class="headerlink" title="⚠️ 易错点提醒"></a>⚠️ 易错点提醒</h2><ol><li><strong>数组下标处理</strong>：C语言中字符串数组从0开始，教材伪代码常从1开始  </li><li><strong>KMP的next数组</strong>：不同教材定义可能不同（本例采用主流-1初始值方式）  </li><li><strong>模式串为空串</strong>：需特殊处理避免运算错误<br>```</li></ol>]]></content>
    
    
    <summary type="html">数据结构第四章串</summary>
    
    
    
    <category term="数据结构" scheme="https://lxttz.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
    <category term="串" scheme="https://lxttz.github.io/tags/%E4%B8%B2/"/>
    
  </entry>
  
  <entry>
    <title>数据结构第三章栈与队列</title>
    <link href="https://lxttz.github.io/posts/3740a66a.html"/>
    <id>https://lxttz.github.io/posts/3740a66a.html</id>
    <published>2025-02-28T03:05:24.000Z</published>
    <updated>2025-02-28T03:06:25.084Z</updated>
    
    <content type="html"><![CDATA[<h3 id="🤖-Assistant"><a href="#🤖-Assistant" class="headerlink" title="🤖 Assistant"></a>🤖 Assistant</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 🧱 第三章 栈与队列</span></span><br><span class="line"></span><br><span class="line"><span class="section">## 🌟 基本概念</span></span><br><span class="line"><span class="section">### 🎯 什么是数据结构中的&quot;栈&quot;？</span></span><br><span class="line"><span class="code">```c</span></span><br><span class="line"><span class="code">// 栈的操作特点：LIFO（Last In First Out）</span></span><br><span class="line"><span class="code">#define MaxSize 50  </span></span><br><span class="line"><span class="code">typedef struct &#123;</span></span><br><span class="line"><span class="code">    ElemType data[MaxSize];  </span></span><br><span class="line"><span class="code">    int top;  // 栈顶指针</span></span><br><span class="line"><span class="code">&#125; SqStack;</span></span><br></pre></td></tr></table></figure><p>🔹 <strong>核心规则</strong>：  </p><ul><li>插入/删除只能在一端进行（栈顶）  </li><li>后进入的元素先被访问（就像叠盘子）<br>🔸 <strong>关键操作</strong>：  </li><li>Push（入栈） → <code>data[++top] = x</code>  </li><li>Pop（出栈） → <code>x = data[top--]</code><br>⚠️ 注意：空栈时top=-1（图示↓）<br><img src="https://cdn.jsdelivr.net/gh/kevinwho/pic@main/20230725110935.png" alt="栈结构示意图"></li></ul><hr><h3 id="🎯-队列是什么？"><a href="#🎯-队列是什么？" class="headerlink" title="🎯 队列是什么？"></a>🎯 队列是什么？</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 队列的操作特点：FIFO（First In First Out）</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    ElemType data[MaxSize];  </span><br><span class="line">    <span class="type">int</span> front, rear;  <span class="comment">// 队头队尾指针</span></span><br><span class="line">&#125; SqQueue;</span><br></pre></td></tr></table></figure><p>🔹 <strong>基本规则</strong>：  </p><ul><li>插入在队尾（rear），删除在队头（front）  </li><li>先进入的元素先离开（类似排队）<br>🔸 <strong>关键操作</strong>：  </li><li>入队 → <code>data[rear++] = x</code>  </li><li>出队 → <code>x = data[front++]</code><br>⚠️ 假溢出图示↓<br><img src="https://cdn.jsdelivr.net/gh/kevinwho/pic@main/20230725111244.png" alt="队列假溢出"></li></ul><hr><h2 id="🧱-栈的深度解析"><a href="#🧱-栈的深度解析" class="headerlink" title="🧱 栈的深度解析"></a>🧱 栈的深度解析</h2><h3 id="🔧-两种实现方式对比"><a href="#🔧-两种实现方式对比" class="headerlink" title="🔧 两种实现方式对比"></a>🔧 两种实现方式对比</h3><div class="table-container"><table><thead><tr><th>类型</th><th>存储方式</th><th>操作复杂度</th><th>典型应用场景</th></tr></thead><tbody><tr><td>顺序栈</td><td>静态数组+栈顶指针</td><td>O(1)</td><td>函数调用栈、表达式求值</td></tr><tr><td>链栈</td><td>链表+头插法</td><td>O(1)</td><td>递归转非递归</td></tr></tbody></table></div><h4 id="📌-栈的溢出问题"><a href="#📌-栈的溢出问题" class="headerlink" title="📌 栈的溢出问题"></a>📌 栈的溢出问题</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">flowchart TD</span><br><span class="line">    A[栈空] --&gt;|top=-1时pop| Underflow</span><br><span class="line">    B[栈满] --&gt;|top=MaxSize-1时push| Overflow</span><br></pre></td></tr></table></figure><hr><h2 id="🚦-队列的全面剖析"><a href="#🚦-队列的全面剖析" class="headerlink" title="🚦 队列的全面剖析"></a>🚦 队列的全面剖析</h2><h3 id="🔧-三种实现方案"><a href="#🔧-三种实现方案" class="headerlink" title="🔧 三种实现方案"></a>🔧 三种实现方案</h3><h4 id="1-顺序队列（基础版）"><a href="#1-顺序队列（基础版）" class="headerlink" title="1. 顺序队列（基础版）"></a>1. 顺序队列（基础版）</h4><p>🔸 <strong>缺陷</strong>：产生假溢出 → 已出队的空间无法复用</p><h4 id="2-循环队列（经典解决方案）"><a href="#2-循环队列（经典解决方案）" class="headerlink" title="2. 循环队列（经典解决方案）"></a>2. 循环队列（经典解决方案）</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 关键算法：</span></span><br><span class="line"><span class="comment">// 入队操作</span></span><br><span class="line">rear = (rear + <span class="number">1</span>) % MaxSize;</span><br><span class="line"><span class="comment">// 出队操作</span></span><br><span class="line">front = (front + <span class="number">1</span>) % MaxSize;</span><br></pre></td></tr></table></figure><p>🔹 <strong>判空条件</strong>：<code>front == rear</code><br>🔹 <strong>判满策略</strong>：  </p><ul><li>方案一：留空一个元素 → <code>(rear+1)%MaxSize == front</code>  </li><li>方案二：新增size变量 → <code>size == MaxSize</code></li></ul><h4 id="3-链式队列（动态增长）"><a href="#3-链式队列（动态增长）" class="headerlink" title="3. 链式队列（动态增长）"></a>3. 链式队列（动态增长）</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">LinkNode</span> &#123;</span></span><br><span class="line">    ElemType data;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">LinkNode</span> *<span class="title">next</span>;</span></span><br><span class="line">&#125; LinkNode;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    LinkNode *front, *rear;</span><br><span class="line">&#125; LinkQueue;</span><br></pre></td></tr></table></figure><p>🔸 优点：永不溢出（除非内存不足）</p><hr><h2 id="🎭-特殊队列"><a href="#🎭-特殊队列" class="headerlink" title="🎭 特殊队列"></a>🎭 特殊队列</h2><h3 id="🔄-双端队列（Deque）"><a href="#🔄-双端队列（Deque）" class="headerlink" title="🔄 双端队列（Deque）"></a>🔄 双端队列（Deque）</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 支持两端操作的队列</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">addFirst</span><span class="params">(ElemType x)</span>;  <span class="comment">// 队头插入</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">addLast</span><span class="params">(ElemType x)</span>;   <span class="comment">// 队尾插入</span></span><br><span class="line">ElemType <span class="title function_">removeFirst</span><span class="params">()</span>;     <span class="comment">// 队头删除</span></span><br><span class="line">ElemType <span class="title function_">removeLast</span><span class="params">()</span>;      <span class="comment">// 队尾删除</span></span><br></pre></td></tr></table></figure><p>🔸 <strong>应用场景</strong>：滑动窗口算法、撤销/重做功能</p><h3 id="🔝-优先级队列"><a href="#🔝-优先级队列" class="headerlink" title="🔝 优先级队列"></a>🔝 优先级队列</h3><p>🔹 <strong>本质</strong>：出队顺序由元素优先级决定（常用于操作系统任务调度）</p><hr><h2 id="📊-栈与队列的终极对决"><a href="#📊-栈与队列的终极对决" class="headerlink" title="📊 栈与队列的终极对决"></a>📊 栈与队列的终极对决</h2><div class="table-container"><table><thead><tr><th>特性</th><th>栈</th><th>队列</th></tr></thead><tbody><tr><td>数据进出规则</td><td>LIFO（后进先出）</td><td>FIFO（先进先出）</td></tr><tr><td>典型结构</td><td>单开口容器</td><td>双开口管道</td></tr><tr><td>核心指针</td><td>top指针</td><td>front/rear指针</td></tr><tr><td>经典应用</td><td>括号匹配/递归调用</td><td>消息队列/BFS遍历</td></tr></tbody></table></div><hr><h2 id="🛠️-实战应用场景"><a href="#🛠️-实战应用场景" class="headerlink" title="🛠️ 实战应用场景"></a>🛠️ 实战应用场景</h2><ol><li><strong>栈的典型应用</strong>：  <ul><li>函数调用栈（执行上下文管理）  </li><li>编辑器撤销功能（Ctrl+Z）  </li><li>括号有效性检测（{[()]}判断）  </li></ul></li><li><strong>队列的经典场景</strong>：  <ul><li>打印机任务队列（先到先打印）  </li><li>线程池任务调度（保持处理顺序）  </li><li>广度优先搜索（BFS逐层遍历）  </li></ul></li><li><strong>混合应用</strong>：  <ul><li>用两个栈实现队列  </li><li>用队列实现栈  </li></ul></li></ol><hr><h2 id="🧠-思维导图"><a href="#🧠-思维导图" class="headerlink" title="🧠 思维导图"></a>🧠 思维导图</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">graph TD</span><br><span class="line">    A[栈与队列] --&gt; B[栈]</span><br><span class="line">    A --&gt; C[队列]</span><br><span class="line">    </span><br><span class="line">    B --&gt; D[顺序栈]</span><br><span class="line">    B --&gt; E[链栈]</span><br><span class="line">    B --&gt; F[共享栈]</span><br><span class="line">    </span><br><span class="line">    C --&gt; G[顺序队列]</span><br><span class="line">    C --&gt; H[循环队列]</span><br><span class="line">    C --&gt; I[链式队列]</span><br><span class="line">    C --&gt; J[优先级队列]</span><br><span class="line">    </span><br><span class="line">    J --&gt; K[最大优先队列]</span><br><span class="line">    J --&gt; L[最小优先队列]</span><br></pre></td></tr></table></figure><hr><h2 id="📌-重要公式速查表"><a href="#📌-重要公式速查表" class="headerlink" title="📌 重要公式速查表"></a>📌 重要公式速查表</h2><div class="table-container"><table><thead><tr><th>描述</th><th>计算公式</th></tr></thead><tbody><tr><td>顺序栈元素个数</td><td>top + 1</td></tr><tr><td>循环队列元素个数</td><td>(rear - front + MaxSize) % MaxSize</td></tr><tr><td>循环队列判满（方案一）</td><td>(rear + 1) % MaxSize == front</td></tr></tbody></table></div><p>```</p>]]></content>
    
    
    <summary type="html">数据结构第三章栈与队列</summary>
    
    
    
    <category term="数据结构" scheme="https://lxttz.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
    <category term="栈与队列" scheme="https://lxttz.github.io/tags/%E6%A0%88%E4%B8%8E%E9%98%9F%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>数据结构第二章线性表</title>
    <link href="https://lxttz.github.io/posts/e43e6480.html"/>
    <id>https://lxttz.github.io/posts/e43e6480.html</id>
    <published>2025-02-28T02:11:01.000Z</published>
    <updated>2025-02-28T02:55:07.296Z</updated>
    
    <content type="html"><![CDATA[<h3 id="🤖-Assistant"><a href="#🤖-Assistant" class="headerlink" title="🤖 Assistant"></a>🤖 Assistant</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 📦 第二章 线性表</span></span><br><span class="line"></span><br><span class="line"><span class="section">## 📚 基本概念</span></span><br><span class="line"><span class="section">### 📌 什么是线性表？</span></span><br><span class="line">🔹 <span class="strong">**定义**</span>：线性表是由 <span class="strong">**n个数据元素**</span>（结点）组成的 <span class="strong">**有限序列**</span>，元素类型相同，且具有 <span class="strong">**逻辑上的顺序关系**</span>  </span><br><span class="line">🔹 <span class="strong">**特点**</span>：  </span><br><span class="line"><span class="bullet">  -</span> 唯一的<span class="code">`第一个元素`</span>（无直接前驱）和<span class="code">`最后一个元素`</span>（无直接后继）  </span><br><span class="line"><span class="bullet">  -</span> 其他元素有且仅有一个<span class="strong">**直接前驱**</span>和一个<span class="strong">**直接后继**</span>  </span><br><span class="line">🔹 <span class="strong">**示例**</span>：  </span><br><span class="line">  ![](<span class="link">https://cdn.jsdelivr.net/gh/kevinwho/pic@main/20230610160510.png</span>)</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line"><span class="section">## 📚 顺序存储结构（顺序表）</span></span><br><span class="line"><span class="section">### 📌 定义与特点</span></span><br><span class="line"><span class="code">```c</span></span><br><span class="line"><span class="code">#define MAXSIZE 100  </span></span><br><span class="line"><span class="code">typedef struct &#123;  </span></span><br><span class="line"><span class="code">    ElemType data[MAXSIZE];  </span></span><br><span class="line"><span class="code">    int length;  </span></span><br><span class="line"><span class="code">&#125; SqList;  </span></span><br></pre></td></tr></table></figure><p>🔸 <strong>核心原理</strong>：用<strong>连续存储单元</strong>存放线性表元素<br>🔸 <strong>特性</strong>：  </p><ul><li>支持随机访问（时间复杂度 O(1)）  </li><li>插入/删除平均移动 n/2 个元素（时间复杂度 O(n)）  </li></ul><h3 id="📌-静态分配-vs-动态分配"><a href="#📌-静态分配-vs-动态分配" class="headerlink" title="📌 静态分配 vs 动态分配"></a>📌 静态分配 vs 动态分配</h3><div class="table-container"><table><thead><tr><th>类型</th><th>特点</th><th>适用场景</th></tr></thead><tbody><tr><td>静态分配</td><td>数组大小固定</td><td>数据量已知且稳定</td></tr><tr><td>动态分配</td><td>可扩容（realloc）</td><td>数据量变化较大</td></tr></tbody></table></div><hr><h2 id="📚-链式存储结构（链表）"><a href="#📚-链式存储结构（链表）" class="headerlink" title="📚 链式存储结构（链表）"></a>📚 链式存储结构（链表）</h2><h3 id="📌-单链表结构"><a href="#📌-单链表结构" class="headerlink" title="📌 单链表结构"></a>📌 单链表结构</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">LNode</span> &#123;</span>  </span><br><span class="line">    ElemType data;  </span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">LNode</span>* <span class="title">next</span>;</span>  </span><br><span class="line">&#125; LNode, *LinkList;  </span><br></pre></td></tr></table></figure><p>🔹 <strong>核心要点</strong>：  </p><ul><li>节点 = 数据域 + 指针域  </li><li><strong>头指针</strong> vs <strong>头结点</strong>：  <ul><li>头结点：为统一操作而添加的虚拟节点（<code>data域无意义</code>）  </li><li>带头结点的链表操作更统一  </li></ul></li></ul><h3 id="📌-循环链表"><a href="#📌-循环链表" class="headerlink" title="📌 循环链表"></a>📌 循环链表</h3><p><img src="https://cdn.jsdelivr.net/gh/kevinwho/pic@main/20230610162304.png" alt="循环链表示意图"><br>🔹 尾结点指针指向<strong>头结点</strong><br>🔹 判空条件：<code>尾结点-&gt;next == head</code></p><h3 id="📌-双向链表"><a href="#📌-双向链表" class="headerlink" title="📌 双向链表"></a>📌 双向链表</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">DuLNode</span> &#123;</span>  </span><br><span class="line">    ElemType data;  </span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">DuLNode</span> *<span class="title">prior</span>, *<span class="title">next</span>;</span>  </span><br><span class="line">&#125; DuLNode, *DuLinkList;  </span><br></pre></td></tr></table></figure><p>🔹 特性：支持双向遍历<br>🔹 插入/删除需同时修改前后指针  </p><hr><h2 id="📊-顺序表-vs-链表对比"><a href="#📊-顺序表-vs-链表对比" class="headerlink" title="📊 顺序表 vs 链表对比"></a>📊 顺序表 vs 链表对比</h2><div class="table-container"><table><thead><tr><th>操作\结构</th><th>顺序表</th><th>链表</th></tr></thead><tbody><tr><td>存取元素</td><td>O(1)</td><td>O(n)</td></tr><tr><td>插入/删除</td><td>O(n)（需移动元素）</td><td>O(1)（仅修改指针）</td></tr><tr><td>空间分配</td><td>预先静态分配</td><td>动态实时分配</td></tr><tr><td>适用场景</td><td>查询多，增删少</td><td>频繁增删</td></tr></tbody></table></div><hr><h2 id="🛠️-应用场景"><a href="#🛠️-应用场景" class="headerlink" title="🛠️ 应用场景"></a>🛠️ 应用场景</h2><ol><li><strong>顺序表</strong>：高频随机访问（如数据库索引）</li><li><strong>单链表</strong>：浏览器历史记录（支持后退）</li><li><strong>双向链表</strong>：LRU缓存淘汰算法</li><li><strong>循环链表</strong>：约瑟夫问题（Josephus problem）</li></ol><hr><h2 id="🎨-思维导图总结"><a href="#🎨-思维导图总结" class="headerlink" title="🎨 思维导图总结"></a>🎨 思维导图总结</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">graph TD</span><br><span class="line">    A[线性表] --&gt; B[顺序表]</span><br><span class="line">    A --&gt; C[链表]</span><br><span class="line">    B --&gt; D[静态分配]</span><br><span class="line">    B --&gt; E[动态分配]</span><br><span class="line">    C --&gt; F[单链表]</span><br><span class="line">    C --&gt; G[循环链表]</span><br><span class="line">    C --&gt; H[双向链表]</span><br><span class="line">    F --&gt; I[带头结点]</span><br><span class="line">    F --&gt; J[不带头结点]</span><br></pre></td></tr></table></figure><p>```</p>]]></content>
    
    
    <summary type="html">数据结构第二章线性表</summary>
    
    
    
    <category term="数据结构" scheme="https://lxttz.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
    <category term="数据结构线性表" scheme="https://lxttz.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BA%BF%E6%80%A7%E8%A1%A8/"/>
    
  </entry>
  
  <entry>
    <title>数据结构第一章绪论</title>
    <link href="https://lxttz.github.io/posts/538660a9.html"/>
    <id>https://lxttz.github.io/posts/538660a9.html</id>
    <published>2025-02-28T02:09:45.000Z</published>
    <updated>2025-02-28T02:54:59.209Z</updated>
    
    <content type="html"><![CDATA[<h3 id="🤖-Assistant"><a href="#🤖-Assistant" class="headerlink" title="🤖 Assistant"></a>🤖 Assistant</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 📚 数据结构 | 第1章 绪论精讲</span></span><br><span class="line"></span><br><span class="line"><span class="section">## 🎯 本章知识导航</span></span><br><span class="line"><span class="code">```mermaid</span></span><br><span class="line"><span class="code">graph TD</span></span><br><span class="line"><span class="code">    A[绪论核心知识点] --&gt; B[数据结构是什么？]</span></span><br><span class="line"><span class="code">    A --&gt; C[数据结构分类]</span></span><br><span class="line"><span class="code">    A --&gt; D[算法与复杂度]</span></span><br><span class="line"><span class="code">    B --&gt; B1[数据元素集合]</span></span><br><span class="line"><span class="code">    B --&gt; B2[数据的组织与操作]</span></span><br><span class="line"><span class="code">    C --&gt; C1[逻辑结构]</span></span><br><span class="line"><span class="code">    C --&gt; C2[存储结构]</span></span><br><span class="line"><span class="code">    C1 --&gt; C11[线性]</span></span><br><span class="line"><span class="code">    C1 --&gt; C12[树形]</span></span><br><span class="line"><span class="code">    C1 --&gt; C13[网状]</span></span><br><span class="line"><span class="code">    C1 --&gt; C14[集合]</span></span><br><span class="line"><span class="code">    D --&gt; D1[算法五要素]</span></span><br><span class="line"><span class="code">    D --&gt; D2[时间复杂度/空间复杂度]</span></span><br></pre></td></tr></table></figure><hr><h2 id="📦-1-1-初识数据结构"><a href="#📦-1-1-初识数据结构" class="headerlink" title="📦 1.1 初识数据结构"></a>📦 1.1 初识数据结构</h2><p>数据结构是研究非数值的计算机程序设计操作对象（研究逻辑机构，存储结构，算法）</p><h3 id="🧩-生活中的数据结构（先理解再记忆）"><a href="#🧩-生活中的数据结构（先理解再记忆）" class="headerlink" title="🧩 生活中的数据结构（先理解再记忆）"></a>🧩 生活中的数据结构（先理解再记忆）</h3><ul><li><strong>图书馆管理</strong>：书籍按照索引号（逻辑结构）存储在不同书架（存储结构）</li><li><strong>快递分拣</strong>：包裹按地区（分类）、货架类型（存储方式）、扫码查询（操作算法）</li><li><strong>手机通讯录</strong>：姓名排序（线性结构） vs 微信好友分组（树形结构）</li></ul><h3 id="💡-专业术语解读"><a href="#💡-专业术语解读" class="headerlink" title="💡 专业术语解读"></a>💡 专业术语解读</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">| 术语         | 相当于现实中的...          | 示例说明                   |</span><br><span class="line">|--------------|---------------------------|---------------------------|</span><br><span class="line">| 数据元素      | 独立物品                  | 一本具体的书/一条快递记录 |</span><br><span class="line">| 数据项       | 物品属性                  | 书名/ISBN号/价格          |</span><br><span class="line">| 数据对象     | 同类元素集合              | 所有计算机类书籍          |</span><br></pre></td></tr></table></figure><hr><h4 id="A-数据（data）："><a href="#A-数据（data）：" class="headerlink" title="A.数据（data）："></a>A.数据（data）：</h4><p>数据是客观事物符号的表示，（能输入计算机，计算机可处理的符号总称）</p><h4 id="B-数据元素（data-element）："><a href="#B-数据元素（data-element）：" class="headerlink" title="B.数据元素（data element）："></a>B.数据元素（data element）：</h4><p>数据的基本单位，也成为结点或记录或顶点</p><p>数据元素（一个）可以有多个或者若干个数据项（data item）组成</p><h4 id="C-数据项（data-item）："><a href="#C-数据项（data-item）：" class="headerlink" title="C.数据项（data item）："></a>C.数据项（data item）：</h4><p>数据项是数据处理的最小单位</p><p>数据项（data item）是数据不可再分的最小单位，如学生信息记录中的学号、姓名等。</p><h4 id="D-数据对象-data-object"><a href="#D-数据对象-data-object" class="headerlink" title="D.数据对象(data object):"></a>D.数据对象(data object):</h4><p>数据对象（data object）是性质相同的数据元素的集合，是数据的一个子集。</p><p>（数据对象是讨论数据集合的抽象，是数据的一个子集。数据对象中的数据元素必须具有相同的特性，即属于同一个数据类型。）</p><h4 id="e．数据结构（data-structure）"><a href="#e．数据结构（data-structure）" class="headerlink" title="e．数据结构（data structure）:"></a>e．数据结构（data structure）:</h4><p>数据结构（data structure）是相互之间存在一种或多种特定关系的数据元素的集合，它指的是数据元素之间的相互关系，即数据的组织形式。</p><h2 id="🧠-1-2-数据结构三要素"><a href="#🧠-1-2-数据结构三要素" class="headerlink" title="🧠 1.2 数据结构三要素"></a>🧠 1.2 数据结构三要素</h2><p>a.数据的逻辑结构</p><p>b.数据的物理结构</p><p>c.数据的运算及实现</p><h3 id="🌳-逻辑结构（用户视角）"><a href="#🌳-逻辑结构（用户视角）" class="headerlink" title="🌳 逻辑结构（用户视角）"></a>🌳 逻辑结构（用户视角）</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">graph LR</span><br><span class="line">    A[逻辑结构] </span><br><span class="line">    A --&gt; B[线性结构]</span><br><span class="line">    A --&gt; C[非线性结构]</span><br><span class="line">    C --&gt; A1[树]</span><br><span class="line">    C --&gt; A2[图]</span><br><span class="line">    C --&gt; E[集合]</span><br><span class="line"> B --&gt; B1[线性表]</span><br><span class="line"> B --&gt; B2[栈]</span><br><span class="line"> B --&gt; B3[队列]</span><br><span class="line"> B --&gt; B4[串]</span><br><span class="line"> B --&gt; B5[数组]</span><br><span class="line"> B --&gt; B6[广义表]</span><br></pre></td></tr></table></figure><h3 id=""><a href="#" class="headerlink" title=" "></a> </h3><h3 id="🧱-存储结构（计算机视角）"><a href="#🧱-存储结构（计算机视角）" class="headerlink" title="🧱 存储结构（计算机视角）"></a>🧱 存储结构（计算机视角）</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1.</span> <span class="strong">**顺序存储**</span>：数组式排列 ✨</span><br><span class="line"><span class="bullet">   -</span> 特点：元素连续存储，可通过索引直接访问</span><br><span class="line"><span class="bullet">   -</span> 优劣：访问快但插入删除开销大</span><br><span class="line"></span><br><span class="line"><span class="bullet">2.</span> <span class="strong">**链式存储**</span>：寻宝图模式 🔗</span><br><span class="line"><span class="bullet">   -</span> 特点：通过指针链接元素</span><br><span class="line"><span class="bullet">   -</span> 优劣：动态扩展方便但占用额外空间</span><br><span class="line"><span class="bullet">3.</span> <span class="strong">**索引存储**</span>：快递驿站扫码查包裹 🔗</span><br><span class="line"><span class="bullet">   -</span> 特点：索引项包含关键字 + 物理地址</span><br><span class="line"><span class="bullet">   -</span> 优劣：快速定位 + 支持范围查询</span><br><span class="line"><span class="bullet">4.</span> <span class="strong">**散例存储**</span>：凭取件码直取快递 🔗</span><br><span class="line"><span class="bullet">   -</span> 特点：</span><br><span class="line"><span class="bullet">   -</span> 优劣：</span><br></pre></td></tr></table></figure><hr><div class="table-container"><table><thead><tr><th><strong>存储方式</strong></th><th>典型应用</th><th>访问速度</th><th>空间成本</th><th>适用场景</th></tr></thead><tbody><tr><td>顺序存储</td><td>数组/矩阵</td><td>★★★★☆</td><td>低</td><td>频繁随机访问</td></tr><tr><td>链式存储</td><td>链表/树结构</td><td>★★☆☆☆</td><td>中</td><td>动态数据增减</td></tr><tr><td>索引存储</td><td>数据库索引</td><td>★★★☆☆</td><td>高</td><td>快速检索+范围查询</td></tr><tr><td>散列存储</td><td>哈希表/缓存系统</td><td>★★★★★</td><td>可变</td><td>快速精确查找</td></tr></tbody></table></div><p>注：★★★★★表示最优，★数量减少表示性能递减</p><h2 id="⚙️-1-3-算法分析核心"><a href="#⚙️-1-3-算法分析核心" class="headerlink" title="⚙️ 1.3 算法分析核心"></a>⚙️ 1.3 算法分析核心</h2><h3 id="🎯-算法五大要素（BAT面试易考点）"><a href="#🎯-算法五大要素（BAT面试易考点）" class="headerlink" title="🎯 算法五大要素（BAT面试易考点）"></a>🎯 算法五大要素（BAT面试易考点）</h3><ol><li><strong>确定性</strong> → 同输入必然同输出</li><li><strong>可行性</strong> → 能通过计算机实现</li><li><strong>有穷性</strong> → 不能死循环（注意与程序的区别）</li><li><strong>输入输出</strong> → 至少一个输出</li></ol><h3 id="📈-复杂度分析诀窍"><a href="#📈-复杂度分析诀窍" class="headerlink" title="📈 复杂度分析诀窍"></a>📈 复杂度分析诀窍</h3><h4 id="时间增长模型（关键口诀）"><a href="#时间增长模型（关键口诀）" class="headerlink" title="时间增长模型（关键口诀）"></a>时间增长模型（关键口诀）</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O(1) &lt; O(logn) &lt; O(n) &lt; O(nlogn) &lt; O(n²) &lt; O(2ⁿ)</span><br></pre></td></tr></table></figure><h4 id="常见复杂度场景"><a href="#常见复杂度场景" class="headerlink" title="常见复杂度场景"></a>常见复杂度场景</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 🧠 复杂度等级实战案例</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">O_1_demo</span>(<span class="params">arr</span>):           <span class="comment"># 常量级：哈希表查询</span></span><br><span class="line">    <span class="keyword">return</span> arr[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">O_logn_demo</span>(<span class="params">n</span>):          <span class="comment"># 对数级：二分查找</span></span><br><span class="line">    <span class="keyword">while</span> n &gt; <span class="number">1</span>:</span><br><span class="line">        n = n//<span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">O_n_demo</span>(<span class="params">n</span>):             <span class="comment"># 线性级：单层循环</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">        <span class="built_in">print</span>(i)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">O_n2_demo</span>(<span class="params">n</span>):            <span class="comment"># 平方级：冒泡排序</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">            a = i + j</span><br></pre></td></tr></table></figure><h4 id="✨-复杂度计算技巧表"><a href="#✨-复杂度计算技巧表" class="headerlink" title="✨ 复杂度计算技巧表"></a>✨ 复杂度计算技巧表</h4><div class="table-container"><table><thead><tr><th>代码模式</th><th>时间复杂度</th><th>示例</th></tr></thead><tbody><tr><td>简单语句</td><td>O(1)</td><td>a = b + c</td></tr><tr><td>单层循环</td><td>O(n)</td><td>for(i=0;i&lt;n;i++)</td></tr><tr><td>嵌套循环 (两重)</td><td>O(n²)</td><td>冒泡排序核心代码</td></tr><tr><td>递归调用（二分）</td><td>O(logn)</td><td>二叉树查找</td></tr><tr><td>递归调用（非平衡）</td><td>O(n)</td><td>链表遍历</td></tr></tbody></table></div><hr><h2 id="🔑-1-4-学习方法建议"><a href="#🔑-1-4-学习方法建议" class="headerlink" title="🔑 1.4 学习方法建议"></a>🔑 1.4 学习方法建议</h2><h3 id="💡-三点学习哲学"><a href="#💡-三点学习哲学" class="headerlink" title="💡 三点学习哲学"></a>💡 三点学习哲学</h3><ol><li><strong>多画图解</strong> → 绘制数据结构形态演变图</li><li><strong>手写代码</strong> → 关键操作在纸上模拟执行</li><li><strong>对比记忆</strong> → 对比不同结构的CRUD复杂度</li></ol><h3 id="🛠️-动手实验建议"><a href="#🛠️-动手实验建议" class="headerlink" title="🛠️ 动手实验建议"></a>🛠️ 动手实验建议</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> 实验1：用扑克牌模拟栈的入栈/出栈</span><br><span class="line"><span class="bullet">-</span> 实验2：用收纳盒做顺序存储 VS 行李箱做链式存储</span><br><span class="line"><span class="bullet">-</span> 实验3：给家庭成员画二叉树（父母结点/孩子结点）</span><br></pre></td></tr></table></figure><hr><h2 id="📌-本章小结"><a href="#📌-本章小结" class="headerlink" title="📌 本章小结"></a>📌 本章小结</h2><p>✅ 数据结构 = 逻辑结构 + 存储结构 + 运算<br>✅ 算法优劣关键看时间/空间复杂度<br>✅ 分析复杂度要抓主要矛盾  </p><p><center>  <img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d963b9006ce84ba2983a76c2c8a9dc3d~tplv-k3u1fbpfcp-watermark.image" width="400" alt="复杂度增长趋势图"></center><br>```</p><p>注：以上内容完整支持Markdown语法，可直接导入Obsidian/Notion等笔记软件，思维导图需支持Mermaid的编辑器查看。练习题目配套代码已整合核心知识要点。</p>]]></content>
    
    
    <summary type="html">数据结构第一章绪论</summary>
    
    
    
    <category term="数据结构" scheme="https://lxttz.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
    <category term="数据结构绪论" scheme="https://lxttz.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BB%AA%E8%AE%BA/"/>
    
  </entry>
  
</feed>
