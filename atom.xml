<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Arlos Blog World🥝</title>
  
  
  <link href="https://lxttz.github.io/atom.xml" rel="self"/>
  
  <link href="https://lxttz.github.io/"/>
  <updated>2025-09-01T07:14:44.973Z</updated>
  <id>https://lxttz.github.io/</id>
  
  <author>
    <name>阿洛博客世界🥝</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>使用Linux命令下载文件</title>
    <link href="https://lxttz.github.io/posts/ab6ed258.html"/>
    <id>https://lxttz.github.io/posts/ab6ed258.html</id>
    <published>2025-09-01T07:05:57.000Z</published>
    <updated>2025-09-01T07:14:44.973Z</updated>
    
    <content type="html"><![CDATA[<h1>使用 wget 下载资源的基本语法很简单：</h1><p>bash<br>wget [选项] 下载链接</p><p>例如，下载一个文件可以直接使用：</p><p>bash<br>wget <a href="https://example.com/file.zip">https://example.com/file.zip</a></p><p>如果需要指定保存的文件名，可以使用 -O 选项：</p><p>bash<br>wget -O 自定义文件名.zip <a href="https://example.com/file.zip">https://example.com/file.zip</a></p><p>如果资源需要断点续传（比如下载中断后继续），可以使用 -c 选项：</p><p>bash<br>wget -c <a href="https://example.com/large_file.iso">https://example.com/large_file.iso</a></p>]]></content>
    
    
    <summary type="html">使用Linux命令下载文件</summary>
    
    
    
    
    <category term="命令" scheme="https://lxttz.github.io/tags/%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>github加速器</title>
    <link href="https://lxttz.github.io/posts/65cb925f.html"/>
    <id>https://lxttz.github.io/posts/65cb925f.html</id>
    <published>2025-09-01T06:28:48.000Z</published>
    <updated>2025-09-01T06:31:31.140Z</updated>
    
    <content type="html"><![CDATA[<h1>github 加速工具，让你轻松访问Github，随意获取海量资源软件</h1><h1>软件支持Windows/Linux/Mac</h1><h1>百度网盘</h1><p>百度链接: <a href="https://pan.baidu.com/s/1cdjNn7q8xtu0RWjXeWOmOQ?pwd=MYLH">https://pan.baidu.com/s/1cdjNn7q8xtu0RWjXeWOmOQ?pwd=MYLH</a><br>提取码: MYLH</p><h1>夸克网盘</h1><p>夸克链接：<a href="https://pan.quark.cn/s/653f06c929fa">https://pan.quark.cn/s/653f06c929fa</a><br>夸克中文口令：/~4bfa37q2ms~:/</p><p>复制到对应的app或网页打开。</p><p>Mac安装提示【无法打开“dev-sidecar”，因为无法验证开发者。】 的解决方案：<a href="https://blog.csdn.net/shentian885/article/details/121573644">https://blog.csdn.net/shentian885/article/details/121573644</a></p>]]></content>
    
    
    <summary type="html">github 加速工具，让你轻松访问Github，随意获取海量资源软</summary>
    
    
    
    <category term="github" scheme="https://lxttz.github.io/categories/github/"/>
    
    
    <category term="github加速器" scheme="https://lxttz.github.io/tags/github%E5%8A%A0%E9%80%9F%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>BiliNote简介</title>
    <link href="https://lxttz.github.io/posts/f6497f06.html"/>
    <id>https://lxttz.github.io/posts/f6497f06.html</id>
    <published>2025-09-01T03:08:30.000Z</published>
    <updated>2025-09-01T03:10:52.021Z</updated>
    
    <content type="html"><![CDATA[<div style="display: flex; justify-content: center; align-items: center; gap: 10px;">    <p align="center">  <img src="./doc/icon.svg" alt="BiliNote Banner" width="50" height="50"  /></p><h1 align="center" > BiliNote v1.8.1</h1></div><p align="center"><i>AI 视频笔记生成工具 让 AI 为你的视频做笔记</i></p><p align="center">  <img src="https://img.shields.io/badge/license-MIT-blue.svg" />  <img src="https://img.shields.io/badge/frontend-react-blue" />  <img src="https://img.shields.io/badge/backend-fastapi-green" />  <img src="https://img.shields.io/badge/GPT-openai%20%7C%20deepseek%20%7C%20qwen-ff69b4" />  <img src="https://img.shields.io/badge/docker-compose-blue" />  <img src="https://img.shields.io/badge/status-active-success" />  <img src="https://img.shields.io/github/stars/jefferyhcool/BiliNote?style=social" /></p><h1>BiliNote 简介：</h1><h2 id="✨-项目简介">✨ 项目简介</h2><p>BiliNote 是一个开源的 AI 视频笔记助手，支持通过哔哩哔哩、YouTube、抖音等视频链接，自动提取内容并生成结构清晰、重点明确的 Markdown 格式笔记。支持插入截图、原片跳转等功能。</p><h2 id="📝-使用文档">📝 使用文档</h2><p>详细文档可以查看<a href="https://docs.bilinote.app/">这里</a></p><h2 id="体验地址">体验地址</h2><p>可以通过访问 <a href="https://www.bilinote.app/">这里</a> 进行体验，速度略慢，不支持长视频。</p><h2 id="📦-Windows-打包版">📦 Windows 打包版</h2><p>本项目提供了 Windows 系统的 exe 文件，可在<a href="https://github.com/JefferyHcool/BiliNote/releases/tag/v1.1.1">release</a>进行下载。<strong>注意一定要在没有中文路径的环境下运行。</strong></p><h2 id="🔧-功能特性">🔧 功能特性</h2><ul><li>支持多平台：Bilibili、YouTube、本地视频、抖音（后续会加入更多平台）</li><li>支持返回笔记格式选择</li><li>支持笔记风格选择</li><li>支持多模态视频理解</li><li>支持多版本记录保留</li><li>支持自行配置 GPT 大模型</li><li>本地模型音频转写（支持 Fast-Whisper）</li><li>GPT 大模型总结视频内容</li><li>自动生成结构化 Markdown 笔记</li><li>可选插入截图（自动截取）</li><li>可选内容跳转链接（关联原视频）</li><li>任务记录与历史回看</li></ul><h2 id="📸-截图预览">📸 截图预览</h2><p><img src="./doc/image1.png" alt="screenshot"><br><img src="./doc/image3.png" alt="screenshot"><br><img src="./doc/image.png" alt="screenshot"><br><img src="./doc/image4.png" alt="screenshot"><br><img src="./doc/image5.png" alt="screenshot"></p><h2 id="🚀-快速开始">🚀 快速开始</h2><h3 id="1-克隆仓库">1. 克隆仓库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/JefferyHcool/BiliNote.git</span><br><span class="line"><span class="built_in">cd</span> BiliNote</span><br><span class="line"><span class="built_in">mv</span> .env.example .<span class="built_in">env</span></span><br></pre></td></tr></table></figure><h3 id="2-启动后端（FastAPI）">2. 启动后端（FastAPI）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> backend</span><br><span class="line">pip install -r requirements.txt</span><br><span class="line">python main.py</span><br></pre></td></tr></table></figure><h3 id="3-启动前端（Vite-React）">3. 启动前端（Vite + React）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> BillNote_frontend</span><br><span class="line">pnpm install</span><br><span class="line">pnpm dev</span><br></pre></td></tr></table></figure><p>访问：<code>http://localhost:5173</code></p><h2 id="⚙️-依赖说明">⚙️ 依赖说明</h2><h3 id="🎬-FFmpeg">🎬 FFmpeg</h3><p>本项目依赖 ffmpeg 用于音频处理与转码，必须安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Mac (brew)</span></span><br><span class="line">brew install ffmpeg</span><br><span class="line"></span><br><span class="line"><span class="comment"># Ubuntu / Debian</span></span><br><span class="line"><span class="built_in">sudo</span> apt install ffmpeg</span><br><span class="line"></span><br><span class="line"><span class="comment"># Windows</span></span><br><span class="line"><span class="comment"># 请从官网下载安装：https://ffmpeg.org/download.html</span></span><br></pre></td></tr></table></figure><blockquote><p>⚠️ 若系统无法识别 ffmpeg，请将其加入系统环境变量 PATH</p></blockquote><h3 id="🚀-CUDA-加速（可选）">🚀 CUDA 加速（可选）</h3><p>若你希望更快地执行音频转写任务，可使用具备 NVIDIA GPU 的机器，并启用 fast-whisper + CUDA 加速版本：</p><p>具体 <code>fast-whisper</code> 配置方法，请参考：<a href="http://github.com/SYSTRAN/faster-whisper#requirements">fast-whisper 项目地址</a></p><h3 id="🐳-使用-Docker-一键部署">🐳 使用 Docker 一键部署</h3><p>确保你已安装 Docker 和 Docker Compose：</p><p><a href="https://github.com/JefferyHcool/bilinote-deploy/blob/master/README.md">docker 部署</a></p><h2 id="🧠-TODO">🧠 TODO</h2><ul><li>[x] 支持抖音及快手等视频平台</li><li>[x] 支持前端设置切换 AI 模型切换、语音转文字模型</li><li>[x] AI 摘要风格自定义（学术风、口语风、重点提取等）</li><li>[ ] 笔记导出为 PDF / Word / Notion</li><li>[x] 加入更多模型支持</li><li>[x] 加入更多音频转文本模型支持</li></ul><h1>BiliNote_桌面端_v1.1.1</h1><p><img src="https://avatars.githubusercontent.com/u/63531681?s=40&amp;v=4" alt="@JefferyHcool"> <a href="https://github.com/JefferyHcool">JefferyHcool</a> 于 Apr 27 发布</p><p>· <a href="https://github.com/JefferyHcool/BiliNote/compare/v1.1.1...master">202 个承诺</a>到主 自此版本以来</p><p><a href="https://github.com/JefferyHcool/BiliNote/tree/v1.1.1">v1.1.1</a></p><h2 id="89ceef6-添加"><a href="https://github.com/JefferyHcool/BiliNote/commit/89ceef60d044b687025dc3c9987ed13abb5a5179"><code>89ceef6</code></a> <br>添加</h2><ul><li>新增 AI 笔记风格选择</li><li>新增 AI 笔记返回格式选择</li><li>添加 AI 自定义笔记备注 Prompt</li><li>添加任务失败重试</li><li>添加全局设置页，可在设置页进行模型设置</li></ul><h2 id="优化">优化</h2><ul><li>优化前端样式，优化用户体验</li><li>增加生成中间产物，可用于失败后加快生成速度</li></ul><h2 id="修复">修复</h2><ul><li>修复视频截图视频过早删除错误</li></ul><h2 id="更改内容">更改内容</h2><ul><li>fix（env）： 修复其他提供商没有办法使用识别问题 <a href="https://github.com/JefferyHcool"></a><a href="https://github.com/JefferyHcool/BiliNote/pull/21">by in #21</a></li><li>refactor： 更新环境变量配置示例 <a href="https://github.com/JefferyHcool"></a><a href="https://github.com/JefferyHcool/BiliNote/pull/22">by in #22</a></li><li>feat：将transcriber作为环境变量配置并增加了 MLX-Whisper 转录器，提升 macOS 平台转录性能 <a href="https://github.com/SurfRid3r"></a><a href="https://github.com/JefferyHcool/BiliNote/pull/29">by in #29</a></li><li>fix（transcriber）： 修复转义器初始化异常的问题，修复 <a href="https://github.com/JefferyHcool/BiliNote/issues/36">#36</a> by <a href="https://github.com/JefferyHcool"></a><a href="https://github.com/JefferyHcool/BiliNote/pull/37">in #37</a></li><li>fix（transcriber）： 优化获取转录器实例的返回值，确保返回正确的 fast-whisper 实例 by <a href="https://github.com/SurfRid3r"></a><a href="https://github.com/JefferyHcool/BiliNote/pull/40">in #40</a></li><li>feat： 新增模型管理和供应商配置功能 by <a href="https://github.com/JefferyHcool"></a><a href="https://github.com/JefferyHcool/BiliNote/pull/42">in #42</a></li><li>refactor（backend）： 重构后端配置并优化 GPT 模型及转录功能 by <a href="https://github.com/JefferyHcool"></a><a href="https://github.com/JefferyHcool/BiliNote/pull/44">in #44</a></li><li>修复：修复文件缺失问题 <a href="https://github.com/JefferyHcool"></a><a href="https://github.com/JefferyHcool/BiliNote/pull/45">by in #45</a></li><li>修复：修复文件缺失问题 <a href="https://github.com/JefferyHcool"></a><a href="https://github.com/JefferyHcool/BiliNote/pull/46">by in #46</a></li><li>fix（env）： 修复 Youtube 转义失败问题 by <a href="https://github.com/JefferyHcool"></a><a href="https://github.com/JefferyHcool/BiliNote/pull/47">in #47</a></li><li>feat（frontend）： 重构首页布局并添加生成历史组件 <a href="https://github.com/JefferyHcool"></a><a href="https://github.com/JefferyHcool/BiliNote/pull/48">by in #48</a></li></ul><h2 id="新贡献者">新贡献者</h2><ul><li>在 <a href="https://github.com/JefferyHcool/BiliNote/pull/29">#29</a> 中<a href="https://github.com/SurfRid3r"></a>做出了他们的第一个贡献</li></ul><p><strong>完整更新日志</strong>：<a href="https://github.com/JefferyHcool/BiliNote/compare/v1.0.1...v1.1.1">v1.0.1…v1.1.1</a></p><p>下载链接</p><p>网盘下载链接：<a href="https://pan.quark.cn/s/f39f925f9869#/list/share">夸克网盘分享</a></p><p><a href="https://release-assets.githubusercontent.com/github-production-release-asset/965494890/f3d7ed3d-2243-4dcd-834f-ef33523187e4?sp=r&amp;sv=2018-11-09&amp;sr=b&amp;spr=https&amp;se=2025-09-01T03%3A24%3A46Z&amp;rscd=attachment%3B+filename%3DBiliNote_win_v1.1.1.zip&amp;rsct=application%2Foctet-stream&amp;skoid=96c2d410-5711-43a1-aedd-ab1947aa7ab0&amp;sktid=398a6654-997b-47e9-b12b-9515b896b4de&amp;skt=2025-09-01T02%3A24%3A37Z&amp;ske=2025-09-01T03%3A24%3A46Z&amp;sks=b&amp;skv=2018-11-09&amp;sig=sxXlrHV52HXQmXurzlXTlUzdpwYyJ1Mz3Oh3vJox%2FeA%3D&amp;jwt=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmVsZWFzZS1hc3NldHMuZ2l0aHVidXNlcmNvbnRlbnQuY29tIiwia2V5Ijoia2V5MSIsImV4cCI6MTc1NjY5NDk3MSwibmJmIjoxNzU2Njk0NjcxLCJwYXRoIjoicmVsZWFzZWFzc2V0cHJvZHVjdGlvbi5ibG9iLmNvcmUud2luZG93cy5uZXQifQ.R8rTfEP_JAtCW8mFazF4zJD3YnI5LJWaNAnRisGuP4w&amp;response-content-disposition=attachment%3B%20filename%3DBiliNote_win_v1.1.1.zip&amp;response-content-type=application%2Foctet-stream">https://release-assets.githubusercontent.com/github-production-release-asset/965494890/f3d7ed3d-2243-4dcd-834f-ef33523187e4?sp=r&amp;sv=2018-11-09&amp;sr=b&amp;spr=https&amp;se=2025-09-01T03%3A24%3A46Z&amp;rscd=attachment%3B+filename%3DBiliNote_win_v1.1.1.zip&amp;rsct=application%2Foctet-stream&amp;skoid=96c2d410-5711-43a1-aedd-ab1947aa7ab0&amp;sktid=398a6654-997b-47e9-b12b-9515b896b4de&amp;skt=2025-09-01T02%3A24%3A37Z&amp;ske=2025-09-01T03%3A24%3A46Z&amp;sks=b&amp;skv=2018-11-09&amp;sig=sxXlrHV52HXQmXurzlXTlUzdpwYyJ1Mz3Oh3vJox%2FeA%3D&amp;jwt=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmVsZWFzZS1hc3NldHMuZ2l0aHVidXNlcmNvbnRlbnQuY29tIiwia2V5Ijoia2V5MSIsImV4cCI6MTc1NjY5NDk3MSwibmJmIjoxNzU2Njk0NjcxLCJwYXRoIjoicmVsZWFzZWFzc2V0cHJvZHVjdGlvbi5ibG9iLmNvcmUud2luZG93cy5uZXQifQ.R8rTfEP_JAtCW8mFazF4zJD3YnI5LJWaNAnRisGuP4w&amp;response-content-disposition=attachment%3B filename%3DBiliNote_win_v1.1.1.zip&amp;response-content-type=application%2Foctet-stream</a></p>]]></content>
    
    
    <summary type="html">AI 视频笔记生成工具 让 AI 为你的视频做笔记</summary>
    
    
    
    <category term="ai视频笔记助手" scheme="https://lxttz.github.io/categories/ai%E8%A7%86%E9%A2%91%E7%AC%94%E8%AE%B0%E5%8A%A9%E6%89%8B/"/>
    
    
    <category term="BiliNote简介" scheme="https://lxttz.github.io/tags/BiliNote%E7%AE%80%E4%BB%8B/"/>
    
  </entry>
  
  <entry>
    <title>数据库安装及其使用</title>
    <link href="https://lxttz.github.io/posts/c661e3d8.html"/>
    <id>https://lxttz.github.io/posts/c661e3d8.html</id>
    <published>2025-08-21T12:30:26.000Z</published>
    <updated>2025-08-21T12:31:50.129Z</updated>
    
    <content type="html"><![CDATA[<h1><strong>网址：</strong></h1><p>mysql技能树网址：<a href="https://edu.csdn.net/skill/mysql?ops_request_misc=&amp;request_id=&amp;biz_id=&amp;utm_medium=distribute.pc_search_result.none-task-skillTree-2~all~top_card~default-1-mysql-null-null.142%5Ev100%5Epc_search_result_base3&amp;utm_term=mysql%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B">MySQL入门技能树 (csdn.net)</a></p><p>mysql安装教程：<a href="https://blog.csdn.net/m0_52861000/article/details/127310947?ops_request_misc=&amp;request_id=&amp;biz_id=102&amp;utm_term=mysql%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-5-127310947.nonecase&amp;spm=1018.2226.3001.4187">MySQL全部详细步骤（官网下载、安装、环境变量配置、卸载、解决端口占用）–2023.8_mysql下载安装教程-CSDN博客</a></p><h1><strong>1.DOS下连接MYSQL数据库：</strong></h1><p><strong>一、连接MySQL。</strong></p><p>格式： <strong>mysql -h主机地址 -u用户名 －p用户密码</strong></p><p>1、例1：连接到本机上的MYSQL。</p><p>首先在打开 DOS 窗口，然后进入目录 mysql bin，再键入命令mysql -uroot -p，回车后提示你输密码，如果刚安装好 MySQL，超级用户 root 是没有密码的，故直接回车即可进入到 MySQL 中了，MySQL 的提示符是：mysql&gt;</p><p>2、例2：连接到远程主机上的 MySQL。</p><p>假设远程主机的IP为：110.110.110.110，用户名为root，密码为abcd123。则键入以下命令：</p><p>mysql -h110.110.110.110 -uroot -pabcd123</p><p>（注:u与root可以不用加空格，其它也一样）</p><ol><li>退出 MySQL 命令： exit （回车）</li></ol><p><strong>二、修改密码。</strong></p><p>格式：<strong>mysqladmin -u用户名 -p旧密码 password 新密码</strong></p><p>1、例1：给root加个密码ab12。首先在DOS下进入目录mysqlbin，然后键入以下命令</p><p>mysqladmin -uroot -password ab12</p><p>注：因为开始时root没有密码，所以-p旧密码一项就可以省略了。</p><p>2、例2：再将root的密码改为djg345。</p><p>mysqladmin -uroot -pab12 password djg345</p><p><strong>三、增加新用户。</strong></p><p>（注意：和上面不同，下面的因为是 MySQL 环境中的命令，所以后面都带一个分号作为命令结束符）</p><p>格式：<strong>grant select on 数据库.* to 用户名@登录主机 identified by “密码”</strong></p><p>例1、增加一个用户 test1 密码为 abc，让他可以在任何主机上登录，并对所有数据库有查询、插入、修改、删除的权限。首先用以 root 用户连入 MySQL，然后键入以下命令：</p><p><strong>grant select, insert, update, delete on *.* to test1@“%” Identified by “abc”;</strong></p><p>但例1增加的用户是十分危险的，你想如某个人知道test1的密码，那么他就可以在internet上的任何一台电脑上登录你的mysql数据库并对你的数据可以为所欲为了，解决办法见例2。</p><p>例 2、增加一个用户test2密码为abc,让他只可以在localhost上登录，并可以对数据库 mydb进行查询、插入、修改、删除的操作（localhost指本地主机，即MYSQL数据库所在的那台主机），这样用户即使用知道test2的密码， 他也无法从internet上直接访问数据库，只能通过MYSQL主机上的web页来访问了。</p><p>grant select, insert, update,delete on mydb.* to test2@localhost identified by “abc”;</p><p>如果你不想test2有密码，可以再打一个命令将密码消掉。</p><p>grant select, insert, update, delete on mydb.* to test2@localhost identified by “”;</p><p>在上篇我们讲了登录、增加用户、密码更改等问题。下篇我们来看看MYSQL中有关数据库方面的操作。注意：你必须首先登录到MYSQL中，以下操作都是在MYSQL的提示符下进行的，而且每个命令以分号结束。</p><p><strong>一、操作技巧</strong></p><p>1、如果你打命令时，回车后发现忘记加分号，你无须重打一遍命令，只要打个分号回车就可以了。也就是说你可以把一个完整的命令分成几行来打，完后用分号作结束标志就OK。</p><p>2、你可以使用光标上下键调出以前的命令。但以前我用过的一个MYSQL旧版本不支持。我现在用的是mysql-3.23.27-beta-win。</p><p><strong>二、显示命令</strong></p><p>1、显示数据库列表。</p><p><strong>show databases;</strong></p><p><strong>刚开始时才两个数据库：mysql 和 test。mysql 库很重要它里面有 MySQL 的系统信息，我们改密码和新增用户，实际上就是用这个库进行操作。</strong></p><p><strong>2、显示库中的数据表：</strong></p><p><strong>use mysql; //打开库，学过 FOXBASE 的一定不会陌生吧</strong></p><p><strong>show tables;</strong></p><p><strong>3、显示数据表的结构：</strong></p><p><strong>describe 表名;</strong></p><p><strong>4、建库：</strong></p><p><strong>create database 库名;</strong></p><p><strong>5、建表：</strong></p><p><strong>use 库名;</strong></p><p><strong>create table 表名 (字段设定列表);</strong></p><p><strong>6、删库和删表:</strong></p><p><strong>drop database 库名;</strong></p><p><strong>drop table 表名;</strong></p><p><strong>7、将表中记录清空：</strong></p><p><strong>delete from 表名;</strong></p><p><strong>8、显示表中的记录：</strong></p><p><strong>select * from 表名;</strong></p><p><strong>三、一个建库和建表以及插入数据的实例</strong></p><p><strong>drop database if exists school; //如果存在SCHOOL则删除</strong></p><p><strong>create database school; //建立库SCHOOL</strong></p><p><strong>use school; //打开库SCHOOL</strong></p><p><strong>create table teacher //建立表TEACHER</strong></p><p><strong>(</strong></p><p><strong>id int(3) auto_increment not null primary key,</strong></p><p><strong>name char(10) not null,</strong></p><p><strong>address varchar(50) default ‘深圳’,</strong></p><p><strong>year date</strong></p><p><strong>);</strong> //建表结束</p><p>//以下为插入字段</p><p><strong>insert into teacher values(‘’,‘glchengang’,‘深圳一中’,‘1976-10-10’);</strong></p><p><strong>insert into teacher values(‘’,‘jack’,‘深圳一中’,‘1975-12-23’);</strong></p><p>注：在建表中</p><ol><li>将 ID 设为长度为 3 的数字字段 int(3) 并让它每个记录自动加一，auto_increment 并不能为空 not null 而且让他成为主字段 primary key</li><li>将 NAME 设为长度为 10 的字符字段</li><li>将 ADDRESS 设为长度 50 的字符字段，而且缺省值为深圳。varchar 和char 有什么区别呢，只有等以后的文章再说了。（4）将 YEAR 设为日期字段。</li></ol><p>如果你在 MySQL 提示符键入上面的命令也可以，但不方便调试。你可以将以上命令原样写入一个文本文件中假设为 school.sql，然后复制到 c: 下，并在 DOS 状态进入目录 mysql bin ，然后键入以下命令：</p><p>mysql -uroot -p密码 &lt; c: school.sql</p><p>备份：</p><p>1.#cd /usr/local/mysql/bin (进入mysql目录)</p><p>1.#./mysqldump -uroot -p239600 phpwind &gt; /home/nicky/simple.sql</p><p>2如果要备份某个数据在中的某个表命令如下：</p><p>2.#./mysqldump -uroot -p239600 phpwind(数据库) pw_menber(表名) &gt; /home/nicky/simple.sql</p><p>3.压缩备份方法如下:</p><p>3.#./mysqldump -uroot -p239600 phpwind |gzip &gt; /home/nicky/simple.gz</p><p>然后用 #gzip -d simple.gz解压文件即可。</p><p>恢复：</p><p>把数据库拷到 usr local mysql bin目录</p><p>进入 usrlocal mysql bin目录</p><p>mysql -u root -p239600</p><p>新建一个数据库 create database 数据库;</p><p>新建本数据库的用户和密码(参考上面的用户设置)</p><p>use 数据库</p><p>.空格xxx.sql</p><p>如果成功，空出一行无任何显示；如有错误，会有提示。（以上命令已经调试，你只要将//的注释去掉即可使用）。</p><p>四、将文本数据转到数据库中</p><p>1、文本数据应符合的格式：字段数据之间用 tab 键隔开，null 值用 n 来代替.</p><p>例：</p><p>3 rose xxx 1976-10-10</p><p>4 mike xxxx 1975-12-23</p><p>2、数据传入命令</p><p>load data local infile “文件名” into table 表名;</p><p>注意：你最好将文件复制到 mysql bin 目录下，并且要先用 use 命令打表所在的库。</p><p>五、备份数据库： （命令在DOS的 mysql bin 目录下执行）</p><p>mysqldump --opt school&gt;school.bbb</p><p>注释：将数据库 school 备份到 school.bbb 文件，school.bbb 是一个文本文件，文件名任取，打开看看你会有新发现。</p><p>后记：其实 MySQL 的对数据库的操作与其它的 SQL 类数据库大同小异，您最好找本将 SQL 的书看看。我在这里只介绍一些基本的，其实我也就只懂这些了，呵呵。最好的MYSQL教程还是&quot;晏子&quot;译的&quot;MYSQL中文参考手册&quot;不仅免费每个相关网 站都有下载，而且它是最权威的。可惜不是象&quot;PHP4中文手册&quot;那样是chm的格式，在查找函数命令的时候不太方便。</p><p>netstat -an | grep LISTEN 查看端口</p><p>远程连接到mysql需要做的- -</p><p>1、进入mysql，创建一个新用户xuys：</p><p>格式：grant 权限 on 数据库名.表名 用户@登录主机 identified by “用户密码”;</p><p>grant select,update,insert,delete on *.* to <a href="mailto:xuys@192.168.88.234">xuys@192.168.88.234</a> identified by “xuys1234”;</p><p>查看结果，执行：</p><p>use mysql;</p><p>select host,user,password from user;</p><p>可以看到在user表中已有刚才创建的xuys用户。host字段表示登录的主机，其值可以用IP，也可用</p><p>主机名，</p><p>将host字段的值改为%就表示在任何客户端机器上能以xuys用户登录到mysql服务器，建议在开发时</p><p>设为%。</p><p>update user set host = ‘%’ where user = ‘xuys’;</p><p>2、 ./mysqladmin -uroot -ppwd reload</p><p>./mysqladmin -uroot -ppwd shutdown</p><p>3、./mysqld_safe --user=root &amp;</p><p>记住：对授权表的任何修改都需要重新reload，即执行第3步。</p><p>如果经过以上3个步骤还是无法从客户端连接，请执行以下操作，在mysql数据库的db表中插入一条记录</p><p>：</p><p>use mysql;</p><p>insert into db</p><p>values(‘192.168.88.234’,‘%’,‘xuys’,‘Y’,‘Y’,‘Y’,‘Y’,‘Y’,‘Y’,‘Y’,‘Y’,‘Y’,‘Y’,‘Y’,‘Y’);</p><p>update db set host = ‘%’ where user = ‘xuys’;</p><p>重复执行上面的第2、3步</p><p>————————————————</p><p>链接：<strong><a href="https://blog.csdn.net/iteye_17461/article/details/82571900">https://blog.csdn.net/iteye_17461/article/details/82571900</a></strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;&lt;strong&gt;网址：&lt;/strong&gt;&lt;/h1&gt;
&lt;p&gt;mysql技能树网址：&lt;a href=&quot;https://edu.csdn.net/skill/mysql?ops_request_misc=&amp;amp;request_id=&amp;amp;biz_id=&amp;amp;utm_</summary>
      
    
    
    
    <category term="mysql" scheme="https://lxttz.github.io/categories/mysql/"/>
    
    
    <category term="数据库安装及其使用" scheme="https://lxttz.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%89%E8%A3%85%E5%8F%8A%E5%85%B6%E4%BD%BF%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>如何创建多个公钥</title>
    <link href="https://lxttz.github.io/posts/e19c53d6.html"/>
    <id>https://lxttz.github.io/posts/e19c53d6.html</id>
    <published>2025-05-22T08:05:37.000Z</published>
    <updated>2025-05-22T08:23:40.927Z</updated>
    
    <content type="html"><![CDATA[<h1>具体实现步骤：</h1><h2 id="第一步">第一步</h2><p>切换到 SSH 密钥存储目录<br>命令：<br>cd ~/.ssh</p><h2 id="第二步">第二步</h2><p>使用正确的文件名重新生成密钥<br>执行以下命令（不要在文件名中包含.pub）：<br>命令：<br>ssh-keygen -t rsa -C “邮箱地址@qq.com” -f ~/.ssh/id_密钥名称</p><p>-f参数指定文件名（无需.pub后缀）<br>系统会自动创建：<br>私钥：~/.ssh/id_密钥名称<br>公钥：~/.ssh/id_密钥名称.pub</p><h2 id="第三步">第三步</h2><p>查看生成的密钥<br>命令：<br>cat ~/.ssh/id_密钥名称.pub</p><h2 id="其他操作">其他操作</h2><p>查看所有生成的密钥<br>命令：<br>ls -al ~/.ssh</p><p>删除生成的密钥<br>命令：<br>rm ~/.ssh/密钥名称.pub</p>]]></content>
    
    
    <summary type="html">解决一台电脑上生成多个密钥，从而达到管理多个github账号的网站</summary>
    
    
    
    <category term="博客搭建" scheme="https://lxttz.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    <category term="多个公钥创建" scheme="https://lxttz.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/%E5%A4%9A%E4%B8%AA%E5%85%AC%E9%92%A5%E5%88%9B%E5%BB%BA/"/>
    
    
    <category term="如何创建多个公钥博客搭建" scheme="https://lxttz.github.io/tags/%E5%A6%82%E4%BD%95%E5%88%9B%E5%BB%BA%E5%A4%9A%E4%B8%AA%E5%85%AC%E9%92%A5%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://lxttz.github.io/posts/0.html"/>
    <id>https://lxttz.github.io/posts/0.html</id>
    <published>2025-05-10T02:54:00.329Z</published>
    <updated>2025-04-07T10:46:11.079Z</updated>
    
    <content type="html"><![CDATA[<h3 id="🤖-Assistant">🤖 Assistant</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 🌱 SpringBoot + Vue 全栈开发指南</span></span><br><span class="line"></span><br><span class="line"><span class="section">## 🏗️ 一、技术架构概览</span></span><br><span class="line"><span class="section">### 后端技术栈 (SpringBoot)</span></span><br><span class="line"><span class="code">```mermaid</span></span><br><span class="line"><span class="code">graph TD</span></span><br><span class="line"><span class="code">    A[SpringBoot] --&gt; B[Spring MVC]</span></span><br><span class="line"><span class="code">    A --&gt; C[Spring Security]</span></span><br><span class="line"><span class="code">    A --&gt; D[MyBatis/MyBatis-Plus]</span></span><br><span class="line"><span class="code">    A --&gt; E[Spring Data JPA]</span></span><br><span class="line"><span class="code">    F[MySQL/PostgreSQL] --&gt; D</span></span><br><span class="line"><span class="code">    G[Redis] --&gt; C</span></span><br></pre></td></tr></table></figure><h3 id="前端技术栈-Vue">前端技术栈 (Vue)</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">graph TD</span><br><span class="line">    A[Vue3] --&gt; B[Vue Router]</span><br><span class="line">    A --&gt; C[Pinia/Vuex]</span><br><span class="line">    A --&gt; D[Axios]</span><br><span class="line">    A --&gt; E[Element Plus/Ant Design Vue]</span><br><span class="line">    A --&gt; F[Vite]</span><br></pre></td></tr></table></figure><h2 id="📚-二、完整学习路径">📚 二、完整学习路径</h2><h3 id="1-基础阶段（2-4周）">1. 基础阶段（2-4周）</h3><h4 id="后端基础">后端基础</h4><ul><li>✅ SpringBoot核心特性<ul><li>自动配置原理</li><li>Starter机制</li><li>Actuator监控</li></ul></li><li>✅ RESTful API设计<ul><li>常用注解：@RestController, @RequestMapping</li><li>统一响应封装</li><li>全局异常处理</li></ul></li></ul><h4 id="前端基础">前端基础</h4><ul><li>🖥️ Vue3核心语法<ul><li>Composition API</li><li>响应式原理(ref/reactive)</li><li>组件通信</li></ul></li><li>🌐 Vue Router 4.x<ul><li>动态路由</li><li>导航守卫</li><li>路由懒加载</li></ul></li></ul><h3 id="2-进阶阶段（3-5周）">2. 进阶阶段（3-5周）</h3><h4 id="后端进阶">后端进阶</h4><ul><li>🛡️ 安全控制<ul><li>JWT实现</li><li>Spring Security配置</li><li>权限注解(@PreAuthorize)</li></ul></li><li>🔄 数据持久化<ul><li>MyBatis动态SQL</li><li>多数据源配置</li><li>事务管理</li></ul></li></ul><h4 id="前端进阶">前端进阶</h4><ul><li>🏪 状态管理<ul><li>Pinia基础</li><li>模块化设计</li><li>持久化存储</li></ul></li><li>📡 网络请求<ul><li>Axios封装</li><li>请求拦截器</li><li>错误统一处理</li></ul></li></ul><h2 id="🚀-三、项目快速搭建指南">🚀 三、项目快速搭建指南</h2><h3 id="1-环境准备">1. 环境准备</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 后端环境</span></span><br><span class="line">JDK 17+</span><br><span class="line">Maven 3.8+</span><br><span class="line">MySQL 8.0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 前端环境</span></span><br><span class="line">Node.js 16+</span><br><span class="line">npm/yarn/pnpm</span><br></pre></td></tr></table></figure><h3 id="2-项目初始化">2. 项目初始化</h3><h4 id="后端创建">后端创建</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用Spring Initializr</span></span><br><span class="line">https://start.spring.io/</span><br><span class="line"></span><br><span class="line">选择依赖：</span><br><span class="line">- Spring Web</span><br><span class="line">- Lombok</span><br><span class="line">- MyBatis Framework</span><br><span class="line">- MySQL Driver</span><br></pre></td></tr></table></figure><h4 id="前端创建">前端创建</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm create vite@latest frontend --template vue</span><br><span class="line"><span class="built_in">cd</span> frontend</span><br><span class="line">npm install vue-router pinia axios element-plus</span><br></pre></td></tr></table></figure><h3 id="3-关键配置示例">3. 关键配置示例</h3><h4 id="后端配置">后端配置</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// application.yml</span></span><br><span class="line">spring:</span><br><span class="line">  datasource:</span><br><span class="line">    url: jdbc:mysql:<span class="comment">//localhost:3306/demo</span></span><br><span class="line">    username: root</span><br><span class="line">    password: <span class="number">123456</span></span><br><span class="line">    driver-class-name: com.mysql.cj.jdbc.Driver</span><br><span class="line"></span><br><span class="line">mybatis:</span><br><span class="line">  mapper-locations: classpath:mapper<span class="comment">/*.xml</span></span><br></pre></td></tr></table></figure><h4 id="前端配置">前端配置</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// vite.config.js</span></span><br><span class="line"><span class="keyword">import</span> &#123; defineConfig &#125; <span class="keyword">from</span> <span class="string">&#x27;vite&#x27;</span></span><br><span class="line"><span class="keyword">import</span> vue <span class="keyword">from</span> <span class="string">&#x27;@vitejs/plugin-vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; fileURLToPath &#125; <span class="keyword">from</span> <span class="string">&#x27;url&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineConfig</span>(&#123;</span><br><span class="line">  <span class="attr">plugins</span>: [<span class="title function_">vue</span>()],</span><br><span class="line">  <span class="attr">resolve</span>: &#123;</span><br><span class="line">    <span class="attr">alias</span>: &#123;</span><br><span class="line">      <span class="string">&#x27;@&#x27;</span>: <span class="title function_">fileURLToPath</span>(<span class="keyword">new</span> <span class="title function_">URL</span>(<span class="string">&#x27;./src&#x27;</span>, <span class="keyword">import</span>.<span class="property">meta</span>.<span class="property">url</span>))</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">server</span>: &#123;</span><br><span class="line">    <span class="attr">proxy</span>: &#123;</span><br><span class="line">      <span class="string">&#x27;/api&#x27;</span>: &#123;</span><br><span class="line">        <span class="attr">target</span>: <span class="string">&#x27;http://localhost:8080&#x27;</span>,</span><br><span class="line">        <span class="attr">changeOrigin</span>: <span class="literal">true</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="🔧-四、开发实用技巧">🔧 四、开发实用技巧</h2><h3 id="跨域解决方案">跨域解决方案</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 后端配置CORS</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CorsConfig</span> <span class="keyword">implements</span> <span class="title class_">WebMvcConfigurer</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addCorsMappings</span><span class="params">(CorsRegistry registry)</span> &#123;</span><br><span class="line">        registry.addMapping(<span class="string">&quot;/**&quot;</span>)</span><br><span class="line">                .allowedOrigins(<span class="string">&quot;*&quot;</span>)</span><br><span class="line">                .allowedMethods(<span class="string">&quot;*&quot;</span>)</span><br><span class="line">                .maxAge(<span class="number">3600</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="全局异常处理">全局异常处理</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ControllerAdvice</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GlobalExceptionHandler</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ExceptionHandler(Exception.class)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="keyword">public</span> Result&lt;String&gt; <span class="title function_">handleException</span><span class="params">(Exception e)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> Result.error(e.getMessage());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="前端API封装">前端API封装</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// src/api/index.js</span></span><br><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> service = axios.<span class="title function_">create</span>(&#123;</span><br><span class="line">  <span class="attr">baseURL</span>: <span class="string">&#x27;/api&#x27;</span>,</span><br><span class="line">  <span class="attr">timeout</span>: <span class="number">10000</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 请求拦截器</span></span><br><span class="line">service.<span class="property">interceptors</span>.<span class="property">request</span>.<span class="title function_">use</span>(<span class="function"><span class="params">config</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> token = <span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&#x27;token&#x27;</span>)</span><br><span class="line">  <span class="keyword">if</span> (token) &#123;</span><br><span class="line">    config.<span class="property">headers</span>[<span class="string">&#x27;Authorization&#x27;</span>] = <span class="string">`Bearer <span class="subst">$&#123;token&#125;</span>`</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> config</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 响应拦截器</span></span><br><span class="line">service.<span class="property">interceptors</span>.<span class="property">response</span>.<span class="title function_">use</span>(</span><br><span class="line">  <span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> response.<span class="property">data</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(error)</span><br><span class="line">  &#125;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> service</span><br></pre></td></tr></table></figure><h2 id="📦-五、部署方案">📦 五、部署方案</h2><h3 id="1-后端打包">1. 后端打包</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mvn clean package -DskipTests</span><br><span class="line">java -jar target/demo-0.0.1-SNAPSHOT.jar</span><br></pre></td></tr></table></figure><h3 id="2-前端打包">2. 前端打包</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run build</span><br></pre></td></tr></table></figure><h3 id="3-部署架构选择">3. 部署架构选择</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1.</span> 传统部署</span><br><span class="line"><span class="bullet">   -</span> Nginx反向代理</span><br><span class="line"><span class="bullet">   -</span> 静态资源部署</span><br><span class="line"></span><br><span class="line"><span class="bullet">2.</span> Docker化部署</span><br><span class="line"><span class="bullet">   -</span> Docker Compose编排</span><br><span class="line"><span class="bullet">   -</span> Nginx容器配置</span><br><span class="line"></span><br><span class="line"><span class="bullet">3.</span> CI/CD方案</span><br><span class="line"><span class="bullet">   -</span> Jenkins Pipeline</span><br><span class="line"><span class="bullet">   -</span> GitHub Actions</span><br></pre></td></tr></table></figure><h2 id="📝-六、学习资源推荐">📝 六、学习资源推荐</h2><ul><li>书籍：<ul><li>《Spring Boot实战》</li><li>《Vue.js设计与实现》</li></ul></li><li>视频：<ul><li>B站尚硅谷SpringBoot+Vue全栈课程</li></ul></li><li>文档：<ul><li><a href="https://spring.io/projects/spring-boot">Spring官方文档</a></li><li><a href="https://vuejs.org/">Vue官方文档</a></li></ul></li><li>社区：<ul><li>StackOverflow</li><li>GitHub热门开源项目</li></ul></li></ul><h2 id="🚨-常见问题排查">🚨 常见问题排查</h2><ol><li><p>端口冲突：检查8080/3000端口占用</p></li><li><p>数据库连接失败：检查MySQL服务状态和账号权限</p></li><li><p>跨域问题：确保前后端CORS配置正确</p></li><li><p>前端路由404：配置Nginx重定向规则</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">   </span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;🤖-Assistant&quot;&gt;🤖 Assistant&lt;/h3&gt;
&lt;figure class=&quot;highlight markdown&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>最直接解决C盘爆红</title>
    <link href="https://lxttz.github.io/posts/439c0790.html"/>
    <id>https://lxttz.github.io/posts/439c0790.html</id>
    <published>2025-04-18T04:55:00.000Z</published>
    <updated>2025-04-18T05:07:20.149Z</updated>
    
    <content type="html"><![CDATA[<h1>方法：</h1><p>最直接有效的就是删除用不到的程序和文件<br>设置桌面的存储位置<br>更改文件下载路径<br>还有QQ微信的文件存储</p><h1>工具使用:(不要去下载哪些流氓的清理APP，会导致你越用越卡)</h1><h2 id="工具一：Everything（磁盘文件搜索神器）">工具一：Everything（磁盘文件搜索神器）</h2><p>下载链接：<a href="https://www.voidtools.com/zh-cn/downloads/">https://www.voidtools.com/zh-cn/downloads/</a><br>下载安装使用教程：<br><a href="https://blog.csdn.net/lh155136/article/details/126208006">https://blog.csdn.net/lh155136/article/details/126208006</a></p><h2 id="工具二：SpaceSniffer-exe（扫描磁盘空间利器）">工具二：SpaceSniffer.exe（扫描磁盘空间利器）</h2><p>下载链接：<a href="https://www.voidtools.com/zh-cn/downloads/">https://www.voidtools.com/zh-cn/downloads/</a><br>下载安装使用教程：<br><a href="https://blog.csdn.net/qwe122343/article/details/104782881">https://blog.csdn.net/qwe122343/article/details/104782881</a></p><h2 id="工具三：Geek（程序软件卸载神器）">工具三：Geek（程序软件卸载神器）</h2><p>下载链接：<a href="https://geekuninstaller.com/download">https://geekuninstaller.com/download</a>    （下载免费版本够用）<br>下载安装使用教程：<br><a href="https://blog.csdn.net/weixin_64944512/article/details/138968441?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522bb51f3962d36fe405b94576003beba5c%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=bb51f3962d36fe405b94576003beba5c&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_click~default-2-138968441-null-null.142%5Ev102%5Econtrol&amp;utm_term=geek%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85&amp;spm=1018.2226.3001.4187">https://blog.csdn.net/weixin_64944512/article/details/138968441?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522bb51f3962d36fe405b94576003beba5c%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=bb51f3962d36fe405b94576003beba5c&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_click~default-2-138968441-null-null.142^v102^control&amp;utm_term=geek下载安装&amp;spm=1018.2226.3001.4187</a></p>]]></content>
    
    
    <summary type="html">快速解决C盘爆红</summary>
    
    
    
    <category term="电脑技巧" scheme="https://lxttz.github.io/categories/%E7%94%B5%E8%84%91%E6%8A%80%E5%B7%A7/"/>
    
    <category term="C盘爆红" scheme="https://lxttz.github.io/categories/%E7%94%B5%E8%84%91%E6%8A%80%E5%B7%A7/C%E7%9B%98%E7%88%86%E7%BA%A2/"/>
    
    
    <category term="直接解决C盘爆红" scheme="https://lxttz.github.io/tags/%E7%9B%B4%E6%8E%A5%E8%A7%A3%E5%86%B3C%E7%9B%98%E7%88%86%E7%BA%A2/"/>
    
  </entry>
  
  <entry>
    <title>【图层分离导出PSD】图层分离插件</title>
    <link href="https://lxttz.github.io/posts/87b2622f.html"/>
    <id>https://lxttz.github.io/posts/87b2622f.html</id>
    <published>2025-04-15T07:54:33.000Z</published>
    <updated>2025-04-15T08:28:46.108Z</updated>
    
    <content type="html"><![CDATA[<p>需要PY310和git</p><p>py3.10.8版本地址下载链接<br><a href="https://www.python.org/downloads/release/python-3108/">https://www.python.org/downloads/release/python-3108/</a></p><p><a href="https://github.com/mattyamonaca/layerdivider">https://github.com/mattyamonaca/layerdivider</a></p><p><a href="https://visualstudio.microsoft.com/zh-hans/thank-you-downloading-visual-studio/?sku=Community&amp;channel=Release&amp;version=VS2022&amp;source=VSLandingPage&amp;cid=2030&amp;passive=false">https://visualstudio.microsoft.com/zh-hans/thank-you-downloading-visual-studio/?sku=Community&amp;channel=Release&amp;version=VS2022&amp;source=VSLandingPage&amp;cid=2030&amp;passive=false</a><br>安装方法<br>1、下载代码解压或者git clone <a href="https://github.com/mattyamonaca/layerdivider">https://github.com/mattyamonaca/layerdivider</a><br>2、双击install.ps1安装，等安装完毕。<br>3、双击run_gui.ps1运行。<br>4、打开网页，将run_gui.ps1的地址输入浏览器(默认是localhost:7860).</p><p>使用方法：<br>把图片上传或拖拽即可</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;需要PY310和git&lt;/p&gt;
&lt;p&gt;py3.10.8版本地址下载链接&lt;br&gt;
&lt;a href=&quot;https://www.python.org/downloads/release/python-3108/&quot;&gt;https://www.python.org/downloads/</summary>
      
    
    
    
    <category term="ps" scheme="https://lxttz.github.io/categories/ps/"/>
    
    <category term="图片分层插件" scheme="https://lxttz.github.io/categories/ps/%E5%9B%BE%E7%89%87%E5%88%86%E5%B1%82%E6%8F%92%E4%BB%B6/"/>
    
    
    <category term="图层分离导出PSD" scheme="https://lxttz.github.io/tags/%E5%9B%BE%E5%B1%82%E5%88%86%E7%A6%BB%E5%AF%BC%E5%87%BAPSD/"/>
    
  </entry>
  
  <entry>
    <title>若依前后端笔记二次开发</title>
    <link href="https://lxttz.github.io/posts/1f114b5f.html"/>
    <id>https://lxttz.github.io/posts/1f114b5f.html</id>
    <published>2025-04-14T08:10:23.000Z</published>
    <updated>2025-04-14T16:07:36.182Z</updated>
    
    <content type="html"><![CDATA[<p>运行成功若依后台管理</p><p>（1）删除若依自带的个性<br>若依管理  改成  ***管理系统</p><p>（2）新建子模块在后端<br>新建模块<br>路径：A:\卓面\RuoYi-Vue\pom.xml<br>在pom.xml通用工具，标签modules增加新的模块配置<br>路径：A:\卓面\RuoYi-Vue\ruoyi-admin\pom.xml<br>在pom.xml代码生成增加新的模块配置<br>（3）ai设计数据库<br>提示词：设计一下XXXXX系统的数据库<br>设计一下该系统的数据库，用列表展示，最后所有sql指令全部放在一起</p><p>系统管理——》菜单管理<br>系统工具——》生成代码——》导入数据库</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;运行成功若依后台管理&lt;/p&gt;
&lt;p&gt;（1）删除若依自带的个性&lt;br&gt;
若依管理  改成  ***管理系统&lt;/p&gt;
&lt;p&gt;（2）新建子模块在后端&lt;br&gt;
新建模块&lt;br&gt;
路径：A:&#92;卓面&#92;RuoYi-Vue&#92;pom.xml&lt;br&gt;
在pom.xml通用工具，标签module</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>若依前后端分离笔记02</title>
    <link href="https://lxttz.github.io/posts/88a46a89.html"/>
    <id>https://lxttz.github.io/posts/88a46a89.html</id>
    <published>2025-04-14T07:35:01.000Z</published>
    <updated>2025-04-14T16:07:36.177Z</updated>
    
    <content type="html"><![CDATA[<h1>若依前后端分离笔记02</h1><h1>1.验证码的后端实现</h1><h2 id="后端代码">后端代码</h2><p>ctrl+shift+f  全局搜索    生成验证码</p><p>路径：src/main/java/com/ruoyi/web/controller/common/CaptchaController.java</p><p>代码部分</p><p>/**</p><ul><li>生成验证码<br>*/<br>@GetMapping(“/captchaImage”)<br>public AjaxResult getCode(HttpServletResponse response) throws IOException<br>{<br>AjaxResult ajax = AjaxResult.success();<br>boolean captchaEnabled = configService.selectCaptchaEnabled();<br>ajax.put(“captchaEnabled”, captchaEnabled);<br>if (!captchaEnabled)<br>{<br>return ajax;<br>}</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;若依前后端分离笔记02&lt;/h1&gt;
&lt;h1&gt;1.验证码的后端实现&lt;/h1&gt;
&lt;h2 id=&quot;后端代码&quot;&gt;后端代码&lt;/h2&gt;
&lt;p&gt;ctrl+shift+f  全局搜索    生成验证码&lt;/p&gt;
&lt;p&gt;路径：src/main/java/com/ruoyi/web/contro</summary>
      
    
    
    
    <category term="若依" scheme="https://lxttz.github.io/categories/%E8%8B%A5%E4%BE%9D/"/>
    
    <category term="若依前后端分离笔记02" scheme="https://lxttz.github.io/categories/%E8%8B%A5%E4%BE%9D/%E8%8B%A5%E4%BE%9D%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB%E7%AC%94%E8%AE%B002/"/>
    
    
    <category term="若依前后端分离笔记02" scheme="https://lxttz.github.io/tags/%E8%8B%A5%E4%BE%9D%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB%E7%AC%94%E8%AE%B002/"/>
    
  </entry>
  
  <entry>
    <title>若依前后端分离笔记01</title>
    <link href="https://lxttz.github.io/posts/11ad3b33.html"/>
    <id>https://lxttz.github.io/posts/11ad3b33.html</id>
    <published>2025-04-14T07:05:59.000Z</published>
    <updated>2025-04-14T07:35:34.325Z</updated>
    
    <content type="html"><![CDATA[<h1>1,登录界面</h1><p>友情链接;<a href="https://www.bilibili.com/video/BV1HT4y1d7oA?spm_id_from=333.788.videopod.episodes&amp;vd_source=1a2ba67b8224ba6daa0aff71044d4787&amp;p=2">2、验证码的前端实现_哔哩哔哩_bilibili</a></p><h2 id="1-1生成验证码">1.1生成验证码</h2><h3 id="（1）基本思路：">（1）基本思路：</h3><p>后端生成一个表达式：</p><p>列如1+1=2</p><p>1+1=？@2</p><p>（1）1+1=？转成图片，传到前端进行展示</p><p>（2）把答案存入Reids 中，key存在前端</p><h3 id="（2）代码实现：">（2）代码实现：</h3><p>前端页面：A:\卓面\ruoyi\RuoYi-Vue\ruoyi-ui\src\views      都在views文件中</p><p>登录前端页面（login.vue）：A:\卓面\ruoyi\RuoYi-Vue\ruoyi-ui\src\views\login.vue</p><p>login.vue107行代码：</p><p>created() {</p><p>this.getCode();       //方法</p><p>this.getCookie();</p><p>},</p><p>methods: {</p><p>getCode() {</p><p>getCodeImg().then(res =&gt; {</p><p>this.captchaEnabled = res.captchaEnabled === undefined ? true : res.captchaEnabled;</p><p>if (this.captchaEnabled) {</p><p>this.codeUrl = “data:image/gif;base64,” + res.img;        //图片</p><p>this.loginForm.uuid = res.uuid;      //res存储</p><p>}</p><p>});</p><p>},</p><p>login.vue的api接口路径</p><p>A:\卓面\ruoyi\RuoYi-Vue\ruoyi-ui\src\api\login.js<br><img src="../../themes/butterfly/source/img/Snipaste_2025-04-14_15-29-02.png" alt="alt text"></p><p>下一站：</p>]]></content>
    
    
    <summary type="html">验证码的前端实现</summary>
    
    
    
    <category term="若依" scheme="https://lxttz.github.io/categories/%E8%8B%A5%E4%BE%9D/"/>
    
    <category term="验证码的前端实现" scheme="https://lxttz.github.io/categories/%E8%8B%A5%E4%BE%9D/%E9%AA%8C%E8%AF%81%E7%A0%81%E7%9A%84%E5%89%8D%E7%AB%AF%E5%AE%9E%E7%8E%B0/"/>
    
    
    <category term="验证码的前端实现" scheme="https://lxttz.github.io/tags/%E9%AA%8C%E8%AF%81%E7%A0%81%E7%9A%84%E5%89%8D%E7%AB%AF%E5%AE%9E%E7%8E%B0/"/>
    
  </entry>
  
  <entry>
    <title>AI设计工具导出PSD格式能力对比</title>
    <link href="https://lxttz.github.io/posts/c876a53a.html"/>
    <id>https://lxttz.github.io/posts/c876a53a.html</id>
    <published>2025-04-14T04:47:30.000Z</published>
    <updated>2025-04-14T04:52:14.311Z</updated>
    
    <content type="html"><![CDATA[<h1>🎨 AI设计工具导出PSD格式能力对比</h1><h2 id="🛠️-1-ARKie">🛠️ <strong>1. ARKie</strong></h2><p><strong>📌 核心功能</strong>：智能生成+PSD导出<br>✅ <strong>优点</strong>：</p><ul><li>10分钟极速出图，电商级海报生产力</li><li>自动生成多套方案+版权检测报告</li><li>原生支持PSD分层文件导出</li><li>双端自适应设计（PC/移动）</li></ul><p>⚠️ <strong>缺点</strong>：</p><ul><li>复杂版面调整仍需人工干预</li><li>免费版导出版面有水印</li></ul><p>🔗 <a href="https://www.arkie.cn/">官网链接</a></p><hr><h2 id="🎯-2-匠紫AI">🎯 <strong>2. 匠紫AI</strong></h2><p><strong>📌 核心功能</strong>：自定义画板+PSD兼容<br>✅ <strong>优点</strong>：</p><ul><li>支持空白画布自由创作</li><li>输出质量达印刷标准</li><li>主题模板含分层PSD导出版本</li></ul><p>⚠️ <strong>缺点</strong>：</p><ul><li>中文界面偶现乱码</li><li>AI生成风格较单一</li></ul><p>🔗 <a href="https://www.jiangzhi.ai/">官网链接</a></p><hr><h2 id="🌐-3-搜狐简单AI">🌐 <strong>3. 搜狐简单AI</strong></h2><p><strong>📌 核心功能</strong>：在线PS替代方案<br>✅ <strong>优点</strong>：</p><ul><li>零学习成本，适合新手</li><li>基础修图功能完善</li><li>支持PSD批量导出</li></ul><p>⚠️ <strong>缺点</strong>：</p><ul><li>仅支持简单分层</li><li>高级功能需付费</li></ul><p>🔗 <a href="https://ps.sohu.com/">官网链接</a></p><hr><h2 id="🖼️-4-EximiousSoft-Poster-Designer">🖼️ <strong>4. EximiousSoft Poster Designer</strong></h2><p><strong>📌 核心功能</strong>：专业矢量海报设计<br>✅ <strong>优点</strong>：</p><ul><li>2000+矢量模板库</li><li>所见即所得路径编辑</li><li>原生导出PSD分层文件</li></ul><p>⚠️ <strong>缺点</strong>：</p><ul><li>非AI驱动需手动设计</li><li>界面设计较陈旧</li></ul><p>🔗 <a href="https://www.eximioussoft.com/">官网链接</a></p><hr><h2 id="🌌-5-图宇宙">🌌 <strong>5. 图宇宙</strong></h2><p><strong>📌 核心功能</strong>：智能设计中转方案<br>✅ <strong>优点</strong>：</p><ul><li>支持AI批量生成方案</li><li>多平台格式兼容性好</li><li>可二次导入PS处理</li></ul><p>⚠️ <strong>缺点</strong>：</p><ul><li>需转存为PNG再导入PS</li><li>分层信息部分丢失</li></ul><p>🔗 <a href="https://www.tuyuzhou.com/">官网链接</a></p><hr><h2 id="✨-补充方案：Adobe生态">✨ <strong>补充方案：Adobe生态</strong></h2><p><strong>📝 进阶方案</strong>：</p><ul><li><strong>Illustrator脚本</strong>：通过 <code>脚本 → 导出分层PSD</code></li><li><strong>Canva Pro</strong>：付费版支持PSD导出</li><li><strong>Photopea</strong>：在线PS替代工具</li></ul><hr><p>📌 <strong>选择建议</strong>：</p><ul><li>追求效率选 <strong>ARKie</strong></li><li>需要矢量编辑选 <strong>EximiousSoft</strong></li><li>预算有限用 <strong>搜狐简单AI+Photopea组合</strong></li><li>专业设计推荐 <strong>Adobe原生工作流</strong></li></ul><pre><code>注：各工具PSD导出功能可能因版本更新变化，建议测试具体需求场景下的文件兼容性。</code></pre>]]></content>
    
    
    <summary type="html">AI设计工具导出PSD格式能力对比</summary>
    
    
    
    <category term="ai" scheme="https://lxttz.github.io/categories/ai/"/>
    
    <category term="Ai设计工具" scheme="https://lxttz.github.io/categories/ai/Ai%E8%AE%BE%E8%AE%A1%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="AI设计工具导出PSD格式能力对比" scheme="https://lxttz.github.io/tags/AI%E8%AE%BE%E8%AE%A1%E5%B7%A5%E5%85%B7%E5%AF%BC%E5%87%BAPSD%E6%A0%BC%E5%BC%8F%E8%83%BD%E5%8A%9B%E5%AF%B9%E6%AF%94/"/>
    
  </entry>
  
  <entry>
    <title>Redis的安装及图形化界面</title>
    <link href="https://lxttz.github.io/posts/d66a61b1.html"/>
    <id>https://lxttz.github.io/posts/d66a61b1.html</id>
    <published>2025-04-13T09:52:29.000Z</published>
    <updated>2025-04-13T12:50:29.846Z</updated>
    
    <content type="html"><![CDATA[<h1>1.Redis 介绍</h1><p>Redis 是一个 key-value 存储系统。和 Memcached 类似，它支持存储的 value 类型相对更多，包括：string（字符串）、list（链表）、set（集合）、zset（sorted set --有序集合）和 hash（哈希类型）。这些数据类型都支持 push/pop、add/remove 及取交集并集和差集及更丰富的操作，而且这些操作都是原子性的。</p><p>在此基础上，redis 支持各种不同方式的排序。与 memcached 一样，为了保证效率，数据都是缓存在内存中。区别的是 redis 会周期性的把更新的数据写入磁盘或者把修改操作写入追加的记录文件，并且在此基础上实现了 master-slave。</p><h1>2.下载Windows版本的 Redis</h1><p>由于现在官网上只提供 Linux 版本的下载，所以我们只能在 Github 上下载 Windows 版本的 Redis</p><p>Windows 版本的 Redis 下载地址：<a href="https://github.com/MicrosoftArchive/redis/releases">https://github.com/MicrosoftArchive/redis/releases</a></p><p>进入下载页面之后，不要选择 Pre-release (测试版)，选择 Latest Release (稳定版)，往下拉可以看到很多版本 (这里的3.0.504版本是稳定版，所以这里我选择3.0.504进行下载)，点击 Redis-x64-3.0.504.zip 链接进行下载，需要源码的可点击 Source code (zip) 链接进行下载</p><p><img src="https://i-blog.csdnimg.cn/blog_migrate/548d363844cd09a28cf778ac067d57df.png" alt="548d363844cd09a28cf778ac067d57df"></p><p>下载完成之后，解压 Redis-x64-3.0.504.zip包，解压路径随意 (这里我在E盘下新建了一个Redis文件夹，并解压到Redis文件夹中)</p><p><img src="https://i-blog.csdnimg.cn/blog_migrate/c89ac56096e1cc002184a2eb17fda895.png" alt=""></p><p>文件介绍：</p><p>redis-benchmark.exe #基准测试</p><p>redis-check-aof.exe # aof</p><p>redischeck-dump.exe # dump</p><p>redis-cli.exe # 客户端</p><p>redis-server.exe # 服务器</p><p>redis.windows.conf # 配置文件</p><h1>3.安装Redis</h1><p>1、打开“命令行窗口”，然后把目录指向解压的Redis目录（这里我的Redis解压目录为 E:Redis）</p><p><img src="https://i-blog.csdnimg.cn/blog_migrate/b9b4fcceb836c86bd6ddbd253a13b188.png" alt="b9b4fcceb836c86bd6ddbd253a13b188"></p><p>2、输入启动命令 redis-server.exe redis.windows.conf，出现下图显示则表示启动成功了。</p><p><img src="https://i-blog.csdnimg.cn/blog_migrate/116d1e0e36b40015ff12ce0bf0915d90.png" alt=""></p><h1>4. 设置Redis服务</h1><p>1、由于上面虽然启动了redis，但是只要一关闭“命令行窗口”，redis就会消失。所以要把redis设置成windows下的服务,使其开机自动启动。</p><p>2、右键我的电脑，选择管理(G)，到 服务和应用程序 → 服务中查看所有服务</p><p><img src="https://i-blog.csdnimg.cn/blog_migrate/a8660d6992c8d5dce1e122878a9f31b9.png" alt=""></p><p>3、我们可以看到红框中是没有Redis服务的</p><p><img src="https://i-blog.csdnimg.cn/blog_migrate/d9095a3759116af16bd0b1a099e41062.png" alt="d9095a3759116af16bd0b1a099e41062"></p><p>4、这时候另启一个“命令行窗口”（原来的“命令行窗口”不要关闭，不然就无法访问服务端了）</p><p>输入设置服务命令 redis-server --service-install redis.windows-service.conf --loglevel verbose，输入命令之后没有报错，则表示成功了</p><p><img src="https://i-blog.csdnimg.cn/blog_migrate/df5c168f63bfeaeee6ce8b7d8ce509ed.png" alt="df5c168f63bfeaeee6ce8b7d8ce509ed"></p><p>这时，我们刷新服务，会看到多了一个Redis服务。</p><p><img src="https://i-blog.csdnimg.cn/blog_migrate/03433dfaa3cb83428ea37824ec54d80f.jpeg" alt="03433dfaa3cb83428ea37824ec54d80f"></p><h1>5.可视化工具Redis Desktop Manager安装</h1><p>5.1 下载Redis Desktop Manager<br>Redis Desktop Manager下载链接：<a href="https://pan.baidu.com/s/1ihWvjsCk6-Jw3OWhm5o33g">https://pan.baidu.com/s/1ihWvjsCk6-Jw3OWhm5o33g</a></p><p>5.2 安装Redis Desktop Manager<br>1、双击运行下载好的 redis-desktop-manager-0.8.8.384.exe 可执行文件，进入如下界面</p><p><img src="https://i-blog.csdnimg.cn/blog_migrate/d3f0f1dbde398747985d05d73acbcbd7.jpeg" alt="d3f0f1dbde398747985d05d73acbcbd7"></p><p>2、点击 I Agree</p><p><img src="https://i-blog.csdnimg.cn/blog_migrate/ece6a68dd69593fd6fbb67e3289241a7.jpeg" alt="ece6a68dd69593fd6fbb67e3289241a7"></p><p>3、选择Redis Desktop Manager的安装目录，并点击Install</p><p><img src="https://i-blog.csdnimg.cn/blog_migrate/b5119cfd440701e4f508bdb34b228782.jpeg" alt="b5119cfd440701e4f508bdb34b228782"></p><p>4、点击Next</p><p><img src="https://i-blog.csdnimg.cn/blog_migrate/90afc7ff1048340d7e9b6a00a130e9ef.jpeg" alt="90afc7ff1048340d7e9b6a00a130e9ef"></p><p>5、点击Finish</p><p><img src="https://i-blog.csdnimg.cn/blog_migrate/6d2aa7fa8e3c66c839cf51e679796ec7.png" alt="6d2aa7fa8e3c66c839cf51e679796ec7"></p><p>5.3 可视化工具 Redis Desktop Manager 的使用<br>5.3.1 修改Redis默认密码 (默认密码为空)<br>在你的Redis安装目录中找到 redis.windows.conf配置文件</p><p>在配置文件中找到这一行 # requirepass foobared</p><p>删除前面的注释符号#，并把foobared修改成自己的密码 或者 另起一行requirepass 自己的密码</p><p><img src="https://i-blog.csdnimg.cn/blog_migrate/57721a13bf2b618ce5dd94a95cca67f5.png" alt="57721a13bf2b618ce5dd94a95cca67f5"></p><p>重新启动Redis</p><p><img src="https://i-blog.csdnimg.cn/blog_migrate/c25fb1812583caa4e57d92e7f4753394.png" alt="c25fb1812583caa4e57d92e7f4753394"></p><p>5.3.2 打开可视化工具 Redis Desktop Manager<br>点击 Connect to Redis Server</p><p><img src="https://i-blog.csdnimg.cn/blog_migrate/3175ecc00cadd26c8985ec39232da324.png" alt="3175ecc00cadd26c8985ec39232da324"></p><p>填写相应的参数<br>Name：数据库名称</p><p>Host：主机IP地址（如果是本机，填写 127.0.0.1 或者 localhost 都可以）</p><p>Prot：端口号 （默认端口号为 6379）</p><p>Auth：Redis密码 （这里我设置的密码为 123456）</p><p><img src="https://i-blog.csdnimg.cn/blog_migrate/1a1c2cccdccc68feb123925297e0a2f6.jpeg" alt="1a1c2cccdccc68feb123925297e0a2f6"></p><p>点击Test Connection，测试是否链接成功（注意之前重启的Redis“命令行窗口”不要关闭，不然就无法连接服务端了），出现下图显示则表示启动成功了。</p><p><img src="https://i-blog.csdnimg.cn/blog_migrate/4551fa72432aaad3441ab3843e8716fb.jpeg" alt="4551fa72432aaad3441ab3843e8716fb"></p><ol start="4"><li>就可以操作自己新建的myRedis数据库了</li></ol><p><img src="https://i-blog.csdnimg.cn/blog_migrate/e2b3713873c207931d30d189a2da8931.png" alt=""></p><h1>相关链接</h1><p><a href="https://blog.csdn.net/bhegi_seg/article/details/126553283?ops_request_misc=%257B%2522request%255Fid%2522%253A%252270307c06ca0f43ac1fa7feb5c73de00a%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=70307c06ca0f43ac1fa7feb5c73de00a&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_click~default-1-126553283-null-null.142%5Ev102%5Econtrol&amp;utm_term=Redis%E5%9B%BE%E5%BD%A2%E5%8C%96%E7%95%8C%E9%9D%A2&amp;spm=1018.2226.3001.4187">https://blog.csdn.net/bhegi_seg/article/details/126553283?ops_request_misc=%257B%2522request%255Fid%2522%253A%252270307c06ca0f43ac1fa7feb5c73de00a%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=70307c06ca0f43ac1fa7feb5c73de00a&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_click~default-1-126553283-null-null.142^v102^control&amp;utm_term=Redis图形化界面&amp;spm=1018.2226.3001.4187</a></p><p><a href="https://blog.csdn.net/weixin_42437102/article/details/131916076?ops_request_misc=%257B%2522request%255Fid%2522%253A%25222a15e2dafbb6bfb3148569be3cddbc52%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=2a15e2dafbb6bfb3148569be3cddbc52&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_click~default-1-131916076-null-null.142%5Ev102%5Econtrol&amp;utm_term=redis%20desktop%20manager%E7%9A%84%E4%BD%BF%E7%94%A8&amp;spm=1018.2226.3001.4187">https://blog.csdn.net/weixin_42437102/article/details/131916076?ops_request_misc=%257B%2522request%255Fid%2522%253A%25222a15e2dafbb6bfb3148569be3cddbc52%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=2a15e2dafbb6bfb3148569be3cddbc52&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_click~default-1-131916076-null-null.142^v102^control&amp;utm_term=redis desktop manager的使用&amp;spm=1018.2226.3001.4187</a></p>]]></content>
    
    
    <summary type="html">Redis 的安装及图形化界面 Redis DeskTop Manager 的安装与使用</summary>
    
    
    
    <category term="Redis" scheme="https://lxttz.github.io/categories/Redis/"/>
    
    
    <category term="Redis 的安装及图形化界面 Redis DeskTop Manager 的安装与使用" scheme="https://lxttz.github.io/tags/Redis-%E7%9A%84%E5%AE%89%E8%A3%85%E5%8F%8A%E5%9B%BE%E5%BD%A2%E5%8C%96%E7%95%8C%E9%9D%A2-Redis-DeskTop-Manager-%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>若依/RuoYi-Vue（前后端分离）笔记</title>
    <link href="https://lxttz.github.io/posts/c058b007.html"/>
    <id>https://lxttz.github.io/posts/c058b007.html</id>
    <published>2025-04-13T09:15:40.000Z</published>
    <updated>2025-04-13T09:50:58.288Z</updated>
    
    <content type="html"><![CDATA[<h2 id="若依-RuoYi-Vue（前后端分离）笔记">若依/RuoYi-Vue（前后端分离）笔记</h2><h3 id="1-技术站：">1.技术站：</h3><p>springboot+vue</p><h3 id="2-环境要求">2.环境要求</h3><h4 id="（1）JDk-1-8">（1）JDk 1.8+</h4><p>Java 运行时环境和开发工具。它负责编译、运行 Java 代码</p><h4 id="（2）mysql">（2）mysql</h4><p>存储系统的各种数据</p><h4 id="（3）Redis">（3）Redis</h4><p>高性能的内存数据库，在若依项目中主要用于缓存数据</p><h4 id="（4）Maven">（4）Maven</h4><p>项目构建工具</p><h4 id="（5）vue">（5）vue</h4><p>构建用户界面</p><ul><li><strong>JDK 1.8+</strong>：Java Development Kit 是 Java 开发的核心工具包，若依项目是基于 Java 语言开发的，所以需要 JDK 来提供 Java 运行时环境和开发工具。它负责编译、运行 Java 代码，提供了 Java 的核心类库以及各种开发和调试工具，是若依项目能够正常编译、部署和运行的基础。</li><li><strong>MySQL</strong>：是一种常用的关系型数据库管理系统，在若依项目中主要用于存储系统的各种数据，如用户信息、角色权限、业务数据等。若依项目通过数据库操作来实现数据的持久化，方便对数据进行查询、插入、更新和删除等操作，以支持系统的各种业务功能。</li><li><strong>Redis</strong>：是一个高性能的内存数据库，在若依项目中主要用于缓存数据。它可以存储经常访问的数据，如用户登录信息、系统配置信息等，以提高系统的访问速度和性能。通过将数据缓存在 Redis 中，可以减少对数据库的频繁访问，减轻数据库的压力，从而提高整个系统的响应速度和并发处理能力。</li><li><strong>Maven</strong>：是一个项目构建工具，用于管理 Java 项目的依赖关系、构建过程和项目生命周期。在若依项目中，Maven 可以自动下载项目所需的各种依赖库，如 Java 框架、第三方工具等，并且可以按照规定的构建流程进行项目的编译、测试、打包和部署等操作，使得项目的构建和管理更加高效、规范和易于维护。</li><li><strong>Vue</strong>：是一款流行的 JavaScript 前端框架，在若依项目中主要用于构建用户界面。它通过组件化的方式来组织前端代码，使得前端页面的开发更加高效、可维护。Vue 与后端的 Spring Boot 等框架相结合，实现前后端分离的架构，Vue 负责前端页面的展示和交互逻辑，通过与后端接口进行数据交互，为用户提供良好的用户体验。</li></ul><h3 id="3-使用若依">3.使用若依</h3><p>使用开源项目的步骤:</p><h4 id="1、下载并运行">1、下载并运行</h4><p>地址：</p><p><a href="https://gitee.com/y_project/RuoYi-Vue">RuoYi-Vue: 🎉 基于SpringBoot，Spring Security，JWT，Vue &amp; Element 的前后端分离权限管理系统，同时提供了 Vue3 的版本</a></p><p>建议使用git下载</p><p>git clone <a href="https://gitee.com/y_project/RuoYi-Vue.git">https://gitee.com/y_project/RuoYi-Vue.git</a></p><h4 id="（1）具体步骤下载">（1）具体步骤下载</h4><p>SSH</p><p><a href="https://gitee.com/y_project/RuoYi-Vue.git">https://gitee.com/y_project/RuoYi-Vue.git</a></p><p>提示</p><p>下载代码请复制以下命令到终端执行</p><p>git clone <a href="https://gitee.com/y_project/RuoYi-Vue.git">https://gitee.com/y_project/RuoYi-Vue.git</a></p><p>为确保你提交的代码身份被 Gitee 正确识别，请执行以下命令完成配置</p><p>使用 HTTPS 协议时，命令行会出现如下账号密码验证步骤。基于安全考虑，Gitee 建议 <a href="https://gitee.com/profile/personal_access_tokens">配置并使用私人令牌</a> 替代登录密码进行克隆、推送等操作</p><p>Username for ‘<a href="https://gitee.com">https://gitee.com</a>’: userName</p><p>Password for ‘<a href="https://userName@gitee.com">https://userName@gitee.com</a>’: # 私人令牌</p><h4 id="（2）配置数据库Mysql-Reids">（2）配置数据库Mysql Reids</h4><h5 id="Mysql配置">Mysql配置</h5><p>(本地执行数据脚本sql)  推荐使用数据库可视化工具</p><p>(更该本地的数据源)     在该文件application-druid.yml</p><p>文件地址:RuoYi-Vue\ruoyi-admin\src\main\resources\application-druid.yml</p><p>代码块：</p><p>``</p><p>master:<br>url: jdbc:mysql://localhost:3306/ry-vue?useUnicode=true&amp;characterEncoding=utf8&amp;zeroDateTimeBehavior=convertToNull&amp;useSSL=true&amp;serverTimezone=GMT%2B8<br>username: root<br>password: password</p><p>``</p><h5 id="Reids配置">Reids配置</h5><p>(启动reids服务)</p><p>配置Reids：application.yml</p><p>代码块：</p><p>``</p><p>redis:</p><p>地址</p><p>host: localhost</p><p>端口，默认为6379</p><p>port: 6379</p><p>``</p><h4 id="（3）启动后端主类">（3）启动后端主类</h4><p>地址：RuoYi-Vue\ruoyi-admin\src\main\java\com\ruoyi\RuoYiApplication.java</p><p>后端访问地址：<a href="http://localhost:8080">http://localhost:8080</a></p><h4 id="（4）启动前端">（4）启动前端</h4><h1>进入项目目录</h1><p>``</p><p>cd ruoyi-ui</p><p>安装依赖</p><p>npm install</p><p>建议不要直接使用 cnpm 安装依赖，会有各种诡异的 bug。可以通过如下操作解决 npm 下载速度慢的问题</p><p>npm install --registry=https://registry.npmmirror.com</p><p>启动服务</p><p>npm run dev<br>``</p><h4 id="2、看懂业务流程">2、看懂业务流程</h4><p>ruoyi-ui：前端</p><p>ruoyi-admin：后端</p><p>sql：数据库</p><h4 id="3、进行二次开发">3、进行二次开发</h4>]]></content>
    
    
    <summary type="html">若依/RuoYi-Vue（前后端分离）笔记</summary>
    
    
    
    <category term="若依" scheme="https://lxttz.github.io/categories/%E8%8B%A5%E4%BE%9D/"/>
    
    
    <category term="若依/RuoYi-Vue（前后端分离）笔记" scheme="https://lxttz.github.io/tags/%E8%8B%A5%E4%BE%9D-RuoYi-Vue%EF%BC%88%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB%EF%BC%89%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>若依笔记入门</title>
    <link href="https://lxttz.github.io/posts/25bfe5f9.html"/>
    <id>https://lxttz.github.io/posts/25bfe5f9.html</id>
    <published>2025-04-13T08:43:25.000Z</published>
    <updated>2025-04-13T09:15:53.707Z</updated>
    
    <content type="html"><![CDATA[<h1>若依笔记入门</h1><h2 id="1-什么是若依？">1.什么是若依？</h2><p>开源项目，学习开源项目的目标</p><p>1、使用若依来开减少工作量</p><p>2、学习优秀开源 项目的底层逻辑的编程思想， 设计思路，提高编程能力</p><h2 id="2-若依官网">2.若依官网</h2><p>官网：（<a href="https://ruoyi.vip">https://ruoyi.vip</a>）</p><p><a href="https://ruoyi.vip/">RuoYi 若依官方网站 |后台管理系统|权限管理系统|快速开发框架|企业管理系统|开源框架|微服务框架|前后端分离框架|开源后台系统|RuoYi|RuoYi-Vue|RuoYi-Cloud|RuoYi框架|RuoYi开源|RuoYi视频|若依视频|RuoYi开发文档|若依开发文档|Java开源框架|Java|SpringBoot|SrpingBoot2.0|SrpingCloud|Alibaba|MyBatis|Shiro|OAuth2.0|Thymeleaf|BootStrap|Vue|Element-UI||www.ruoyi.vip</a></p><h2 id="3-若依源码地址">3.若依源码地址</h2><h3 id="若依-RuoYi">若依/RuoYi</h3><p><a href="https://gitee.com/y_project/RuoYi">RuoYi: 🎉 基于SpringBoot的权限管理系统 易读易懂、界面简洁美观。 核心技术采用Spring、MyBatis、Shiro没有任何其它重度依赖。直接运行即可用</a></p><h3 id="若依-RuoYi-Vue">若依/RuoYi-Vue</h3><p><a href="https://gitee.com/y_project/RuoYi-Vue">RuoYi-Vue: 🎉 基于SpringBoot，Spring Security，JWT，Vue &amp; Element 的前后端分离权限管理系统，同时提供了 Vue3 的版本</a></p><h3 id="若依-RuoYi-Cloud">若依/RuoYi-Cloud</h3><p><a href="https://gitee.com/y_project/RuoYi-Cloud">RuoYi-Cloud: 🎉 基于Spring Boot、Spring Cloud &amp; Alibaba的分布式微服务架构权限管理系统，同时提供了 Vue3 的版本</a></p><h3 id="若依-RuoYi-App">若依/RuoYi-App</h3><p><a href="https://gitee.com/y_project/RuoYi-App">RuoYi-App: 🎉 RuoYi APP 移动端框架，基于uniapp+uniui封装的一套基础模版，支持H5、APP、微信小程序、支付宝小程序等，实现了与RuoYi-Vue、RuoYi-Cloud后台完美对接。</a></p><p align="center"><img alt="logo" src="https://oscimg.oschina.net/oscnet/up-d3d0a9303e11d522a06cd263f3079027715.png"></p><h1 align="center" style="margin: 30px 0 30px; font-weight: bold;">RuoYi v3.8.9</h1><h4 align="center">基于SpringBoot+Vue前后端分离的Java快速开发框架</h4><p align="center"><a href="https://gitee.com/y_project/RuoYi-Vue/stargazers"><img src="https://gitee.com/y_project/RuoYi-Vue/badge/star.svg?theme=dark"></a><a href="https://gitee.com/y_project/RuoYi-Vue"><img src="https://img.shields.io/badge/RuoYi-v3.8.9-brightgreen.svg"></a><a href="https://gitee.com/y_project/RuoYi-Vue/blob/master/LICENSE"><img src="https://img.shields.io/github/license/mashape/apistatus.svg"></a></p><h2 id="平台简介">平台简介</h2><p>若依是一套全部开源的快速开发平台，毫无保留给个人及企业免费使用。</p><ul><li>前端采用Vue、Element UI。</li><li>后端采用Spring Boot、Spring Security、Redis &amp; Jwt。</li><li>权限认证使用Jwt，支持多终端认证系统。</li><li>支持加载动态权限菜单，多方式轻松权限控制。</li><li>高效率开发，使用代码生成器可以一键生成前后端代码。</li><li>提供了技术栈（<a href="https://v3.cn.vuejs.org">Vue3</a> <a href="https://element-plus.org/zh-CN">Element Plus</a> <a href="https://cn.vitejs.dev">Vite</a>）版本<a href="https://gitcode.com/yangzongzhuan/RuoYi-Vue3">RuoYi-Vue3</a>，保持同步更新。</li><li>提供了单应用版本<a href="https://gitcode.com/yangzongzhuan/RuoYi-Vue-fast">RuoYi-Vue-fast</a>，Oracle版本<a href="https://gitcode.com/yangzongzhuan/RuoYi-Vue-Oracle">RuoYi-Vue-Oracle</a>，保持同步更新。</li><li>不分离版本，请移步<a href="https://gitee.com/y_project/RuoYi">RuoYi</a>，微服务版本，请移步<a href="https://gitee.com/y_project/RuoYi-Cloud">RuoYi-Cloud</a></li><li>阿里云折扣场：<a href="http://aly.ruoyi.vip">点我进入</a>，腾讯云秒杀场：<a href="http://txy.ruoyi.vip">点我进入</a>  </li></ul><h2 id="内置功能">内置功能</h2><ol><li>用户管理：用户是系统操作者，该功能主要完成系统用户配置。</li><li>部门管理：配置系统组织机构（公司、部门、小组），树结构展现支持数据权限。</li><li>岗位管理：配置系统用户所属担任职务。</li><li>菜单管理：配置系统菜单，操作权限，按钮权限标识等。</li><li>角色管理：角色菜单权限分配、设置角色按机构进行数据范围权限划分。</li><li>字典管理：对系统中经常使用的一些较为固定的数据进行维护。</li><li>参数管理：对系统动态配置常用参数。</li><li>通知公告：系统通知公告信息发布维护。</li><li>操作日志：系统正常操作日志记录和查询；系统异常信息日志记录和查询。</li><li>登录日志：系统登录日志记录查询包含登录异常。</li><li>在线用户：当前系统中活跃用户状态监控。</li><li>定时任务：在线（添加、修改、删除)任务调度包含执行结果日志。</li><li>代码生成：前后端代码的生成（java、html、xml、sql）支持CRUD下载 。</li><li>系统接口：根据业务代码自动生成相关的api接口文档。</li><li>服务监控：监视当前系统CPU、内存、磁盘、堆栈等相关信息。</li><li>缓存监控：对系统的缓存信息查询，命令统计等。</li><li>在线构建器：拖动表单元素生成相应的HTML代码。</li><li>连接池监视：监视当前系统数据库连接池状态，可进行分析SQL找出系统性能瓶颈。</li></ol><h2 id="在线体验">在线体验</h2><ul><li>admin/admin123</li><li>陆陆续续收到一些打赏，为了更好的体验已用于演示服务器升级。谢谢各位小伙伴。</li></ul><p>演示地址：<a href="http://vue.ruoyi.vip">http://vue.ruoyi.vip</a><br>文档地址：<a href="http://doc.ruoyi.vip">http://doc.ruoyi.vip</a></p><h2 id="演示图">演示图</h2><table>    <tr>        <td><img src="https://oscimg.oschina.net/oscnet/cd1f90be5f2684f4560c9519c0f2a232ee8.jpg"/></td>        <td><img src="https://oscimg.oschina.net/oscnet/1cbcf0e6f257c7d3a063c0e3f2ff989e4b3.jpg"/></td>    </tr>    <tr>        <td><img src="https://oscimg.oschina.net/oscnet/up-8074972883b5ba0622e13246738ebba237a.png"/></td>        <td><img src="https://oscimg.oschina.net/oscnet/up-9f88719cdfca9af2e58b352a20e23d43b12.png"/></td>    </tr>    <tr>        <td><img src="https://oscimg.oschina.net/oscnet/up-39bf2584ec3a529b0d5a3b70d15c9b37646.png"/></td>        <td><img src="https://oscimg.oschina.net/oscnet/up-936ec82d1f4872e1bc980927654b6007307.png"/></td>    </tr><tr>        <td><img src="https://oscimg.oschina.net/oscnet/up-b2d62ceb95d2dd9b3fbe157bb70d26001e9.png"/></td>        <td><img src="https://oscimg.oschina.net/oscnet/up-d67451d308b7a79ad6819723396f7c3d77a.png"/></td>    </tr>     <tr>        <td><img src="https://oscimg.oschina.net/oscnet/5e8c387724954459291aafd5eb52b456f53.jpg"/></td>        <td><img src="https://oscimg.oschina.net/oscnet/644e78da53c2e92a95dfda4f76e6d117c4b.jpg"/></td>    </tr><tr>        <td><img src="https://oscimg.oschina.net/oscnet/up-8370a0d02977eebf6dbf854c8450293c937.png"/></td>        <td><img src="https://oscimg.oschina.net/oscnet/up-49003ed83f60f633e7153609a53a2b644f7.png"/></td>    </tr><tr>        <td><img src="https://oscimg.oschina.net/oscnet/up-d4fe726319ece268d4746602c39cffc0621.png"/></td>        <td><img src="https://oscimg.oschina.net/oscnet/up-c195234bbcd30be6927f037a6755e6ab69c.png"/></td>    </tr>    <tr>        <td><img src="https://oscimg.oschina.net/oscnet/b6115bc8c31de52951982e509930b20684a.jpg"/></td>        <td><img src="https://oscimg.oschina.net/oscnet/up-5e4daac0bb59612c5038448acbcef235e3a.png"/></td>    </tr></table><h2 id="若依前后端分离交流群">若依前后端分离交流群</h2><p>QQ群： <a href="https://jq.qq.com/?_wv=1027&amp;k=5bVB1og"><img src="https://img.shields.io/badge/%E5%B7%B2%E6%BB%A1-937441-blue.svg" alt="加入QQ群"></a> <a href="https://jq.qq.com/?_wv=1027&amp;k=5eiA4DH"><img src="https://img.shields.io/badge/%E5%B7%B2%E6%BB%A1-887144332-blue.svg" alt="加入QQ群"></a> <a href="https://jq.qq.com/?_wv=1027&amp;k=5AxMKlC"><img src="https://img.shields.io/badge/%E5%B7%B2%E6%BB%A1-180251782-blue.svg" alt="加入QQ群"></a> <a href="https://jq.qq.com/?_wv=1027&amp;k=51G72yr"><img src="https://img.shields.io/badge/%E5%B7%B2%E6%BB%A1-104180207-blue.svg" alt="加入QQ群"></a> <a href="https://jq.qq.com/?_wv=1027&amp;k=VvjN2nvu"><img src="https://img.shields.io/badge/%E5%B7%B2%E6%BB%A1-186866453-blue.svg" alt="加入QQ群"></a> <a href="https://jq.qq.com/?_wv=1027&amp;k=5vYAqA05"><img src="https://img.shields.io/badge/%E5%B7%B2%E6%BB%A1-201396349-blue.svg" alt="加入QQ群"></a> <a href="https://jq.qq.com/?_wv=1027&amp;k=kOIINEb5"><img src="https://img.shields.io/badge/%E5%B7%B2%E6%BB%A1-101456076-blue.svg" alt="加入QQ群"></a> <a href="https://jq.qq.com/?_wv=1027&amp;k=UKtX5jhs"><img src="https://img.shields.io/badge/%E5%B7%B2%E6%BB%A1-101539465-blue.svg" alt="加入QQ群"></a> <a href="https://jq.qq.com/?_wv=1027&amp;k=EI9an8lJ"><img src="https://img.shields.io/badge/%E5%B7%B2%E6%BB%A1-264312783-blue.svg" alt="加入QQ群"></a> <a href="https://jq.qq.com/?_wv=1027&amp;k=SWCtLnMz"><img src="https://img.shields.io/badge/%E5%B7%B2%E6%BB%A1-167385320-blue.svg" alt="加入QQ群"></a> <a href="https://jq.qq.com/?_wv=1027&amp;k=96Dkdq0k"><img src="https://img.shields.io/badge/%E5%B7%B2%E6%BB%A1-104748341-blue.svg" alt="加入QQ群"></a> <a href="https://jq.qq.com/?_wv=1027&amp;k=0fsNiYZt"><img src="https://img.shields.io/badge/%E5%B7%B2%E6%BB%A1-160110482-blue.svg" alt="加入QQ群"></a> <a href="https://jq.qq.com/?_wv=1027&amp;k=7xw4xUG1"><img src="https://img.shields.io/badge/%E5%B7%B2%E6%BB%A1-170801498-blue.svg" alt="加入QQ群"></a> <a href="https://jq.qq.com/?_wv=1027&amp;k=eCx8eyoJ"><img src="https://img.shields.io/badge/%E5%B7%B2%E6%BB%A1-108482800-blue.svg" alt="加入QQ群"></a> <a href="https://jq.qq.com/?_wv=1027&amp;k=SpyH2875"><img src="https://img.shields.io/badge/%E5%B7%B2%E6%BB%A1-101046199-blue.svg" alt="加入QQ群"></a> <a href="https://jq.qq.com/?_wv=1027&amp;k=tKEt51dz"><img src="https://img.shields.io/badge/%E5%B7%B2%E6%BB%A1-136919097-blue.svg" alt="加入QQ群"></a> <a href="http://qm.qq.com/cgi-bin/qm/qr?_wv=1027&amp;k=0vBbSb0ztbBgVtn3kJS-Q4HUNYwip89G&amp;authKey=8irq5PhutrZmWIvsUsklBxhj57l%2F1nOZqjzigkXZVoZE451GG4JHPOqW7AW6cf0T&amp;noverify=0&amp;group_code=143961921"><img src="https://img.shields.io/badge/%E5%B7%B2%E6%BB%A1-143961921-blue.svg" alt="加入QQ群"></a> <a href="http://qm.qq.com/cgi-bin/qm/qr?_wv=1027&amp;k=ZFAPAbp09S2ltvwrJzp7wGlbopsc0rwi&amp;authKey=HB2cxpxP2yspk%2Bo3WKTBfktRCccVkU26cgi5B16u0KcAYrVu7sBaE7XSEqmMdFQp&amp;noverify=0&amp;group_code=174951577"><img src="https://img.shields.io/badge/%E5%B7%B2%E6%BB%A1-174951577-blue.svg" alt="加入QQ群"></a> <a href="http://qm.qq.com/cgi-bin/qm/qr?_wv=1027&amp;k=Fn2aF5IHpwsy8j6VlalNJK6qbwFLFHat&amp;authKey=uyIT%2B97x2AXj3odyXpsSpVaPMC%2Bidw0LxG5MAtEqlrcBcWJUA%2FeS43rsF1Tg7IRJ&amp;noverify=0&amp;group_code=161281055"><img src="https://img.shields.io/badge/%E5%B7%B2%E6%BB%A1-161281055-blue.svg" alt="加入QQ群"></a> <a href="http://qm.qq.com/cgi-bin/qm/qr?_wv=1027&amp;k=XIzkm_mV2xTsUtFxo63bmicYoDBA6Ifm&amp;authKey=dDW%2F4qsmw3x9govoZY9w%2FoWAoC4wbHqGal%2BbqLzoS6VBarU8EBptIgPKN%2FviyC8j&amp;noverify=0&amp;group_code=138988063"><img src="https://img.shields.io/badge/%E5%B7%B2%E6%BB%A1-138988063-blue.svg" alt="加入QQ群"></a> <a href="http://qm.qq.com/cgi-bin/qm/qr?_wv=1027&amp;k=DkugnCg68PevlycJSKSwjhFqfIgrWWwR&amp;authKey=pR1Pa5lPIeGF%2FFtIk6d%2FGB5qFi0EdvyErtpQXULzo03zbhopBHLWcuqdpwY241R%2F&amp;noverify=0&amp;group_code=151450850"><img src="https://img.shields.io/badge/%E5%B7%B2%E6%BB%A1-151450850-blue.svg" alt="加入QQ群"></a> <a href="http://qm.qq.com/cgi-bin/qm/qr?_wv=1027&amp;k=F58bgRa-Dp-rsQJThiJqIYv8t4-lWfXh&amp;authKey=UmUs4CVG5OPA1whvsa4uSespOvyd8%2FAr9olEGaWAfdLmfKQk%2FVBp2YU3u2xXXt76&amp;noverify=0&amp;group_code=224622315"><img src="https://img.shields.io/badge/%E5%B7%B2%E6%BB%A1-224622315-blue.svg" alt="加入QQ群"></a> <a href="http://qm.qq.com/cgi-bin/qm/qr?_wv=1027&amp;k=Nxb2EQ5qozWa218Wbs7zgBnjLSNk_tVT&amp;authKey=obBKXj6SBKgrFTJZx0AqQnIYbNOvBB2kmgwWvGhzxR67RoRr84%2Bus5OadzMcdJl5&amp;noverify=0&amp;group_code=287842588"><img src="https://img.shields.io/badge/%E5%B7%B2%E6%BB%A1-287842588-blue.svg" alt="加入QQ群"></a> <a href="http://qm.qq.com/cgi-bin/qm/qr?_wv=1027&amp;k=numtK1M_I4eVd2Gvg8qtbuL8JgX42qNh&amp;authKey=giV9XWMaFZTY%2FqPlmWbkB9g3fi0Ev5CwEtT9Tgei0oUlFFCQLDp4ozWRiVIzubIm&amp;noverify=0&amp;group_code=187944233"><img src="https://img.shields.io/badge/%E5%B7%B2%E6%BB%A1-187944233-blue.svg" alt="加入QQ群"></a> <a href="http://qm.qq.com/cgi-bin/qm/qr?_wv=1027&amp;k=G6r5KGCaa3pqdbUSXNIgYloyb8e0_L0D&amp;authKey=4w8tF1eGW7%2FedWn%2FHAypQksdrML%2BDHolQSx7094Agm7Luakj9EbfPnSTxSi2T1LQ&amp;noverify=0&amp;group_code=228578329"><img src="https://img.shields.io/badge/228578329-blue.svg" alt="加入QQ群"></a> 点击按钮入群。</p>]]></content>
    
    
    <summary type="html">若依笔记入门</summary>
    
    
    
    <category term="若依" scheme="https://lxttz.github.io/categories/%E8%8B%A5%E4%BE%9D/"/>
    
    
    <category term="若依笔记" scheme="https://lxttz.github.io/tags/%E8%8B%A5%E4%BE%9D%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>免费API接口调用平台推荐</title>
    <link href="https://lxttz.github.io/posts/d46dd430.html"/>
    <id>https://lxttz.github.io/posts/d46dd430.html</id>
    <published>2025-04-11T13:01:19.000Z</published>
    <updated>2025-04-11T13:03:17.435Z</updated>
    
    <content type="html"><![CDATA[<h1>🌟 免费 API 接口调用平台推荐</h1><hr><h2 id="🔹-1-RapidAPI">🔹 <strong>1. RapidAPI</strong></h2><p>🎯 <strong>优点</strong>:<br>✅ 全球最大的 API 市场，覆盖 40,000+ 个 API<br>✅ 提供免费层（通常每月 500-1000 次调用）<br>✅ 支持多种编程语言代码片段生成<br>✅ 可视化测试工具</p><p>⚠️ <strong>缺点</strong>:<br>❌ 部分高需求 API 免费额度较低<br>❌ 需要注册账号才能使用</p><p><a href="https://rapidapi.com/">官网链接</a></p><hr><h2 id="🔹-2-Postman-Public-API-Network">🔹 <strong>2. Postman Public API Network</strong></h2><p>🎯 <strong>优点</strong>:<br>✅ 开发友好的可视化调试界面<br>✅ 可直接导入他人分享的 API 集合<br>✅ 支持自动化测试和工作流<br>✅ 免费层足够个人开发者使用</p><p>⚠️ <strong>缺点</strong>:<br>❌ 高级功能需要付费<br>❌ 需下载客户端/注册账号</p><p><a href="https://www.postman.com/api/">官网链接</a></p><hr><h2 id="🔹-3-APILayer-前身：RESTCountries">🔹 <strong>3. APILayer (前身：RESTCountries)</strong></h2><p>🎯 <strong>优点</strong>:<br>✅ 专精实用型 API（如货币汇率、地理位置等）<br>✅ 无需认证即可试用基础功能<br>✅ 响应速度快，文档清晰</p><p>⚠️ <strong>缺点</strong>:<br>❌ 免费版有功能限制<br>❌ API 种类较垂直</p><p><a href="https://apilayer.com/">官网链接</a></p><hr><h2 id="🔹-4-OpenWeatherMap">🔹 <strong>4. OpenWeatherMap</strong></h2><p>🎯 <strong>优点</strong>:<br>✅ 天气 API 领域头部服务<br>✅ 免费 tier（60次/分钟调用）<br>✅ 提供全球气象数据</p><p>⚠️ <strong>缺点</strong>:<br>❌ 历史数据需要付费<br>❌ 免费版广告较多</p><p><a href="https://openweathermap.org/api">官网链接</a></p><hr><h2 id="🔹-5-JSONPlaceholder">🔹 <strong>5. JSONPlaceholder</strong></h2><p>🎯 <strong>优点</strong>:<br>✅ 完全免费的模拟 REST API<br>✅ 适合前端开发和测试<br>✅ 零配置，开箱即用</p><p>⚠️ <strong>缺点</strong>:<br>❌ 仅提供模拟数据<br>❌ 无真实业务逻辑</p><p><a href="https://jsonplaceholder.typicode.com/">官网链接</a></p><hr><h2 id="🔹-6-AnyAPI">🔹 <strong>6. AnyAPI</strong></h2><p>🎯 <strong>优点</strong>:<br>✅ 无需注册直接调用<br>✅ 聚合实用小工具 API（IP查询、UA解析等）<br>✅ 响应速度快</p><p>⚠️ <strong>缺点</strong>:<br>❌ 功能较简单<br>❌ 无商业级支持</p><p><a href="https://any-api.com/">官网链接</a></p><hr><h2 id="🔹-7-MockAPI">🔹 <strong>7. MockAPI</strong></h2><p>🎯 <strong>优点</strong>:<br>✅ 快速创建自定义 Mock API<br>✅ 支持 REST/GraphQL<br>✅ 免费 tier 可创建 1 个项目</p><p>⚠️ <strong>缺点</strong>:<br>❌ 高级功能付费<br>❌ 需要学习配置</p><p><a href="https://mockapi.io/">官网链接</a></p><hr><h2 id="🔹-8-Public-APIs-GitHub-项目">🔹 <strong>8. Public APIs (GitHub 项目)</strong></h2><p>🎯 <strong>优点</strong>:<br>✅ 社区维护的免费 API 清单<br>✅ 按类别分类（动物/金融/游戏等）<br>✅ 完全开源透明</p><p>⚠️ <strong>缺点</strong>:<br>❌ 需要自行测试稳定性<br>❌ 无统一管理平台</p><p><a href="https://github.com/public-apis/public-apis">GitHub 链接</a></p><hr><p>📌 <strong>使用建议</strong>：根据具体需求选择，测试型开发推荐 JSONPlaceholder，生产环境建议关注 RapidAPI/APILayer 的免费 tier。</p>]]></content>
    
    
    <summary type="html">免费 API 接口调用平台推荐</summary>
    
    
    
    <category term="api" scheme="https://lxttz.github.io/categories/api/"/>
    
    
    <category term="api" scheme="https://lxttz.github.io/tags/api/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot+Vue前后端分离项目如何运行</title>
    <link href="https://lxttz.github.io/posts/b9ef3e19.html"/>
    <id>https://lxttz.github.io/posts/b9ef3e19.html</id>
    <published>2025-04-08T12:34:27.000Z</published>
    <updated>2025-04-11T15:47:37.932Z</updated>
    
    <content type="html"><![CDATA[<h3 id="🤖-Assistant">🤖 Assistant</h3><h1>🚀 SpringBoot + Vue 前后端分离项目运行指南</h1><p>本文介绍如何运行一个基于 <strong>SpringBoot（后端）</strong> + <strong>Vue（前端）</strong> 的前后端分离项目。</p><hr><p>链接</p><h1>springboot运行</h1><p><a href="https://blog.csdn.net/yujun2023/article/details/129974349?ops_request_misc=&amp;request_id=&amp;biz_id=102&amp;utm_term=sprinboot%E8%BF%90%E8%A1%8C&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-0-129974349.142%5Ev102%5Econtrol&amp;spm=1018.2226.3001.4187">springboot运行| 阿洛🥝</a></p><h1>vue运行</h1><p><a href="https://blog.csdn.net/weixin_44209743/article/details/128899429?ops_request_misc=%257B%2522request%255Fid%2522%253A%25227ae613c733975e3baff6909825aa2454%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=7ae613c733975e3baff6909825aa2454&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-128899429-null-null.142%5Ev102%5Econtrol&amp;utm_term=vue%E9%A1%B9%E7%9B%AE%E8%BF%90%E8%A1%8C&amp;spm=1018.2226.3001.4187">vue运行| 阿洛🥝</a></p><h2 id="🔧-运行环境准备">🔧 <strong>运行环境准备</strong></h2><p>在运行项目前，请确保已安装以下环境：</p><table><thead><tr><th>环境</th><th>版本要求</th></tr></thead><tbody><tr><td>JDK</td><td>1.8+</td></tr><tr><td>Maven 或 Gradle</td><td>3.6+</td></tr><tr><td>Node.js</td><td>14.x+</td></tr><tr><td>npm / yarn</td><td>最新版</td></tr></tbody></table><p>🔹 检查安装是否成功：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 检查 JDK</span></span><br><span class="line">java -version</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查 Maven</span></span><br><span class="line">mvn -v</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查 Node.js 和 npm</span></span><br><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure><hr><h2 id="⚙-后端（SpringBoot）运行">⚙ <strong>后端（SpringBoot）运行</strong></h2><ol><li><strong>进入后端项目目录</strong><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> springboot-vue-backend</span><br></pre></td></tr></table></figure></li><li><strong>使用 Maven 编译并运行</strong><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mvn clean install   <span class="comment"># 编译项目</span></span><br><span class="line">mvn spring-boot:run <span class="comment"># 运行项目</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>也可以用 Gradle</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gradle bootRun</span><br></pre></td></tr></table></figure></blockquote></li><li><strong>验证后端是否启动</strong><br>👉 访问 <code>http://localhost:8080</code> 或 <code>http://localhost:8080/api/test</code>（查看是否有接口返回）</li></ol><hr><h2 id="📦-前端（Vue）运行">📦 <strong>前端（Vue）运行</strong></h2><ol><li><strong>进入前端项目目录</strong><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> vue-frontend</span><br></pre></td></tr></table></figure></li><li><strong>安装依赖（首次运行需要）</strong><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install  <span class="comment"># 或 yarn install</span></span><br></pre></td></tr></table></figure></li><li><strong>运行 Vue 项目</strong><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run serve  <span class="comment"># 或 yarn serve</span></span><br></pre></td></tr></table></figure><blockquote><p>开发模式默认访问 <code>http://localhost:8081</code>（可能需要 <code>--port 8081</code> 避免端口冲突）</p></blockquote></li><li><strong>访问前端页面</strong><br>👉 打开浏览器访问 <code>http://localhost:8081</code></li></ol><hr><h2 id="🔗-前后端联调配置">🔗 <strong>前后端联调配置</strong></h2><ol><li><strong>后端 API 跨域（SpringBoot）</strong><br>在 <code>application.properties</code> 或 <code>@CrossOrigin</code> 注解配置跨域：<figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># application.properties</span></span><br><span class="line"><span class="attr">server.port</span>=<span class="string">8080</span></span><br><span class="line"><span class="attr">spring.mvc.cors.allowed-origins</span>=<span class="string">http://localhost:8081</span></span><br></pre></td></tr></table></figure></li><li><strong>前端 API 代理（Vue）</strong><br>在 <code>vue.config.js</code> 中配置后端代理，避免跨域问题：<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">devServer</span>: &#123;</span><br><span class="line">    <span class="attr">proxy</span>: &#123;</span><br><span class="line">      <span class="string">&#x27;/api&#x27;</span>: &#123;</span><br><span class="line">        <span class="attr">target</span>: <span class="string">&#x27;http://localhost:8080&#x27;</span>, <span class="comment">// 后端地址</span></span><br><span class="line">        <span class="attr">changeOrigin</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">pathRewrite</span>: &#123; <span class="string">&#x27;^/api&#x27;</span>: <span class="string">&#x27;&#x27;</span> &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h2 id="🏁-运行效果">🏁 <strong>运行效果</strong></h2><p>✅ <strong>后端 API 正常运行</strong>：<br><img src="https://via.placeholder.com/300x200?text=SpringBoot+Running" alt="后端运行"><br>✅ <strong>前端页面访问</strong>：<br><img src="https://via.placeholder.com/300x200?text=Vue+Running" alt="前端运行"></p><hr><h2 id="🔥-常见问题">🔥 <strong>常见问题</strong></h2><table><thead><tr><th>问题</th><th>解决方案</th></tr></thead><tbody><tr><td><code>npm install</code> 报错</td><td>尝试 <code>npm cache clean --force</code> 或 <code>rm -rf node_modules package-lock.json</code></td></tr><tr><td>端口冲突</td><td>修改后端 <code>server.port</code> 或前端 <code>npm run serve --port 8082</code></td></tr><tr><td>跨域请求失败</td><td>确保已正确配置 <code>@CrossOrigin</code> 或 <code>vue.config.js</code> 代理</td></tr></tbody></table><hr><h2 id="📌-总结">📌 <strong>总结</strong></h2><ol><li><strong>后端</strong>：<code>mvn spring-boot:run</code>（SpringBoot）</li><li><strong>前端</strong>：<code>npm run serve</code>（Vue）</li><li><strong>联调</strong>：配置跨域或代理即可前后端通信</li></ol><p>🚀 <strong>运行成功！</strong> 现在你可以开发完整的前后端分离项目了！</p>]]></content>
    
    
    <summary type="html">SpringBoot+Vue前后端分离项目如何运行</summary>
    
    
    
    <category term="springboot" scheme="https://lxttz.github.io/categories/springboot/"/>
    
    <category term="vue" scheme="https://lxttz.github.io/categories/springboot/vue/"/>
    
    <category term="全栈" scheme="https://lxttz.github.io/categories/springboot/vue/%E5%85%A8%E6%A0%88/"/>
    
    
    <category term="SpringBoot+Vue前后端分离项目如何运行" scheme="https://lxttz.github.io/tags/SpringBoot-Vue%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB%E9%A1%B9%E7%9B%AE%E5%A6%82%E4%BD%95%E8%BF%90%E8%A1%8C/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot+Vue前后端分离项目结构</title>
    <link href="https://lxttz.github.io/posts/23a338a7.html"/>
    <id>https://lxttz.github.io/posts/23a338a7.html</id>
    <published>2025-04-08T12:32:26.000Z</published>
    <updated>2025-04-08T12:36:02.197Z</updated>
    
    <content type="html"><![CDATA[<h3 id="🤖-Assistant">🤖 Assistant</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 🌱 SpringBoot + Vue 前后端分离项目结构</span></span><br><span class="line"></span><br><span class="line"><span class="section">## 📁 项目根目录</span></span><br></pre></td></tr></table></figure><p>project-root/<br>├── backend/          # 🖥️ SpringBoot 后端代码<br>├── frontend/         # 🖌️ Vue 前端代码<br>├── docs/             # 📚 项目文档<br>└── <a href="http://README.md">README.md</a>         # 📋 项目说明文件</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">## 🖥️ 后端结构 (SpringBoot)</span><br></pre></td></tr></table></figure><p>backend/<br>├── src/<br>│   ├── main/<br>│   │   ├── java/com/example/<br>│   │   │   ├── config/       # ⚙️ 配置类<br>│   │   │   ├── controller/   # 🎮 API接口层<br>│   │   │   ├── service/      # 🔧 业务逻辑层<br>│   │   │   ├── repository/   # 💾 数据访问层<br>│   │   │   ├── model/        # 🧩 数据实体类<br>│   │   │   └── exception/    # ❌ 异常处理<br>│   │   └── resources/<br>│   │       ├── application.yml  # 🛠️ 应用配置<br>│   │       └── static/          # 🏗️ 前端构建后资源（可选）<br>├── target/           # 📦 构建输出目录<br>└── pom.xml           # 🧶 Maven依赖管理</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">## 🖌️ 前端结构 (Vue <span class="number">3</span>)</span><br></pre></td></tr></table></figure><p>frontend/<br>├── public/           # 🏠 静态资源<br>├── src/<br>│   ├── api/          # 📡 接口请求封装<br>│   ├── assets/       # 🎨 静态资源<br>│   ├── components/   # 🧩 公共组件<br>│   ├── router/       # 🗺️ 路由配置<br>│   ├── store/        # 🏪 Vuex状态管理<br>│   ├── views/        # 🖼️ 页面组件<br>│   ├── App.vue       # 🌐 根组件<br>│   └── main.js       # ⚡ 入口文件<br>├── package.json      # 📦 依赖管理<br>└── vite.config.js    # ⚙️ Vite配置</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="section">## 🔄 交互流程</span></span><br><span class="line"><span class="bullet">1.</span> 🌐 用户访问前端页面 (Vue)</span><br><span class="line"><span class="bullet">2.</span> 📡 前端通过axios调用后端API (SpringBoot)</span><br><span class="line"><span class="bullet">3.</span> 🛠️ 后端处理请求并返回JSON数据</span><br><span class="line"><span class="bullet">4.</span> 🎨 前端动态渲染页面</span><br><span class="line"></span><br><span class="line"><span class="section">## 🔧 开发环境</span></span><br></pre></td></tr></table></figure><p>🛠️ 后端: JDK 17+ + IDE（IntelliJ IDEA/VSCode）<br>🎨 前端: Node.js 16+ + VSCode<br>📦 构建: Maven（后端） + Vite（前端）</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="section">## ⚠️ 注意事项</span></span><br><span class="line"><span class="bullet">-</span> 🔒 跨域配置（后端需添加<span class="code">`@CrossOrigin`</span>或全局配置）</span><br><span class="line"><span class="bullet">-</span> 🔄 API文档建议使用Swagger</span><br><span class="line"><span class="bullet">-</span> 🌐 部署时前端打包后文件可放入后端static目录或单独部署</span><br></pre></td></tr></table></figure><blockquote><p>图标说明：📁 文件夹 🖥️ 后端 🎨 前端 ⚙️ 配置 📡 接口 🧩 组件</p></blockquote>]]></content>
    
    
    <summary type="html">SpringBoot+Vue前后端分离项目结构</summary>
    
    
    
    <category term="springboot" scheme="https://lxttz.github.io/categories/springboot/"/>
    
    <category term="vue" scheme="https://lxttz.github.io/categories/springboot/vue/"/>
    
    <category term="全栈" scheme="https://lxttz.github.io/categories/springboot/vue/%E5%85%A8%E6%A0%88/"/>
    
    
    <category term="pringBoot+Vue前后端分离项目结构" scheme="https://lxttz.github.io/tags/pringBoot-Vue%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB%E9%A1%B9%E7%9B%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot+Vue 项目知识点总结</title>
    <link href="https://lxttz.github.io/posts/502688e5.html"/>
    <id>https://lxttz.github.io/posts/502688e5.html</id>
    <published>2025-04-07T07:25:11.000Z</published>
    <updated>2025-04-07T10:45:56.552Z</updated>
    
    <content type="html"><![CDATA[<h3 id="🤖-Assistant">🤖 Assistant</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 📚 SpringBoot + Vue 项目知识点总结  </span></span><br><span class="line"></span><br><span class="line"><span class="section">## 🚀 学习路径  </span></span><br><span class="line"><span class="bullet">1.</span> <span class="strong">**前置知识**</span>  </span><br><span class="line"><span class="bullet">   -</span> ✅ Java 基础 + Spring 框架  </span><br><span class="line"><span class="bullet">   -</span> ✅ Vue.js 基础（组件、路由、状态管理）  </span><br><span class="line"><span class="bullet">   -</span> ✅ RESTful API 概念  </span><br><span class="line"><span class="bullet">   -</span> ✅ MySQL / PostgreSQL 数据库基础  </span><br><span class="line"></span><br><span class="line"><span class="bullet">2.</span> <span class="strong">**学习顺序**</span>  </span><br><span class="line"><span class="bullet">   -</span> <span class="strong">**后端（SpringBoot）→ 前端（Vue）→ 整合（前后端分离开发）**</span>  </span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line"><span class="section">## 📌 核心知识点  </span></span><br><span class="line"></span><br><span class="line"><span class="section">### 🛠 <span class="strong">**后端（SpringBoot）**</span>  </span></span><br><span class="line"><span class="bullet">1.</span> <span class="strong">**基础框架**</span>  </span><br><span class="line"><span class="bullet">   -</span> <span class="code">`@SpringBootApplication`</span> 启动类  </span><br><span class="line"><span class="bullet">   -</span> <span class="code">`Spring MVC`</span> 架构（Controller-Service-Repository）  </span><br><span class="line"><span class="bullet">   -</span> <span class="code">`Spring Data JPA`</span> / <span class="code">`MyBatis`</span> 数据库操作  </span><br><span class="line"></span><br><span class="line"><span class="bullet">2.</span> <span class="strong">**核心注解**</span>  </span><br><span class="line"><span class="bullet">   -</span> <span class="code">`@RestController`</span> (返回 JSON)  </span><br><span class="line"><span class="bullet">   -</span> <span class="code">`@RequestMapping`</span> / <span class="code">`@GetMapping`</span> / <span class="code">`@PostMapping`</span>  </span><br><span class="line"><span class="bullet">   -</span> <span class="code">`@Autowired`</span> 依赖注入  </span><br><span class="line"></span><br><span class="line"><span class="bullet">3.</span> <span class="strong">**数据库 &amp; ORM**</span>  </span><br><span class="line"><span class="bullet">   -</span> JPA 方法命名查询 / <span class="code">`@Query`</span>  </span><br><span class="line"><span class="bullet">   -</span> <span class="code">`@Entity`</span> 实体类映射  </span><br><span class="line"><span class="bullet">   -</span> 分页（<span class="code">`Pageable`</span>）  </span><br><span class="line"></span><br><span class="line"><span class="bullet">4.</span> <span class="strong">**安全 &amp; 认证**</span>  </span><br><span class="line"><span class="bullet">   -</span> <span class="code">`Spring Security`</span> / <span class="code">`JWT`</span> 鉴权  </span><br><span class="line"></span><br><span class="line"><span class="bullet">5.</span> <span class="strong">**API 规范**</span>  </span><br><span class="line"><span class="bullet">   -</span> RESTful 接口设计  </span><br><span class="line"><span class="bullet">   -</span> Swagger / OpenAPI 文档  </span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line"><span class="section">### 🎨 <span class="strong">**前端（Vue）**</span>  </span></span><br><span class="line"><span class="bullet">1.</span> <span class="strong">**核心概念**</span>  </span><br><span class="line"><span class="bullet">   -</span> Vue 组件化开发  </span><br><span class="line"><span class="bullet">   -</span> 数据绑定（<span class="code">`v-model`</span>）  </span><br><span class="line"><span class="bullet">   -</span> 生命周期钩子（<span class="code">`created`</span>, <span class="code">`mounted`</span>）  </span><br><span class="line"></span><br><span class="line"><span class="bullet">2.</span> <span class="strong">**状态管理**</span>  </span><br><span class="line"><span class="bullet">   -</span> <span class="code">`Vuex`</span>（集中式状态）  </span><br><span class="line"><span class="bullet">   -</span> <span class="code">`Pinia`</span>（推荐新项目使用）  </span><br><span class="line"></span><br><span class="line"><span class="bullet">3.</span> <span class="strong">**路由**</span>  </span><br><span class="line"><span class="bullet">   -</span> <span class="code">`vue-router`</span>（动态路由、嵌套路由）  </span><br><span class="line"></span><br><span class="line"><span class="bullet">4.</span> <span class="strong">**HTTP 请求**</span>  </span><br><span class="line"><span class="bullet">   -</span> <span class="code">`axios`</span> 调用后端 REST API  </span><br><span class="line"></span><br><span class="line"><span class="bullet">5.</span> <span class="strong">**UI 框架（可选）**</span>  </span><br><span class="line"><span class="bullet">   -</span> Element Plus / Ant Design Vue  </span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line"><span class="section">## 🔥 快速搭建 SpringBoot + Vue 项目  </span></span><br><span class="line"></span><br><span class="line"><span class="section">### 步骤 1: 初始化后端（SpringBoot）  </span></span><br><span class="line"><span class="bullet">1.</span> 使用 [<span class="string">Spring Initializr</span>](<span class="link">https://start.spring.io/</span>) 生成项目:  </span><br><span class="line"><span class="bullet">   -</span> 勾选 <span class="code">`Spring Web`</span>, <span class="code">`Lombok`</span>, <span class="code">`Spring Data JPA`</span>, <span class="code">`MySQL Driver`</span>  </span><br><span class="line"></span><br><span class="line"><span class="bullet">2.</span> 编写 <span class="code">`UserController`</span>:  </span><br><span class="line">   <span class="code">```java</span></span><br><span class="line"><span class="code">   @RestController</span></span><br><span class="line"><span class="code">   @RequestMapping(&quot;/api/users&quot;)</span></span><br><span class="line"><span class="code">   public class UserController &#123;</span></span><br><span class="line"><span class="code">       @Autowired</span></span><br><span class="line"><span class="code">       private UserService userService;</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code">       @GetMapping</span></span><br><span class="line"><span class="code">       public List&lt;User&gt; getAllUsers() &#123;</span></span><br><span class="line"><span class="code">           return userService.findAll();</span></span><br><span class="line"><span class="code">       &#125;</span></span><br><span class="line"><span class="code">   &#125;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>配置 <code>application.properties</code>:<figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring.datasource.url</span>=<span class="string">jdbc:mysql://localhost:3306/your_db</span></span><br><span class="line"><span class="attr">spring.datasource.username</span>=<span class="string">root</span></span><br><span class="line"><span class="attr">spring.datasource.password</span>=<span class="string">123456</span></span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="步骤-2-初始化前端（Vue）">步骤 2: 初始化前端（Vue）</h3><ol><li><p>用 Vite 创建 Vue 项目:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm init vite@latest frontend --template vue</span><br><span class="line"><span class="built_in">cd</span> frontend &amp;&amp; npm install axios vue-router pinia</span><br></pre></td></tr></table></figure></li><li><p>调用后端 API（<code>src/api/user.js</code>）:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">getUsers</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> axios.<span class="title function_">get</span>(<span class="string">&#x27;http://localhost:8080/api/users&#x27;</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li><li><p>跨域配置（<code>vite.config.js</code>）:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineConfig</span>(&#123;</span><br><span class="line">  <span class="attr">server</span>: &#123;</span><br><span class="line">    <span class="attr">proxy</span>: &#123;</span><br><span class="line">      <span class="string">&#x27;/api&#x27;</span>: <span class="string">&#x27;http://localhost:8080&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li></ol><hr><h2 id="📝-学习资源推荐">📝 学习资源推荐</h2><ul><li><strong>SpringBoot</strong>: Baeldung / 官方文档</li><li><strong>Vue</strong>: 官方文档 + Vue Mastery 教程</li><li><strong>实战</strong>: GitHub 开源项目（如 <code>eladmin-web</code> + <code>eladmin</code>）</li></ul><h2 id="🌟-学习建议">🌟 学习建议</h2><ul><li>先单独调试后端（Postman 测试 API）</li><li>再调试前端（Chrome DevTools 看请求）</li><li>最后联调（解决跨域、数据格式问题）</li></ul><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### 🎯 效果说明  </span><br><span class="line">- 使用了 Emoji 图标增强可读性  </span><br><span class="line">- 分模块拆解知识点  </span><br><span class="line">- 提供可操作的代码片段  </span><br><span class="line">- 强调前后端分离的核心逻辑</span><br><span class="line"></span><br><span class="line">### 🤖 Assistant</span><br><span class="line"></span><br><span class="line">```markdown</span><br><span class="line"># 🌱 SpringBoot + Vue 全栈开发指南</span><br><span class="line"></span><br><span class="line">## 🏗️ 一、技术架构概览</span><br><span class="line">### 后端技术栈 (SpringBoot)</span><br><span class="line">```mermaid</span><br><span class="line">graph TD</span><br><span class="line">    A[SpringBoot] --&gt; B[Spring MVC]</span><br><span class="line">    A --&gt; C[Spring Security]</span><br><span class="line">    A --&gt; D[MyBatis/MyBatis-Plus]</span><br><span class="line">    A --&gt; E[Spring Data JPA]</span><br><span class="line">    F[MySQL/PostgreSQL] --&gt; D</span><br><span class="line">    G[Redis] --&gt; C</span><br></pre></td></tr></table></figure><h3 id="前端技术栈-Vue">前端技术栈 (Vue)</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">graph TD</span><br><span class="line">    A[Vue3] --&gt; B[Vue Router]</span><br><span class="line">    A --&gt; C[Pinia/Vuex]</span><br><span class="line">    A --&gt; D[Axios]</span><br><span class="line">    A --&gt; E[Element Plus/Ant Design Vue]</span><br><span class="line">    A --&gt; F[Vite]</span><br></pre></td></tr></table></figure><h2 id="📚-二、完整学习路径">📚 二、完整学习路径</h2><h3 id="1-基础阶段（2-4周）">1. 基础阶段（2-4周）</h3><h4 id="后端基础">后端基础</h4><ul><li>✅ SpringBoot核心特性<ul><li>自动配置原理</li><li>Starter机制</li><li>Actuator监控</li></ul></li><li>✅ RESTful API设计<ul><li>常用注解：@RestController, @RequestMapping</li><li>统一响应封装</li><li>全局异常处理</li></ul></li></ul><h4 id="前端基础">前端基础</h4><ul><li>🖥️ Vue3核心语法<ul><li>Composition API</li><li>响应式原理(ref/reactive)</li><li>组件通信</li></ul></li><li>🌐 Vue Router 4.x<ul><li>动态路由</li><li>导航守卫</li><li>路由懒加载</li></ul></li></ul><h3 id="2-进阶阶段（3-5周）">2. 进阶阶段（3-5周）</h3><h4 id="后端进阶">后端进阶</h4><ul><li>🛡️ 安全控制<ul><li>JWT实现</li><li>Spring Security配置</li><li>权限注解(@PreAuthorize)</li></ul></li><li>🔄 数据持久化<ul><li>MyBatis动态SQL</li><li>多数据源配置</li><li>事务管理</li></ul></li></ul><h4 id="前端进阶">前端进阶</h4><ul><li>🏪 状态管理<ul><li>Pinia基础</li><li>模块化设计</li><li>持久化存储</li></ul></li><li>📡 网络请求<ul><li>Axios封装</li><li>请求拦截器</li><li>错误统一处理</li></ul></li></ul><h2 id="🚀-三、项目快速搭建指南">🚀 三、项目快速搭建指南</h2><h3 id="1-环境准备">1. 环境准备</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 后端环境</span></span><br><span class="line">JDK 17+</span><br><span class="line">Maven 3.8+</span><br><span class="line">MySQL 8.0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 前端环境</span></span><br><span class="line">Node.js 16+</span><br><span class="line">npm/yarn/pnpm</span><br></pre></td></tr></table></figure><h3 id="2-项目初始化">2. 项目初始化</h3><h4 id="后端创建">后端创建</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用Spring Initializr</span></span><br><span class="line">https://start.spring.io/</span><br><span class="line"></span><br><span class="line">选择依赖：</span><br><span class="line">- Spring Web</span><br><span class="line">- Lombok</span><br><span class="line">- MyBatis Framework</span><br><span class="line">- MySQL Driver</span><br></pre></td></tr></table></figure><h4 id="前端创建">前端创建</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm create vite@latest frontend --template vue</span><br><span class="line"><span class="built_in">cd</span> frontend</span><br><span class="line">npm install vue-router pinia axios element-plus</span><br></pre></td></tr></table></figure><h3 id="3-关键配置示例">3. 关键配置示例</h3><h4 id="后端配置">后端配置</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// application.yml</span></span><br><span class="line">spring:</span><br><span class="line">  datasource:</span><br><span class="line">    url: jdbc:mysql:<span class="comment">//localhost:3306/demo</span></span><br><span class="line">    username: root</span><br><span class="line">    password: <span class="number">123456</span></span><br><span class="line">    driver-class-name: com.mysql.cj.jdbc.Driver</span><br><span class="line"></span><br><span class="line">mybatis:</span><br><span class="line">  mapper-locations: classpath:mapper<span class="comment">/*.xml</span></span><br></pre></td></tr></table></figure><h4 id="前端配置">前端配置</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// vite.config.js</span></span><br><span class="line"><span class="keyword">import</span> &#123; defineConfig &#125; <span class="keyword">from</span> <span class="string">&#x27;vite&#x27;</span></span><br><span class="line"><span class="keyword">import</span> vue <span class="keyword">from</span> <span class="string">&#x27;@vitejs/plugin-vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; fileURLToPath &#125; <span class="keyword">from</span> <span class="string">&#x27;url&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineConfig</span>(&#123;</span><br><span class="line">  <span class="attr">plugins</span>: [<span class="title function_">vue</span>()],</span><br><span class="line">  <span class="attr">resolve</span>: &#123;</span><br><span class="line">    <span class="attr">alias</span>: &#123;</span><br><span class="line">      <span class="string">&#x27;@&#x27;</span>: <span class="title function_">fileURLToPath</span>(<span class="keyword">new</span> <span class="title function_">URL</span>(<span class="string">&#x27;./src&#x27;</span>, <span class="keyword">import</span>.<span class="property">meta</span>.<span class="property">url</span>))</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">server</span>: &#123;</span><br><span class="line">    <span class="attr">proxy</span>: &#123;</span><br><span class="line">      <span class="string">&#x27;/api&#x27;</span>: &#123;</span><br><span class="line">        <span class="attr">target</span>: <span class="string">&#x27;http://localhost:8080&#x27;</span>,</span><br><span class="line">        <span class="attr">changeOrigin</span>: <span class="literal">true</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="🔧-四、开发实用技巧">🔧 四、开发实用技巧</h2><h3 id="跨域解决方案">跨域解决方案</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 后端配置CORS</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CorsConfig</span> <span class="keyword">implements</span> <span class="title class_">WebMvcConfigurer</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addCorsMappings</span><span class="params">(CorsRegistry registry)</span> &#123;</span><br><span class="line">        registry.addMapping(<span class="string">&quot;/**&quot;</span>)</span><br><span class="line">                .allowedOrigins(<span class="string">&quot;*&quot;</span>)</span><br><span class="line">                .allowedMethods(<span class="string">&quot;*&quot;</span>)</span><br><span class="line">                .maxAge(<span class="number">3600</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="全局异常处理">全局异常处理</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ControllerAdvice</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GlobalExceptionHandler</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ExceptionHandler(Exception.class)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="keyword">public</span> Result&lt;String&gt; <span class="title function_">handleException</span><span class="params">(Exception e)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> Result.error(e.getMessage());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="前端API封装">前端API封装</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// src/api/index.js</span></span><br><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> service = axios.<span class="title function_">create</span>(&#123;</span><br><span class="line">  <span class="attr">baseURL</span>: <span class="string">&#x27;/api&#x27;</span>,</span><br><span class="line">  <span class="attr">timeout</span>: <span class="number">10000</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 请求拦截器</span></span><br><span class="line">service.<span class="property">interceptors</span>.<span class="property">request</span>.<span class="title function_">use</span>(<span class="function"><span class="params">config</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> token = <span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&#x27;token&#x27;</span>)</span><br><span class="line">  <span class="keyword">if</span> (token) &#123;</span><br><span class="line">    config.<span class="property">headers</span>[<span class="string">&#x27;Authorization&#x27;</span>] = <span class="string">`Bearer <span class="subst">$&#123;token&#125;</span>`</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> config</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 响应拦截器</span></span><br><span class="line">service.<span class="property">interceptors</span>.<span class="property">response</span>.<span class="title function_">use</span>(</span><br><span class="line">  <span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> response.<span class="property">data</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(error)</span><br><span class="line">  &#125;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> service</span><br></pre></td></tr></table></figure><h2 id="📦-五、部署方案">📦 五、部署方案</h2><h3 id="1-后端打包">1. 后端打包</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mvn clean package -DskipTests</span><br><span class="line">java -jar target/demo-0.0.1-SNAPSHOT.jar</span><br></pre></td></tr></table></figure><h3 id="2-前端打包">2. 前端打包</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run build</span><br></pre></td></tr></table></figure><h3 id="3-部署架构选择">3. 部署架构选择</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1.</span> 传统部署</span><br><span class="line"><span class="bullet">   -</span> Nginx反向代理</span><br><span class="line"><span class="bullet">   -</span> 静态资源部署</span><br><span class="line"></span><br><span class="line"><span class="bullet">2.</span> Docker化部署</span><br><span class="line"><span class="bullet">   -</span> Docker Compose编排</span><br><span class="line"><span class="bullet">   -</span> Nginx容器配置</span><br><span class="line"></span><br><span class="line"><span class="bullet">3.</span> CI/CD方案</span><br><span class="line"><span class="bullet">   -</span> Jenkins Pipeline</span><br><span class="line"><span class="bullet">   -</span> GitHub Actions</span><br></pre></td></tr></table></figure><h2 id="📝-六、学习资源推荐">📝 六、学习资源推荐</h2><ul><li>书籍：<ul><li>《Spring Boot实战》</li><li>《Vue.js设计与实现》</li></ul></li><li>视频：<ul><li>B站尚硅谷SpringBoot+Vue全栈课程</li></ul></li><li>文档：<ul><li><a href="https://spring.io/projects/spring-boot">Spring官方文档</a></li><li><a href="https://vuejs.org/">Vue官方文档</a></li></ul></li><li>社区：<ul><li>StackOverflow</li><li>GitHub热门开源项目</li></ul></li></ul><h2 id="🚨-常见问题排查">🚨 常见问题排查</h2><ol><li><p>端口冲突：检查8080/3000端口占用</p></li><li><p>数据库连接失败：检查MySQL服务状态和账号权限</p></li><li><p>跨域问题：确保前后端CORS配置正确</p></li><li><p>前端路由404：配置Nginx重定向规则</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">   </span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
    <summary type="html">SpringBoot + Vue 项目知识点总结</summary>
    
    
    
    <category term="SpringBoot" scheme="https://lxttz.github.io/categories/SpringBoot/"/>
    
    <category term="Vue" scheme="https://lxttz.github.io/categories/SpringBoot/Vue/"/>
    
    
    <category term="SpringBoot+Vue 项目知识点总结" scheme="https://lxttz.github.io/tags/SpringBoot-Vue-%E9%A1%B9%E7%9B%AE%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>解决博客文章嵌入网页显示不足的方法</title>
    <link href="https://lxttz.github.io/posts/42339686.html"/>
    <id>https://lxttz.github.io/posts/42339686.html</id>
    <published>2025-03-27T09:57:32.000Z</published>
    <updated>2025-03-27T10:00:10.168Z</updated>
    
    <content type="html"><![CDATA[<h1>一般代码</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">align</span>=<span class="string">center</span> <span class="attr">class</span>=<span class="string">&quot;aspect-ratio&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;https://geekprank.com/hacker/&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">scrolling</span>=<span class="string">&quot;true&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">border</span>=<span class="string">&quot;0&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">frameborder</span>=<span class="string">&quot;true&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">framespacing</span>=<span class="string">&quot;0&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">high_quality</span>=<span class="string">1</span></span></span><br><span class="line"><span class="tag">    <span class="attr">danmaku</span>=<span class="string">1</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">allowfullscreen</span>=<span class="string">&quot;true&quot;</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>要让嵌入的网页内容完整显示在iframe中，建议采用以下方案：</p><ol><li><strong>动态调整高度方案</strong>（推荐）：</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">align</span>=<span class="string">center</span> <span class="attr">class</span>=<span class="string">&quot;aspect-ratio&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;https://jishiqi-evx.pages.dev/&quot;</span> </span></span><br><span class="line"><span class="tag">            <span class="attr">scrolling</span>=<span class="string">&quot;no&quot;</span> </span></span><br><span class="line"><span class="tag">            <span class="attr">border</span>=<span class="string">&quot;0&quot;</span> </span></span><br><span class="line"><span class="tag">            <span class="attr">frameborder</span>=<span class="string">&quot;0&quot;</span> </span></span><br><span class="line"><span class="tag">            <span class="attr">framespacing</span>=<span class="string">&quot;0&quot;</span> </span></span><br><span class="line"><span class="tag">            <span class="attr">allowfullscreen</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">id</span>=<span class="string">&quot;dynamic-iframe&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;dynamic-iframe&#x27;</span>).<span class="property">onload</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">this</span>.<span class="property">style</span>.<span class="property">height</span> = <span class="variable language_">this</span>.<span class="property">contentWindow</span>.<span class="property">document</span>.<span class="property">documentElement</span>.<span class="property">scrollHeight</span> + <span class="string">&#x27;px&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">this</span>.<span class="property">style</span>.<span class="property">width</span> = <span class="variable language_">this</span>.<span class="property">contentWindow</span>.<span class="property">document</span>.<span class="property">documentElement</span>.<span class="property">scrollWidth</span> + <span class="string">&#x27;px&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">&#125;;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li><strong>固定尺寸方案</strong>（简单直接）：选择这个方法最好</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">align</span>=<span class="string">center</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;https://jishiqi-evx.pages.dev/&quot;</span> </span></span><br><span class="line"><span class="tag">            <span class="attr">scrolling</span>=<span class="string">&quot;auto&quot;</span> </span></span><br><span class="line"><span class="tag">            <span class="attr">border</span>=<span class="string">&quot;0&quot;</span> </span></span><br><span class="line"><span class="tag">            <span class="attr">frameborder</span>=<span class="string">&quot;0&quot;</span> </span></span><br><span class="line"><span class="tag">            <span class="attr">framespacing</span>=<span class="string">&quot;0&quot;</span> </span></span><br><span class="line"><span class="tag">            <span class="attr">width</span>=<span class="string">&quot;100%&quot;</span> </span></span><br><span class="line"><span class="tag">            <span class="attr">height</span>=<span class="string">&quot;800px&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">allowfullscreen</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li><strong>响应式布局方案</strong>：</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;position: relative; padding-top: 56.25%;&quot;</span>&gt;</span> <span class="comment">&lt;!-- 16:9比例 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;https://jishiqi-evx.pages.dev/&quot;</span> </span></span><br><span class="line"><span class="tag">            <span class="attr">scrolling</span>=<span class="string">&quot;no&quot;</span> </span></span><br><span class="line"><span class="tag">            <span class="attr">border</span>=<span class="string">&quot;0&quot;</span> </span></span><br><span class="line"><span class="tag">            <span class="attr">frameborder</span>=<span class="string">&quot;0&quot;</span> </span></span><br><span class="line"><span class="tag">            <span class="attr">framespacing</span>=<span class="string">&quot;0&quot;</span> </span></span><br><span class="line"><span class="tag">            <span class="attr">style</span>=<span class="string">&quot;position: absolute; top: 0; left: 0; width: 100%; height: 100%;&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">allowfullscreen</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>注意事项：</strong></p><ol><li>动态方案需要目标页面支持跨域通信（如果同源则无需处理）</li><li>固定尺寸方案需要根据实际内容调整高度</li><li>响应式方案会保持16:9比例，适合视频类内容</li><li>建议保留allowfullscreen属性以支持全屏功能</li><li>如果内容包含动态加载部分，可能需要添加MutationObserver来持续调整高度</li></ol><p>推荐使用第一种动态方案，它可以根据内容自动调整尺寸，实现无滚动条完整显示。如果内容包含复杂交互或动态加载元素，建议结合ResizeObserver API实现更精确的尺寸控制。</p>]]></content>
    
    
    <summary type="html">解决博客文章嵌入网页显示不足的方法</summary>
    
    
    
    <category term="博客" scheme="https://lxttz.github.io/categories/%E5%8D%9A%E5%AE%A2/"/>
    
    
    <category term="博客技巧" scheme="https://lxttz.github.io/tags/%E5%8D%9A%E5%AE%A2%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
</feed>
